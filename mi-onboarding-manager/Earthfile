# SPDX-FileCopyrightText: (C) 2023 Intel Corporation
# SPDX-License-Identifier: LicenseRef-Intel
VERSION 0.7

LOCALLY
ARG http_proxy=$(echo $http_proxy)
ARG https_proxy=$(echo $https_proxy)
ARG no_proxy=$(echo $no_proxy)
ARG HTTP_PROXY=$(echo $HTTP_PROXY)
ARG HTTPS_PROXY=$(echo $HTTPS_PROXY)
ARG NO_PROXY=$(echo $NO_PROXY)
ARG DOCKER_REGISTRY=$(echo $DOCKER_REGISTRY)
ARG DOCKER_REPOSITORY=$(echo $DOCKER_REPOSITORY)
ARG IMG_NAME=$(echo $IMG_NAME)
ARG VERSION=$(echo $VERSION)

FROM golang:1.21.1-bullseye
ENV http_proxy=$http_proxy
ENV https_proxy=$https_proxy
ENV no_proxy=$no_proxy
ENV HTTP_PROXY=$HTTP_PROXY
ENV HTTPS_PROXY=$HTTPS_PROXY
ENV NO_PROXY=$NO_PROXY
ENV DOCKER_REGISTRY=$DOCKER_REGISTRY
ENV DOCKER_REPOSITORY=$DOCKER_REPOSITORY
ENV IMG_NAME=$IMG_NAME
ENV VERSION=$VERSION

ARG --global DOCKER_REGISTRY=$(echo $DOCKER_REGISTRY)
ARG --global DOCKER_REPOSITORY=$(echo $DOCKER_REPOSITORY)
ARG --global IMG_NAME=$(echo $IMG_NAME)
ARG --global VERSION=$(echo $VERSION)

all:
    BUILD +build-onboarding-stack

build:
    BUILD +build-onboardingmgr
    BUILD +docker-onboardingmgr
    BUILD +build-pdctl

build-onboarding-stack:
    BUILD +build-onboardingmgr
    BUILD +docker-onboardingmgr
    BUILD +build-pdctl
    BUILD +build-onboardingmgrtest

build-onboardingmgr:
    ARG version='0.0.0-unknown'
    WORKDIR /work
    COPY . .
    RUN --mount=type=cache,target=/root/.cache/go-build CGO_ENABLED=0 GOARCH=amd64 GOOS=linux \
        go build -trimpath -o build/onboardingmgr \
            -ldflags "-s -w -extldflags '-static' -X main.Version=$version" \
            ./cmd/onboardingmgr
    SAVE ARTIFACT build/onboardingmgr
    
build-onboardingmgrtest:
    ARG version='0.0.0-unknown'
    WORKDIR /work
    COPY . .
    RUN go test -v ./...

docker-onboardingmgr:
    FROM scratch
    ARG version='0.0.0-unknown'
    COPY (+build-onboardingmgr/onboardingmgr --version=$version) .
    ENTRYPOINT ["/onboardingmgr"]
    SAVE IMAGE $DOCKER_REGISTRY/$DOCKER_REPOSITORY/$IMG_NAME:$VERSION

build-pdctl:
    ARG version='0.0.0-unknown'
    WORKDIR /work
    COPY . .
    RUN --mount=type=cache,target=/root/.cache/go-build CGO_ENABLED=0 GOARCH=amd64 GOOS=linux \
        go build -trimpath -o build/exe \
            -ldflags "-s -w -extldflags '-static' -X main.Version=$version" \
            ./cmd/pdctl
    SAVE ARTIFACT build/exe AS LOCAL ./build/pdctl
