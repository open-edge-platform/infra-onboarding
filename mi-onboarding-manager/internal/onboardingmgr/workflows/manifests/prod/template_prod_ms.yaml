# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: "tinkerbell.org/v1alpha1"
kind: Template
metadata:
  name: focal-ms-$TINKERBELL_CLIENT_UID-prod
  namespace: tink-system
spec:
  data: |
    version: "0.1"
    name: ubuntu-focal-ms-$TINKERBELL_CLIENT_UID-prod 
    global_timeout: 1800
    tasks:
      - name: "os-installation"
        worker: "{{.device_1}}"
        volumes:
          - /dev:/dev
          - /dev/console:/dev/console
          - /lib/firmware:/lib/firmware:ro
        actions:
          - name: "stream-ubuntu-image"
            image: quay.io/tinkerbell-actions/image2disk:v1.0.0
            timeout: 900
            environment:
              DEST_DISK: {{ index .Hardware.Disks 0 }}
              IMG_URL: "http://$TINKERBELL_HOST_IP:8080/focal-server-cloudimg-amd64.raw.gz"
              COMPRESSED: true
          - name: "clean-up-second-HDD"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "[ {{ len .Hardware.Disks }} -gt 1 ] && dd if=/dev/zero of={{ index .Hardware.Disks 1 }} bs=512 count=100"
          - name: "grow-partition"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "growpart {{ index .Hardware.Disks 0 }} $ROOTFS_PART_NO && resize2fs {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION"
          - name: "add-env-proxies"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              DEST_PATH:  /etc/environment
              CONTENTS: |
                http_proxy=http://proxy-dmz.intel.com:911
                https_proxy=http://proxy-dmz.intel.com:912
                no_proxy=localhost,127.0.0.1,.intel.com
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755
          - name: "create-docker-proxy-directory"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "mkdir /etc/systemd/system/docker.service.d/; touch /etc/systemd/system/docker.service.d/proxy.conf;touch /etc/apt/apt.conf"
          - name: "add-docker-proxies"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              DEST_PATH:  /etc/systemd/system/docker.service.d/proxy.conf
              CONTENTS: |
                [Service]
                Environment="HTTP_PROXY=http://proxy-dmz.intel.com:912"
                Environment="HTTPS_PROXY=http://proxy-dmz.intel.com:912"
                Environment="NO_PROXY=localhost,127.0.0.1,.intel.com"
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755
          - name: "install-openssl"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "apt -y update && apt -y install wget openssl"
          - name: "create-user"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "useradd -p $(openssl passwd -1 user) -s /bin/bash -d /home/user/ -m -G sudo user"
          - name: "enable-ssh"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "ssh-keygen -A; systemctl enable ssh.service; sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config"

          - name: "write-netplan"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              DEST_PATH: /etc/netplan/config.yaml
              CONTENTS: |
                network:
                  version: 2
                  renderer: networkd
                  ethernets:
                    id0:
                      match:
                        name: en*
                      dhcp4: no
                      addresses: [$TINKERBELL_CLIENT_IP/24]
                      gateway4: $TINKERBELL_CLIENT_GW
                      nameservers:
                        addresses: [ 10.248.2.1,172.30.90.4,10.223.45.36]
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755
          - name: "download-kernel-deb-files"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              KER_HEADER_URL: 'http://$TINKERBELL_HOST_IP:8080/linux-headers-5.15.96-lts.deb'
              KER_IMG_URL: "http://$TINKERBELL_HOST_IP:8080/linux-image-5.15.96-lts.deb"
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "mkdir -p /home/user/Setup;chown user:user /home/user/Setup;wget -P /home/user/Setup http://$TINKERBELL_HOST_IP:8080/linux-headers-5.15.96-lts.deb; wget -P /home/user/Setup http://$TINKERBELL_HOST_IP:8080/linux-image-5.15.96-lts.deb"
          - name: "install-kernel"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "cd /home/user/Setup && dpkg -i *.deb"
          - name: "download-azure-scripts"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              AZR_ENV: "http://$TINKERBELL_HOST_IP:8080/azure-credentials.env_$TINKERBELL_CLIENT_MAC"
              AZR_LOG_FILE: "http://$TINKERBELL_HOST_IP:8080/log.sh"
              AZR_INSTLR_FILE: "http://$TINKERBELL_HOST_IP:8080/azure_dps_installer.sh"
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "mkdir -p /home/user/Setup/.creds;wget -P /home/user/Setup/.creds http://$TINKERBELL_HOST_IP:8080/azure-credentials.env_$TINKERBELL_CLIENT_MAC; wget -P /home/user/Setup http://$TINKERBELL_HOST_IP:8080/log.sh;  wget -P /home/user/Setup http://$TINKERBELL_HOST_IP:8080/azure_dps_installer.sh;chmod 755  /home/user/Setup/*; cd /home/user/Setup/.creds; mv azure-credentials.env_$TINKERBELL_CLIENT_MAC azure-credentials.env"
          - name: "service-script-for-azure-dps-installer"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              DEST_PATH:  /etc/systemd/system/install-azure-dps.service
              CONTENTS: |
                [Unit]
                Description=Azure DPS installer
                After=network.target
                ConditionPathExists = !/home/user/Setup/.azure_dps_setp_done

                [Service]
                ExecStartPre=/bin/sleep 70 
                WorkingDirectory=/home/user/Setup
                ExecStart=bash -E /home/user/Setup/azure_dps_installer.sh -e  .creds/azure-credentials.env

                [Install]
                WantedBy=multi-user.target
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755

           #enable the service script
          - name: "enable-service-script"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "systemctl enable install-azure-dps.service"
          - name: "add-apt-proxies"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ index .Hardware.Disks 0 }}$ROOTFS_PARTITION
              FS_TYPE: ext4
              DEST_PATH:  /etc/apt/apt.conf
              CONTENTS: |
                Acquire::http::Proxy "http://proxy-dmz.intel.com:911";
                Acquire::https::Proxy "http://proxy-dmz.intel.com:912";
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755
          - name: "reboot"
            image: public.ecr.aws/l0g8r8j6/tinkerbell/hub/reboot-action:latest
            timeout: 90
            volumes:
              - /worker:/worker

