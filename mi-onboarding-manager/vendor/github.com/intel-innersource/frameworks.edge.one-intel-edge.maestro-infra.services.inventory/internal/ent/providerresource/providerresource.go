// Code generated by ent, DO NOT EDIT.

package providerresource

import (
	"fmt"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the providerresource type in the database.
	Label = "provider_resource"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldResourceID holds the string denoting the resource_id field in the database.
	FieldResourceID = "resource_id"
	// FieldProviderKind holds the string denoting the provider_kind field in the database.
	FieldProviderKind = "provider_kind"
	// FieldProviderVendor holds the string denoting the provider_vendor field in the database.
	FieldProviderVendor = "provider_vendor"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAPIEndpoint holds the string denoting the api_endpoint field in the database.
	FieldAPIEndpoint = "api_endpoint"
	// FieldAPICredentials holds the string denoting the api_credentials field in the database.
	FieldAPICredentials = "api_credentials"
	// Table holds the table name of the providerresource in the database.
	Table = "provider_resources"
)

// Columns holds all SQL columns for providerresource fields.
var Columns = []string{
	FieldID,
	FieldResourceID,
	FieldProviderKind,
	FieldProviderVendor,
	FieldName,
	FieldAPIEndpoint,
	FieldAPICredentials,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// ProviderKind defines the type for the "provider_kind" enum field.
type ProviderKind string

// ProviderKind values.
const (
	ProviderKindPROVIDER_KIND_UNSPECIFIED ProviderKind = "PROVIDER_KIND_UNSPECIFIED"
	ProviderKindPROVIDER_KIND_BAREMETAL   ProviderKind = "PROVIDER_KIND_BAREMETAL"
)

func (pk ProviderKind) String() string {
	return string(pk)
}

// ProviderKindValidator is a validator for the "provider_kind" field enum values. It is called by the builders before save.
func ProviderKindValidator(pk ProviderKind) error {
	switch pk {
	case ProviderKindPROVIDER_KIND_UNSPECIFIED, ProviderKindPROVIDER_KIND_BAREMETAL:
		return nil
	default:
		return fmt.Errorf("providerresource: invalid enum value for provider_kind field: %q", pk)
	}
}

// ProviderVendor defines the type for the "provider_vendor" enum field.
type ProviderVendor string

// ProviderVendor values.
const (
	ProviderVendorPROVIDER_VENDOR_UNSPECIFIED ProviderVendor = "PROVIDER_VENDOR_UNSPECIFIED"
	ProviderVendorPROVIDER_VENDOR_LENOVO_LXCA ProviderVendor = "PROVIDER_VENDOR_LENOVO_LXCA"
	ProviderVendorPROVIDER_VENDOR_LENOVO_LOCA ProviderVendor = "PROVIDER_VENDOR_LENOVO_LOCA"
)

func (pv ProviderVendor) String() string {
	return string(pv)
}

// ProviderVendorValidator is a validator for the "provider_vendor" field enum values. It is called by the builders before save.
func ProviderVendorValidator(pv ProviderVendor) error {
	switch pv {
	case ProviderVendorPROVIDER_VENDOR_UNSPECIFIED, ProviderVendorPROVIDER_VENDOR_LENOVO_LXCA, ProviderVendorPROVIDER_VENDOR_LENOVO_LOCA:
		return nil
	default:
		return fmt.Errorf("providerresource: invalid enum value for provider_vendor field: %q", pv)
	}
}

// OrderOption defines the ordering options for the ProviderResource queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByResourceID orders the results by the resource_id field.
func ByResourceID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResourceID, opts...).ToFunc()
}

// ByProviderKind orders the results by the provider_kind field.
func ByProviderKind(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProviderKind, opts...).ToFunc()
}

// ByProviderVendor orders the results by the provider_vendor field.
func ByProviderVendor(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProviderVendor, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByAPIEndpoint orders the results by the api_endpoint field.
func ByAPIEndpoint(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAPIEndpoint, opts...).ToFunc()
}

// ByAPICredentials orders the results by the api_credentials field.
func ByAPICredentials(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAPICredentials, opts...).ToFunc()
}
