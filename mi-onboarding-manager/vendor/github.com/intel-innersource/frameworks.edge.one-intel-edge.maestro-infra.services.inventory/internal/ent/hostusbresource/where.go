// Code generated by ent, DO NOT EDIT.

package hostusbresource

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/intel-innersource/frameworks.edge.one-intel-edge.maestro-infra.services.inventory/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldResourceID, v))
}

// Kind applies equality check predicate on the "kind" field. It's identical to KindEQ.
func Kind(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldKind, v))
}

// OwnerID applies equality check predicate on the "owner_id" field. It's identical to OwnerIDEQ.
func OwnerID(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldOwnerID, v))
}

// Idvendor applies equality check predicate on the "idvendor" field. It's identical to IdvendorEQ.
func Idvendor(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldIdvendor, v))
}

// Idproduct applies equality check predicate on the "idproduct" field. It's identical to IdproductEQ.
func Idproduct(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldIdproduct, v))
}

// Bus applies equality check predicate on the "bus" field. It's identical to BusEQ.
func Bus(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldBus, v))
}

// Addr applies equality check predicate on the "addr" field. It's identical to AddrEQ.
func Addr(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldAddr, v))
}

// Class applies equality check predicate on the "class" field. It's identical to ClassEQ.
func Class(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldClass, v))
}

// Serial applies equality check predicate on the "serial" field. It's identical to SerialEQ.
func Serial(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldSerial, v))
}

// DeviceName applies equality check predicate on the "device_name" field. It's identical to DeviceNameEQ.
func DeviceName(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldDeviceName, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldResourceID, v))
}

// KindEQ applies the EQ predicate on the "kind" field.
func KindEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldKind, v))
}

// KindNEQ applies the NEQ predicate on the "kind" field.
func KindNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldKind, v))
}

// KindIn applies the In predicate on the "kind" field.
func KindIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldKind, vs...))
}

// KindNotIn applies the NotIn predicate on the "kind" field.
func KindNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldKind, vs...))
}

// KindGT applies the GT predicate on the "kind" field.
func KindGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldKind, v))
}

// KindGTE applies the GTE predicate on the "kind" field.
func KindGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldKind, v))
}

// KindLT applies the LT predicate on the "kind" field.
func KindLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldKind, v))
}

// KindLTE applies the LTE predicate on the "kind" field.
func KindLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldKind, v))
}

// KindContains applies the Contains predicate on the "kind" field.
func KindContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldKind, v))
}

// KindHasPrefix applies the HasPrefix predicate on the "kind" field.
func KindHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldKind, v))
}

// KindHasSuffix applies the HasSuffix predicate on the "kind" field.
func KindHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldKind, v))
}

// KindIsNil applies the IsNil predicate on the "kind" field.
func KindIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldKind))
}

// KindNotNil applies the NotNil predicate on the "kind" field.
func KindNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldKind))
}

// KindEqualFold applies the EqualFold predicate on the "kind" field.
func KindEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldKind, v))
}

// KindContainsFold applies the ContainsFold predicate on the "kind" field.
func KindContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldKind, v))
}

// OwnerIDEQ applies the EQ predicate on the "owner_id" field.
func OwnerIDEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldOwnerID, v))
}

// OwnerIDNEQ applies the NEQ predicate on the "owner_id" field.
func OwnerIDNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldOwnerID, v))
}

// OwnerIDIn applies the In predicate on the "owner_id" field.
func OwnerIDIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldOwnerID, vs...))
}

// OwnerIDNotIn applies the NotIn predicate on the "owner_id" field.
func OwnerIDNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldOwnerID, vs...))
}

// OwnerIDGT applies the GT predicate on the "owner_id" field.
func OwnerIDGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldOwnerID, v))
}

// OwnerIDGTE applies the GTE predicate on the "owner_id" field.
func OwnerIDGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldOwnerID, v))
}

// OwnerIDLT applies the LT predicate on the "owner_id" field.
func OwnerIDLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldOwnerID, v))
}

// OwnerIDLTE applies the LTE predicate on the "owner_id" field.
func OwnerIDLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldOwnerID, v))
}

// OwnerIDContains applies the Contains predicate on the "owner_id" field.
func OwnerIDContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldOwnerID, v))
}

// OwnerIDHasPrefix applies the HasPrefix predicate on the "owner_id" field.
func OwnerIDHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldOwnerID, v))
}

// OwnerIDHasSuffix applies the HasSuffix predicate on the "owner_id" field.
func OwnerIDHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldOwnerID, v))
}

// OwnerIDIsNil applies the IsNil predicate on the "owner_id" field.
func OwnerIDIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldOwnerID))
}

// OwnerIDNotNil applies the NotNil predicate on the "owner_id" field.
func OwnerIDNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldOwnerID))
}

// OwnerIDEqualFold applies the EqualFold predicate on the "owner_id" field.
func OwnerIDEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldOwnerID, v))
}

// OwnerIDContainsFold applies the ContainsFold predicate on the "owner_id" field.
func OwnerIDContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldOwnerID, v))
}

// IdvendorEQ applies the EQ predicate on the "idvendor" field.
func IdvendorEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldIdvendor, v))
}

// IdvendorNEQ applies the NEQ predicate on the "idvendor" field.
func IdvendorNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldIdvendor, v))
}

// IdvendorIn applies the In predicate on the "idvendor" field.
func IdvendorIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldIdvendor, vs...))
}

// IdvendorNotIn applies the NotIn predicate on the "idvendor" field.
func IdvendorNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldIdvendor, vs...))
}

// IdvendorGT applies the GT predicate on the "idvendor" field.
func IdvendorGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldIdvendor, v))
}

// IdvendorGTE applies the GTE predicate on the "idvendor" field.
func IdvendorGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldIdvendor, v))
}

// IdvendorLT applies the LT predicate on the "idvendor" field.
func IdvendorLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldIdvendor, v))
}

// IdvendorLTE applies the LTE predicate on the "idvendor" field.
func IdvendorLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldIdvendor, v))
}

// IdvendorContains applies the Contains predicate on the "idvendor" field.
func IdvendorContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldIdvendor, v))
}

// IdvendorHasPrefix applies the HasPrefix predicate on the "idvendor" field.
func IdvendorHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldIdvendor, v))
}

// IdvendorHasSuffix applies the HasSuffix predicate on the "idvendor" field.
func IdvendorHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldIdvendor, v))
}

// IdvendorIsNil applies the IsNil predicate on the "idvendor" field.
func IdvendorIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldIdvendor))
}

// IdvendorNotNil applies the NotNil predicate on the "idvendor" field.
func IdvendorNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldIdvendor))
}

// IdvendorEqualFold applies the EqualFold predicate on the "idvendor" field.
func IdvendorEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldIdvendor, v))
}

// IdvendorContainsFold applies the ContainsFold predicate on the "idvendor" field.
func IdvendorContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldIdvendor, v))
}

// IdproductEQ applies the EQ predicate on the "idproduct" field.
func IdproductEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldIdproduct, v))
}

// IdproductNEQ applies the NEQ predicate on the "idproduct" field.
func IdproductNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldIdproduct, v))
}

// IdproductIn applies the In predicate on the "idproduct" field.
func IdproductIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldIdproduct, vs...))
}

// IdproductNotIn applies the NotIn predicate on the "idproduct" field.
func IdproductNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldIdproduct, vs...))
}

// IdproductGT applies the GT predicate on the "idproduct" field.
func IdproductGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldIdproduct, v))
}

// IdproductGTE applies the GTE predicate on the "idproduct" field.
func IdproductGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldIdproduct, v))
}

// IdproductLT applies the LT predicate on the "idproduct" field.
func IdproductLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldIdproduct, v))
}

// IdproductLTE applies the LTE predicate on the "idproduct" field.
func IdproductLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldIdproduct, v))
}

// IdproductContains applies the Contains predicate on the "idproduct" field.
func IdproductContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldIdproduct, v))
}

// IdproductHasPrefix applies the HasPrefix predicate on the "idproduct" field.
func IdproductHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldIdproduct, v))
}

// IdproductHasSuffix applies the HasSuffix predicate on the "idproduct" field.
func IdproductHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldIdproduct, v))
}

// IdproductIsNil applies the IsNil predicate on the "idproduct" field.
func IdproductIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldIdproduct))
}

// IdproductNotNil applies the NotNil predicate on the "idproduct" field.
func IdproductNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldIdproduct))
}

// IdproductEqualFold applies the EqualFold predicate on the "idproduct" field.
func IdproductEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldIdproduct, v))
}

// IdproductContainsFold applies the ContainsFold predicate on the "idproduct" field.
func IdproductContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldIdproduct, v))
}

// BusEQ applies the EQ predicate on the "bus" field.
func BusEQ(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldBus, v))
}

// BusNEQ applies the NEQ predicate on the "bus" field.
func BusNEQ(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldBus, v))
}

// BusIn applies the In predicate on the "bus" field.
func BusIn(vs ...uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldBus, vs...))
}

// BusNotIn applies the NotIn predicate on the "bus" field.
func BusNotIn(vs ...uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldBus, vs...))
}

// BusGT applies the GT predicate on the "bus" field.
func BusGT(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldBus, v))
}

// BusGTE applies the GTE predicate on the "bus" field.
func BusGTE(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldBus, v))
}

// BusLT applies the LT predicate on the "bus" field.
func BusLT(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldBus, v))
}

// BusLTE applies the LTE predicate on the "bus" field.
func BusLTE(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldBus, v))
}

// BusIsNil applies the IsNil predicate on the "bus" field.
func BusIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldBus))
}

// BusNotNil applies the NotNil predicate on the "bus" field.
func BusNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldBus))
}

// AddrEQ applies the EQ predicate on the "addr" field.
func AddrEQ(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldAddr, v))
}

// AddrNEQ applies the NEQ predicate on the "addr" field.
func AddrNEQ(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldAddr, v))
}

// AddrIn applies the In predicate on the "addr" field.
func AddrIn(vs ...uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldAddr, vs...))
}

// AddrNotIn applies the NotIn predicate on the "addr" field.
func AddrNotIn(vs ...uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldAddr, vs...))
}

// AddrGT applies the GT predicate on the "addr" field.
func AddrGT(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldAddr, v))
}

// AddrGTE applies the GTE predicate on the "addr" field.
func AddrGTE(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldAddr, v))
}

// AddrLT applies the LT predicate on the "addr" field.
func AddrLT(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldAddr, v))
}

// AddrLTE applies the LTE predicate on the "addr" field.
func AddrLTE(v uint32) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldAddr, v))
}

// AddrIsNil applies the IsNil predicate on the "addr" field.
func AddrIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldAddr))
}

// AddrNotNil applies the NotNil predicate on the "addr" field.
func AddrNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldAddr))
}

// ClassEQ applies the EQ predicate on the "class" field.
func ClassEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldClass, v))
}

// ClassNEQ applies the NEQ predicate on the "class" field.
func ClassNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldClass, v))
}

// ClassIn applies the In predicate on the "class" field.
func ClassIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldClass, vs...))
}

// ClassNotIn applies the NotIn predicate on the "class" field.
func ClassNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldClass, vs...))
}

// ClassGT applies the GT predicate on the "class" field.
func ClassGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldClass, v))
}

// ClassGTE applies the GTE predicate on the "class" field.
func ClassGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldClass, v))
}

// ClassLT applies the LT predicate on the "class" field.
func ClassLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldClass, v))
}

// ClassLTE applies the LTE predicate on the "class" field.
func ClassLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldClass, v))
}

// ClassContains applies the Contains predicate on the "class" field.
func ClassContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldClass, v))
}

// ClassHasPrefix applies the HasPrefix predicate on the "class" field.
func ClassHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldClass, v))
}

// ClassHasSuffix applies the HasSuffix predicate on the "class" field.
func ClassHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldClass, v))
}

// ClassIsNil applies the IsNil predicate on the "class" field.
func ClassIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldClass))
}

// ClassNotNil applies the NotNil predicate on the "class" field.
func ClassNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldClass))
}

// ClassEqualFold applies the EqualFold predicate on the "class" field.
func ClassEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldClass, v))
}

// ClassContainsFold applies the ContainsFold predicate on the "class" field.
func ClassContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldClass, v))
}

// SerialEQ applies the EQ predicate on the "serial" field.
func SerialEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldSerial, v))
}

// SerialNEQ applies the NEQ predicate on the "serial" field.
func SerialNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldSerial, v))
}

// SerialIn applies the In predicate on the "serial" field.
func SerialIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldSerial, vs...))
}

// SerialNotIn applies the NotIn predicate on the "serial" field.
func SerialNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldSerial, vs...))
}

// SerialGT applies the GT predicate on the "serial" field.
func SerialGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldSerial, v))
}

// SerialGTE applies the GTE predicate on the "serial" field.
func SerialGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldSerial, v))
}

// SerialLT applies the LT predicate on the "serial" field.
func SerialLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldSerial, v))
}

// SerialLTE applies the LTE predicate on the "serial" field.
func SerialLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldSerial, v))
}

// SerialContains applies the Contains predicate on the "serial" field.
func SerialContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldSerial, v))
}

// SerialHasPrefix applies the HasPrefix predicate on the "serial" field.
func SerialHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldSerial, v))
}

// SerialHasSuffix applies the HasSuffix predicate on the "serial" field.
func SerialHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldSerial, v))
}

// SerialIsNil applies the IsNil predicate on the "serial" field.
func SerialIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldSerial))
}

// SerialNotNil applies the NotNil predicate on the "serial" field.
func SerialNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldSerial))
}

// SerialEqualFold applies the EqualFold predicate on the "serial" field.
func SerialEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldSerial, v))
}

// SerialContainsFold applies the ContainsFold predicate on the "serial" field.
func SerialContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldSerial, v))
}

// DeviceNameEQ applies the EQ predicate on the "device_name" field.
func DeviceNameEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEQ(FieldDeviceName, v))
}

// DeviceNameNEQ applies the NEQ predicate on the "device_name" field.
func DeviceNameNEQ(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNEQ(FieldDeviceName, v))
}

// DeviceNameIn applies the In predicate on the "device_name" field.
func DeviceNameIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIn(FieldDeviceName, vs...))
}

// DeviceNameNotIn applies the NotIn predicate on the "device_name" field.
func DeviceNameNotIn(vs ...string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotIn(FieldDeviceName, vs...))
}

// DeviceNameGT applies the GT predicate on the "device_name" field.
func DeviceNameGT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGT(FieldDeviceName, v))
}

// DeviceNameGTE applies the GTE predicate on the "device_name" field.
func DeviceNameGTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldGTE(FieldDeviceName, v))
}

// DeviceNameLT applies the LT predicate on the "device_name" field.
func DeviceNameLT(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLT(FieldDeviceName, v))
}

// DeviceNameLTE applies the LTE predicate on the "device_name" field.
func DeviceNameLTE(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldLTE(FieldDeviceName, v))
}

// DeviceNameContains applies the Contains predicate on the "device_name" field.
func DeviceNameContains(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContains(FieldDeviceName, v))
}

// DeviceNameHasPrefix applies the HasPrefix predicate on the "device_name" field.
func DeviceNameHasPrefix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasPrefix(FieldDeviceName, v))
}

// DeviceNameHasSuffix applies the HasSuffix predicate on the "device_name" field.
func DeviceNameHasSuffix(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldHasSuffix(FieldDeviceName, v))
}

// DeviceNameIsNil applies the IsNil predicate on the "device_name" field.
func DeviceNameIsNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldIsNull(FieldDeviceName))
}

// DeviceNameNotNil applies the NotNil predicate on the "device_name" field.
func DeviceNameNotNil() predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldNotNull(FieldDeviceName))
}

// DeviceNameEqualFold applies the EqualFold predicate on the "device_name" field.
func DeviceNameEqualFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldEqualFold(FieldDeviceName, v))
}

// DeviceNameContainsFold applies the ContainsFold predicate on the "device_name" field.
func DeviceNameContainsFold(v string) predicate.HostusbResource {
	return predicate.HostusbResource(sql.FieldContainsFold(FieldDeviceName, v))
}

// HasHost applies the HasEdge predicate on the "host" edge.
func HasHost() predicate.HostusbResource {
	return predicate.HostusbResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, HostTable, HostColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostWith applies the HasEdge predicate on the "host" edge with a given conditions (other predicates).
func HasHostWith(preds ...predicate.HostResource) predicate.HostusbResource {
	return predicate.HostusbResource(func(s *sql.Selector) {
		step := newHostStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HostusbResource) predicate.HostusbResource {
	return predicate.HostusbResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HostusbResource) predicate.HostusbResource {
	return predicate.HostusbResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HostusbResource) predicate.HostusbResource {
	return predicate.HostusbResource(func(s *sql.Selector) {
		p(s.Not())
	})
}
