// Code generated by ent, DO NOT EDIT.

package siteresource

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/intel-innersource/frameworks.edge.one-intel-edge.maestro-infra.services.inventory/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldResourceID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldName, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldAddress, v))
}

// SiteLat applies equality check predicate on the "site_lat" field. It's identical to SiteLatEQ.
func SiteLat(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldSiteLat, v))
}

// SiteLng applies equality check predicate on the "site_lng" field. It's identical to SiteLngEQ.
func SiteLng(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldSiteLng, v))
}

// DNSServers applies equality check predicate on the "dns_servers" field. It's identical to DNSServersEQ.
func DNSServers(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldDNSServers, v))
}

// DockerRegistries applies equality check predicate on the "docker_registries" field. It's identical to DockerRegistriesEQ.
func DockerRegistries(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldDockerRegistries, v))
}

// MetricsEndpoint applies equality check predicate on the "metrics_endpoint" field. It's identical to MetricsEndpointEQ.
func MetricsEndpoint(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldMetricsEndpoint, v))
}

// HTTPProxy applies equality check predicate on the "http_proxy" field. It's identical to HTTPProxyEQ.
func HTTPProxy(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldHTTPProxy, v))
}

// HTTPSProxy applies equality check predicate on the "https_proxy" field. It's identical to HTTPSProxyEQ.
func HTTPSProxy(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldHTTPSProxy, v))
}

// FtpProxy applies equality check predicate on the "ftp_proxy" field. It's identical to FtpProxyEQ.
func FtpProxy(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldFtpProxy, v))
}

// NoProxy applies equality check predicate on the "no_proxy" field. It's identical to NoProxyEQ.
func NoProxy(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldNoProxy, v))
}

// Metadata applies equality check predicate on the "metadata" field. It's identical to MetadataEQ.
func Metadata(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldMetadata, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldResourceID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldName, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressIsNil applies the IsNil predicate on the "address" field.
func AddressIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldAddress))
}

// AddressNotNil applies the NotNil predicate on the "address" field.
func AddressNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldAddress))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldAddress, v))
}

// SiteLatEQ applies the EQ predicate on the "site_lat" field.
func SiteLatEQ(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldSiteLat, v))
}

// SiteLatNEQ applies the NEQ predicate on the "site_lat" field.
func SiteLatNEQ(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldSiteLat, v))
}

// SiteLatIn applies the In predicate on the "site_lat" field.
func SiteLatIn(vs ...int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldSiteLat, vs...))
}

// SiteLatNotIn applies the NotIn predicate on the "site_lat" field.
func SiteLatNotIn(vs ...int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldSiteLat, vs...))
}

// SiteLatGT applies the GT predicate on the "site_lat" field.
func SiteLatGT(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldSiteLat, v))
}

// SiteLatGTE applies the GTE predicate on the "site_lat" field.
func SiteLatGTE(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldSiteLat, v))
}

// SiteLatLT applies the LT predicate on the "site_lat" field.
func SiteLatLT(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldSiteLat, v))
}

// SiteLatLTE applies the LTE predicate on the "site_lat" field.
func SiteLatLTE(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldSiteLat, v))
}

// SiteLatIsNil applies the IsNil predicate on the "site_lat" field.
func SiteLatIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldSiteLat))
}

// SiteLatNotNil applies the NotNil predicate on the "site_lat" field.
func SiteLatNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldSiteLat))
}

// SiteLngEQ applies the EQ predicate on the "site_lng" field.
func SiteLngEQ(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldSiteLng, v))
}

// SiteLngNEQ applies the NEQ predicate on the "site_lng" field.
func SiteLngNEQ(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldSiteLng, v))
}

// SiteLngIn applies the In predicate on the "site_lng" field.
func SiteLngIn(vs ...int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldSiteLng, vs...))
}

// SiteLngNotIn applies the NotIn predicate on the "site_lng" field.
func SiteLngNotIn(vs ...int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldSiteLng, vs...))
}

// SiteLngGT applies the GT predicate on the "site_lng" field.
func SiteLngGT(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldSiteLng, v))
}

// SiteLngGTE applies the GTE predicate on the "site_lng" field.
func SiteLngGTE(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldSiteLng, v))
}

// SiteLngLT applies the LT predicate on the "site_lng" field.
func SiteLngLT(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldSiteLng, v))
}

// SiteLngLTE applies the LTE predicate on the "site_lng" field.
func SiteLngLTE(v int32) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldSiteLng, v))
}

// SiteLngIsNil applies the IsNil predicate on the "site_lng" field.
func SiteLngIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldSiteLng))
}

// SiteLngNotNil applies the NotNil predicate on the "site_lng" field.
func SiteLngNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldSiteLng))
}

// DNSServersEQ applies the EQ predicate on the "dns_servers" field.
func DNSServersEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldDNSServers, v))
}

// DNSServersNEQ applies the NEQ predicate on the "dns_servers" field.
func DNSServersNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldDNSServers, v))
}

// DNSServersIn applies the In predicate on the "dns_servers" field.
func DNSServersIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldDNSServers, vs...))
}

// DNSServersNotIn applies the NotIn predicate on the "dns_servers" field.
func DNSServersNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldDNSServers, vs...))
}

// DNSServersGT applies the GT predicate on the "dns_servers" field.
func DNSServersGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldDNSServers, v))
}

// DNSServersGTE applies the GTE predicate on the "dns_servers" field.
func DNSServersGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldDNSServers, v))
}

// DNSServersLT applies the LT predicate on the "dns_servers" field.
func DNSServersLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldDNSServers, v))
}

// DNSServersLTE applies the LTE predicate on the "dns_servers" field.
func DNSServersLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldDNSServers, v))
}

// DNSServersContains applies the Contains predicate on the "dns_servers" field.
func DNSServersContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldDNSServers, v))
}

// DNSServersHasPrefix applies the HasPrefix predicate on the "dns_servers" field.
func DNSServersHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldDNSServers, v))
}

// DNSServersHasSuffix applies the HasSuffix predicate on the "dns_servers" field.
func DNSServersHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldDNSServers, v))
}

// DNSServersIsNil applies the IsNil predicate on the "dns_servers" field.
func DNSServersIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldDNSServers))
}

// DNSServersNotNil applies the NotNil predicate on the "dns_servers" field.
func DNSServersNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldDNSServers))
}

// DNSServersEqualFold applies the EqualFold predicate on the "dns_servers" field.
func DNSServersEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldDNSServers, v))
}

// DNSServersContainsFold applies the ContainsFold predicate on the "dns_servers" field.
func DNSServersContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldDNSServers, v))
}

// DockerRegistriesEQ applies the EQ predicate on the "docker_registries" field.
func DockerRegistriesEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldDockerRegistries, v))
}

// DockerRegistriesNEQ applies the NEQ predicate on the "docker_registries" field.
func DockerRegistriesNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldDockerRegistries, v))
}

// DockerRegistriesIn applies the In predicate on the "docker_registries" field.
func DockerRegistriesIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldDockerRegistries, vs...))
}

// DockerRegistriesNotIn applies the NotIn predicate on the "docker_registries" field.
func DockerRegistriesNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldDockerRegistries, vs...))
}

// DockerRegistriesGT applies the GT predicate on the "docker_registries" field.
func DockerRegistriesGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldDockerRegistries, v))
}

// DockerRegistriesGTE applies the GTE predicate on the "docker_registries" field.
func DockerRegistriesGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldDockerRegistries, v))
}

// DockerRegistriesLT applies the LT predicate on the "docker_registries" field.
func DockerRegistriesLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldDockerRegistries, v))
}

// DockerRegistriesLTE applies the LTE predicate on the "docker_registries" field.
func DockerRegistriesLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldDockerRegistries, v))
}

// DockerRegistriesContains applies the Contains predicate on the "docker_registries" field.
func DockerRegistriesContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldDockerRegistries, v))
}

// DockerRegistriesHasPrefix applies the HasPrefix predicate on the "docker_registries" field.
func DockerRegistriesHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldDockerRegistries, v))
}

// DockerRegistriesHasSuffix applies the HasSuffix predicate on the "docker_registries" field.
func DockerRegistriesHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldDockerRegistries, v))
}

// DockerRegistriesIsNil applies the IsNil predicate on the "docker_registries" field.
func DockerRegistriesIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldDockerRegistries))
}

// DockerRegistriesNotNil applies the NotNil predicate on the "docker_registries" field.
func DockerRegistriesNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldDockerRegistries))
}

// DockerRegistriesEqualFold applies the EqualFold predicate on the "docker_registries" field.
func DockerRegistriesEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldDockerRegistries, v))
}

// DockerRegistriesContainsFold applies the ContainsFold predicate on the "docker_registries" field.
func DockerRegistriesContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldDockerRegistries, v))
}

// MetricsEndpointEQ applies the EQ predicate on the "metrics_endpoint" field.
func MetricsEndpointEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldMetricsEndpoint, v))
}

// MetricsEndpointNEQ applies the NEQ predicate on the "metrics_endpoint" field.
func MetricsEndpointNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldMetricsEndpoint, v))
}

// MetricsEndpointIn applies the In predicate on the "metrics_endpoint" field.
func MetricsEndpointIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldMetricsEndpoint, vs...))
}

// MetricsEndpointNotIn applies the NotIn predicate on the "metrics_endpoint" field.
func MetricsEndpointNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldMetricsEndpoint, vs...))
}

// MetricsEndpointGT applies the GT predicate on the "metrics_endpoint" field.
func MetricsEndpointGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldMetricsEndpoint, v))
}

// MetricsEndpointGTE applies the GTE predicate on the "metrics_endpoint" field.
func MetricsEndpointGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldMetricsEndpoint, v))
}

// MetricsEndpointLT applies the LT predicate on the "metrics_endpoint" field.
func MetricsEndpointLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldMetricsEndpoint, v))
}

// MetricsEndpointLTE applies the LTE predicate on the "metrics_endpoint" field.
func MetricsEndpointLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldMetricsEndpoint, v))
}

// MetricsEndpointContains applies the Contains predicate on the "metrics_endpoint" field.
func MetricsEndpointContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldMetricsEndpoint, v))
}

// MetricsEndpointHasPrefix applies the HasPrefix predicate on the "metrics_endpoint" field.
func MetricsEndpointHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldMetricsEndpoint, v))
}

// MetricsEndpointHasSuffix applies the HasSuffix predicate on the "metrics_endpoint" field.
func MetricsEndpointHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldMetricsEndpoint, v))
}

// MetricsEndpointIsNil applies the IsNil predicate on the "metrics_endpoint" field.
func MetricsEndpointIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldMetricsEndpoint))
}

// MetricsEndpointNotNil applies the NotNil predicate on the "metrics_endpoint" field.
func MetricsEndpointNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldMetricsEndpoint))
}

// MetricsEndpointEqualFold applies the EqualFold predicate on the "metrics_endpoint" field.
func MetricsEndpointEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldMetricsEndpoint, v))
}

// MetricsEndpointContainsFold applies the ContainsFold predicate on the "metrics_endpoint" field.
func MetricsEndpointContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldMetricsEndpoint, v))
}

// HTTPProxyEQ applies the EQ predicate on the "http_proxy" field.
func HTTPProxyEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldHTTPProxy, v))
}

// HTTPProxyNEQ applies the NEQ predicate on the "http_proxy" field.
func HTTPProxyNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldHTTPProxy, v))
}

// HTTPProxyIn applies the In predicate on the "http_proxy" field.
func HTTPProxyIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldHTTPProxy, vs...))
}

// HTTPProxyNotIn applies the NotIn predicate on the "http_proxy" field.
func HTTPProxyNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldHTTPProxy, vs...))
}

// HTTPProxyGT applies the GT predicate on the "http_proxy" field.
func HTTPProxyGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldHTTPProxy, v))
}

// HTTPProxyGTE applies the GTE predicate on the "http_proxy" field.
func HTTPProxyGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldHTTPProxy, v))
}

// HTTPProxyLT applies the LT predicate on the "http_proxy" field.
func HTTPProxyLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldHTTPProxy, v))
}

// HTTPProxyLTE applies the LTE predicate on the "http_proxy" field.
func HTTPProxyLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldHTTPProxy, v))
}

// HTTPProxyContains applies the Contains predicate on the "http_proxy" field.
func HTTPProxyContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldHTTPProxy, v))
}

// HTTPProxyHasPrefix applies the HasPrefix predicate on the "http_proxy" field.
func HTTPProxyHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldHTTPProxy, v))
}

// HTTPProxyHasSuffix applies the HasSuffix predicate on the "http_proxy" field.
func HTTPProxyHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldHTTPProxy, v))
}

// HTTPProxyIsNil applies the IsNil predicate on the "http_proxy" field.
func HTTPProxyIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldHTTPProxy))
}

// HTTPProxyNotNil applies the NotNil predicate on the "http_proxy" field.
func HTTPProxyNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldHTTPProxy))
}

// HTTPProxyEqualFold applies the EqualFold predicate on the "http_proxy" field.
func HTTPProxyEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldHTTPProxy, v))
}

// HTTPProxyContainsFold applies the ContainsFold predicate on the "http_proxy" field.
func HTTPProxyContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldHTTPProxy, v))
}

// HTTPSProxyEQ applies the EQ predicate on the "https_proxy" field.
func HTTPSProxyEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldHTTPSProxy, v))
}

// HTTPSProxyNEQ applies the NEQ predicate on the "https_proxy" field.
func HTTPSProxyNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldHTTPSProxy, v))
}

// HTTPSProxyIn applies the In predicate on the "https_proxy" field.
func HTTPSProxyIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldHTTPSProxy, vs...))
}

// HTTPSProxyNotIn applies the NotIn predicate on the "https_proxy" field.
func HTTPSProxyNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldHTTPSProxy, vs...))
}

// HTTPSProxyGT applies the GT predicate on the "https_proxy" field.
func HTTPSProxyGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldHTTPSProxy, v))
}

// HTTPSProxyGTE applies the GTE predicate on the "https_proxy" field.
func HTTPSProxyGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldHTTPSProxy, v))
}

// HTTPSProxyLT applies the LT predicate on the "https_proxy" field.
func HTTPSProxyLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldHTTPSProxy, v))
}

// HTTPSProxyLTE applies the LTE predicate on the "https_proxy" field.
func HTTPSProxyLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldHTTPSProxy, v))
}

// HTTPSProxyContains applies the Contains predicate on the "https_proxy" field.
func HTTPSProxyContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldHTTPSProxy, v))
}

// HTTPSProxyHasPrefix applies the HasPrefix predicate on the "https_proxy" field.
func HTTPSProxyHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldHTTPSProxy, v))
}

// HTTPSProxyHasSuffix applies the HasSuffix predicate on the "https_proxy" field.
func HTTPSProxyHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldHTTPSProxy, v))
}

// HTTPSProxyIsNil applies the IsNil predicate on the "https_proxy" field.
func HTTPSProxyIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldHTTPSProxy))
}

// HTTPSProxyNotNil applies the NotNil predicate on the "https_proxy" field.
func HTTPSProxyNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldHTTPSProxy))
}

// HTTPSProxyEqualFold applies the EqualFold predicate on the "https_proxy" field.
func HTTPSProxyEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldHTTPSProxy, v))
}

// HTTPSProxyContainsFold applies the ContainsFold predicate on the "https_proxy" field.
func HTTPSProxyContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldHTTPSProxy, v))
}

// FtpProxyEQ applies the EQ predicate on the "ftp_proxy" field.
func FtpProxyEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldFtpProxy, v))
}

// FtpProxyNEQ applies the NEQ predicate on the "ftp_proxy" field.
func FtpProxyNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldFtpProxy, v))
}

// FtpProxyIn applies the In predicate on the "ftp_proxy" field.
func FtpProxyIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldFtpProxy, vs...))
}

// FtpProxyNotIn applies the NotIn predicate on the "ftp_proxy" field.
func FtpProxyNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldFtpProxy, vs...))
}

// FtpProxyGT applies the GT predicate on the "ftp_proxy" field.
func FtpProxyGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldFtpProxy, v))
}

// FtpProxyGTE applies the GTE predicate on the "ftp_proxy" field.
func FtpProxyGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldFtpProxy, v))
}

// FtpProxyLT applies the LT predicate on the "ftp_proxy" field.
func FtpProxyLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldFtpProxy, v))
}

// FtpProxyLTE applies the LTE predicate on the "ftp_proxy" field.
func FtpProxyLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldFtpProxy, v))
}

// FtpProxyContains applies the Contains predicate on the "ftp_proxy" field.
func FtpProxyContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldFtpProxy, v))
}

// FtpProxyHasPrefix applies the HasPrefix predicate on the "ftp_proxy" field.
func FtpProxyHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldFtpProxy, v))
}

// FtpProxyHasSuffix applies the HasSuffix predicate on the "ftp_proxy" field.
func FtpProxyHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldFtpProxy, v))
}

// FtpProxyIsNil applies the IsNil predicate on the "ftp_proxy" field.
func FtpProxyIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldFtpProxy))
}

// FtpProxyNotNil applies the NotNil predicate on the "ftp_proxy" field.
func FtpProxyNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldFtpProxy))
}

// FtpProxyEqualFold applies the EqualFold predicate on the "ftp_proxy" field.
func FtpProxyEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldFtpProxy, v))
}

// FtpProxyContainsFold applies the ContainsFold predicate on the "ftp_proxy" field.
func FtpProxyContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldFtpProxy, v))
}

// NoProxyEQ applies the EQ predicate on the "no_proxy" field.
func NoProxyEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldNoProxy, v))
}

// NoProxyNEQ applies the NEQ predicate on the "no_proxy" field.
func NoProxyNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldNoProxy, v))
}

// NoProxyIn applies the In predicate on the "no_proxy" field.
func NoProxyIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldNoProxy, vs...))
}

// NoProxyNotIn applies the NotIn predicate on the "no_proxy" field.
func NoProxyNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldNoProxy, vs...))
}

// NoProxyGT applies the GT predicate on the "no_proxy" field.
func NoProxyGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldNoProxy, v))
}

// NoProxyGTE applies the GTE predicate on the "no_proxy" field.
func NoProxyGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldNoProxy, v))
}

// NoProxyLT applies the LT predicate on the "no_proxy" field.
func NoProxyLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldNoProxy, v))
}

// NoProxyLTE applies the LTE predicate on the "no_proxy" field.
func NoProxyLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldNoProxy, v))
}

// NoProxyContains applies the Contains predicate on the "no_proxy" field.
func NoProxyContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldNoProxy, v))
}

// NoProxyHasPrefix applies the HasPrefix predicate on the "no_proxy" field.
func NoProxyHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldNoProxy, v))
}

// NoProxyHasSuffix applies the HasSuffix predicate on the "no_proxy" field.
func NoProxyHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldNoProxy, v))
}

// NoProxyIsNil applies the IsNil predicate on the "no_proxy" field.
func NoProxyIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldNoProxy))
}

// NoProxyNotNil applies the NotNil predicate on the "no_proxy" field.
func NoProxyNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldNoProxy))
}

// NoProxyEqualFold applies the EqualFold predicate on the "no_proxy" field.
func NoProxyEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldNoProxy, v))
}

// NoProxyContainsFold applies the ContainsFold predicate on the "no_proxy" field.
func NoProxyContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldNoProxy, v))
}

// MetadataEQ applies the EQ predicate on the "metadata" field.
func MetadataEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEQ(FieldMetadata, v))
}

// MetadataNEQ applies the NEQ predicate on the "metadata" field.
func MetadataNEQ(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNEQ(FieldMetadata, v))
}

// MetadataIn applies the In predicate on the "metadata" field.
func MetadataIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIn(FieldMetadata, vs...))
}

// MetadataNotIn applies the NotIn predicate on the "metadata" field.
func MetadataNotIn(vs ...string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotIn(FieldMetadata, vs...))
}

// MetadataGT applies the GT predicate on the "metadata" field.
func MetadataGT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGT(FieldMetadata, v))
}

// MetadataGTE applies the GTE predicate on the "metadata" field.
func MetadataGTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldGTE(FieldMetadata, v))
}

// MetadataLT applies the LT predicate on the "metadata" field.
func MetadataLT(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLT(FieldMetadata, v))
}

// MetadataLTE applies the LTE predicate on the "metadata" field.
func MetadataLTE(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldLTE(FieldMetadata, v))
}

// MetadataContains applies the Contains predicate on the "metadata" field.
func MetadataContains(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContains(FieldMetadata, v))
}

// MetadataHasPrefix applies the HasPrefix predicate on the "metadata" field.
func MetadataHasPrefix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasPrefix(FieldMetadata, v))
}

// MetadataHasSuffix applies the HasSuffix predicate on the "metadata" field.
func MetadataHasSuffix(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldHasSuffix(FieldMetadata, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.SiteResource {
	return predicate.SiteResource(sql.FieldNotNull(FieldMetadata))
}

// MetadataEqualFold applies the EqualFold predicate on the "metadata" field.
func MetadataEqualFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldEqualFold(FieldMetadata, v))
}

// MetadataContainsFold applies the ContainsFold predicate on the "metadata" field.
func MetadataContainsFold(v string) predicate.SiteResource {
	return predicate.SiteResource(sql.FieldContainsFold(FieldMetadata, v))
}

// HasRegion applies the HasEdge predicate on the "region" edge.
func HasRegion() predicate.SiteResource {
	return predicate.SiteResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, RegionTable, RegionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRegionWith applies the HasEdge predicate on the "region" edge with a given conditions (other predicates).
func HasRegionWith(preds ...predicate.RegionResource) predicate.SiteResource {
	return predicate.SiteResource(func(s *sql.Selector) {
		step := newRegionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasOu applies the HasEdge predicate on the "ou" edge.
func HasOu() predicate.SiteResource {
	return predicate.SiteResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, OuTable, OuColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOuWith applies the HasEdge predicate on the "ou" edge with a given conditions (other predicates).
func HasOuWith(preds ...predicate.OuResource) predicate.SiteResource {
	return predicate.SiteResource(func(s *sql.Selector) {
		step := newOuStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SiteResource) predicate.SiteResource {
	return predicate.SiteResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SiteResource) predicate.SiteResource {
	return predicate.SiteResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SiteResource) predicate.SiteResource {
	return predicate.SiteResource(func(s *sql.Selector) {
		p(s.Not())
	})
}
