// Code generated by ent, DO NOT EDIT.

package hostnicresource

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/intel-innersource/frameworks.edge.one-intel-edge.maestro-infra.services.inventory/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldResourceID, v))
}

// Kind applies equality check predicate on the "kind" field. It's identical to KindEQ.
func Kind(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldKind, v))
}

// ProviderStatus applies equality check predicate on the "provider_status" field. It's identical to ProviderStatusEQ.
func ProviderStatus(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldProviderStatus, v))
}

// DeviceName applies equality check predicate on the "device_name" field. It's identical to DeviceNameEQ.
func DeviceName(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldDeviceName, v))
}

// PciIdentifier applies equality check predicate on the "pci_identifier" field. It's identical to PciIdentifierEQ.
func PciIdentifier(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPciIdentifier, v))
}

// MACAddr applies equality check predicate on the "mac_addr" field. It's identical to MACAddrEQ.
func MACAddr(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldMACAddr, v))
}

// SriovEnabled applies equality check predicate on the "sriov_enabled" field. It's identical to SriovEnabledEQ.
func SriovEnabled(v bool) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSriovEnabled, v))
}

// SriovVfsNum applies equality check predicate on the "sriov_vfs_num" field. It's identical to SriovVfsNumEQ.
func SriovVfsNum(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSriovVfsNum, v))
}

// SriovVfsTotal applies equality check predicate on the "sriov_vfs_total" field. It's identical to SriovVfsTotalEQ.
func SriovVfsTotal(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSriovVfsTotal, v))
}

// PeerName applies equality check predicate on the "peer_name" field. It's identical to PeerNameEQ.
func PeerName(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerName, v))
}

// PeerDescription applies equality check predicate on the "peer_description" field. It's identical to PeerDescriptionEQ.
func PeerDescription(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerDescription, v))
}

// PeerMAC applies equality check predicate on the "peer_mac" field. It's identical to PeerMACEQ.
func PeerMAC(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerMAC, v))
}

// PeerMgmtIP applies equality check predicate on the "peer_mgmt_ip" field. It's identical to PeerMgmtIPEQ.
func PeerMgmtIP(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerMgmtIP, v))
}

// PeerPort applies equality check predicate on the "peer_port" field. It's identical to PeerPortEQ.
func PeerPort(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerPort, v))
}

// SupportedLinkMode applies equality check predicate on the "supported_link_mode" field. It's identical to SupportedLinkModeEQ.
func SupportedLinkMode(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSupportedLinkMode, v))
}

// AdvertisingLinkMode applies equality check predicate on the "advertising_link_mode" field. It's identical to AdvertisingLinkModeEQ.
func AdvertisingLinkMode(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldAdvertisingLinkMode, v))
}

// CurrentSpeedBps applies equality check predicate on the "current_speed_bps" field. It's identical to CurrentSpeedBpsEQ.
func CurrentSpeedBps(v uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldCurrentSpeedBps, v))
}

// CurrentDuplex applies equality check predicate on the "current_duplex" field. It's identical to CurrentDuplexEQ.
func CurrentDuplex(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldCurrentDuplex, v))
}

// Features applies equality check predicate on the "features" field. It's identical to FeaturesEQ.
func Features(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldFeatures, v))
}

// Mtu applies equality check predicate on the "mtu" field. It's identical to MtuEQ.
func Mtu(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldMtu, v))
}

// BmcInterface applies equality check predicate on the "bmc_interface" field. It's identical to BmcInterfaceEQ.
func BmcInterface(v bool) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldBmcInterface, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldResourceID, v))
}

// KindEQ applies the EQ predicate on the "kind" field.
func KindEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldKind, v))
}

// KindNEQ applies the NEQ predicate on the "kind" field.
func KindNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldKind, v))
}

// KindIn applies the In predicate on the "kind" field.
func KindIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldKind, vs...))
}

// KindNotIn applies the NotIn predicate on the "kind" field.
func KindNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldKind, vs...))
}

// KindGT applies the GT predicate on the "kind" field.
func KindGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldKind, v))
}

// KindGTE applies the GTE predicate on the "kind" field.
func KindGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldKind, v))
}

// KindLT applies the LT predicate on the "kind" field.
func KindLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldKind, v))
}

// KindLTE applies the LTE predicate on the "kind" field.
func KindLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldKind, v))
}

// KindContains applies the Contains predicate on the "kind" field.
func KindContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldKind, v))
}

// KindHasPrefix applies the HasPrefix predicate on the "kind" field.
func KindHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldKind, v))
}

// KindHasSuffix applies the HasSuffix predicate on the "kind" field.
func KindHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldKind, v))
}

// KindIsNil applies the IsNil predicate on the "kind" field.
func KindIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldKind))
}

// KindNotNil applies the NotNil predicate on the "kind" field.
func KindNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldKind))
}

// KindEqualFold applies the EqualFold predicate on the "kind" field.
func KindEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldKind, v))
}

// KindContainsFold applies the ContainsFold predicate on the "kind" field.
func KindContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldKind, v))
}

// ProviderStatusEQ applies the EQ predicate on the "provider_status" field.
func ProviderStatusEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldProviderStatus, v))
}

// ProviderStatusNEQ applies the NEQ predicate on the "provider_status" field.
func ProviderStatusNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldProviderStatus, v))
}

// ProviderStatusIn applies the In predicate on the "provider_status" field.
func ProviderStatusIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldProviderStatus, vs...))
}

// ProviderStatusNotIn applies the NotIn predicate on the "provider_status" field.
func ProviderStatusNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldProviderStatus, vs...))
}

// ProviderStatusGT applies the GT predicate on the "provider_status" field.
func ProviderStatusGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldProviderStatus, v))
}

// ProviderStatusGTE applies the GTE predicate on the "provider_status" field.
func ProviderStatusGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldProviderStatus, v))
}

// ProviderStatusLT applies the LT predicate on the "provider_status" field.
func ProviderStatusLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldProviderStatus, v))
}

// ProviderStatusLTE applies the LTE predicate on the "provider_status" field.
func ProviderStatusLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldProviderStatus, v))
}

// ProviderStatusContains applies the Contains predicate on the "provider_status" field.
func ProviderStatusContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldProviderStatus, v))
}

// ProviderStatusHasPrefix applies the HasPrefix predicate on the "provider_status" field.
func ProviderStatusHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldProviderStatus, v))
}

// ProviderStatusHasSuffix applies the HasSuffix predicate on the "provider_status" field.
func ProviderStatusHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldProviderStatus, v))
}

// ProviderStatusIsNil applies the IsNil predicate on the "provider_status" field.
func ProviderStatusIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldProviderStatus))
}

// ProviderStatusNotNil applies the NotNil predicate on the "provider_status" field.
func ProviderStatusNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldProviderStatus))
}

// ProviderStatusEqualFold applies the EqualFold predicate on the "provider_status" field.
func ProviderStatusEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldProviderStatus, v))
}

// ProviderStatusContainsFold applies the ContainsFold predicate on the "provider_status" field.
func ProviderStatusContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldProviderStatus, v))
}

// DeviceNameEQ applies the EQ predicate on the "device_name" field.
func DeviceNameEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldDeviceName, v))
}

// DeviceNameNEQ applies the NEQ predicate on the "device_name" field.
func DeviceNameNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldDeviceName, v))
}

// DeviceNameIn applies the In predicate on the "device_name" field.
func DeviceNameIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldDeviceName, vs...))
}

// DeviceNameNotIn applies the NotIn predicate on the "device_name" field.
func DeviceNameNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldDeviceName, vs...))
}

// DeviceNameGT applies the GT predicate on the "device_name" field.
func DeviceNameGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldDeviceName, v))
}

// DeviceNameGTE applies the GTE predicate on the "device_name" field.
func DeviceNameGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldDeviceName, v))
}

// DeviceNameLT applies the LT predicate on the "device_name" field.
func DeviceNameLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldDeviceName, v))
}

// DeviceNameLTE applies the LTE predicate on the "device_name" field.
func DeviceNameLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldDeviceName, v))
}

// DeviceNameContains applies the Contains predicate on the "device_name" field.
func DeviceNameContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldDeviceName, v))
}

// DeviceNameHasPrefix applies the HasPrefix predicate on the "device_name" field.
func DeviceNameHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldDeviceName, v))
}

// DeviceNameHasSuffix applies the HasSuffix predicate on the "device_name" field.
func DeviceNameHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldDeviceName, v))
}

// DeviceNameIsNil applies the IsNil predicate on the "device_name" field.
func DeviceNameIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldDeviceName))
}

// DeviceNameNotNil applies the NotNil predicate on the "device_name" field.
func DeviceNameNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldDeviceName))
}

// DeviceNameEqualFold applies the EqualFold predicate on the "device_name" field.
func DeviceNameEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldDeviceName, v))
}

// DeviceNameContainsFold applies the ContainsFold predicate on the "device_name" field.
func DeviceNameContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldDeviceName, v))
}

// PciIdentifierEQ applies the EQ predicate on the "pci_identifier" field.
func PciIdentifierEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPciIdentifier, v))
}

// PciIdentifierNEQ applies the NEQ predicate on the "pci_identifier" field.
func PciIdentifierNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldPciIdentifier, v))
}

// PciIdentifierIn applies the In predicate on the "pci_identifier" field.
func PciIdentifierIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldPciIdentifier, vs...))
}

// PciIdentifierNotIn applies the NotIn predicate on the "pci_identifier" field.
func PciIdentifierNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldPciIdentifier, vs...))
}

// PciIdentifierGT applies the GT predicate on the "pci_identifier" field.
func PciIdentifierGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldPciIdentifier, v))
}

// PciIdentifierGTE applies the GTE predicate on the "pci_identifier" field.
func PciIdentifierGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldPciIdentifier, v))
}

// PciIdentifierLT applies the LT predicate on the "pci_identifier" field.
func PciIdentifierLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldPciIdentifier, v))
}

// PciIdentifierLTE applies the LTE predicate on the "pci_identifier" field.
func PciIdentifierLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldPciIdentifier, v))
}

// PciIdentifierContains applies the Contains predicate on the "pci_identifier" field.
func PciIdentifierContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldPciIdentifier, v))
}

// PciIdentifierHasPrefix applies the HasPrefix predicate on the "pci_identifier" field.
func PciIdentifierHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldPciIdentifier, v))
}

// PciIdentifierHasSuffix applies the HasSuffix predicate on the "pci_identifier" field.
func PciIdentifierHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldPciIdentifier, v))
}

// PciIdentifierIsNil applies the IsNil predicate on the "pci_identifier" field.
func PciIdentifierIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldPciIdentifier))
}

// PciIdentifierNotNil applies the NotNil predicate on the "pci_identifier" field.
func PciIdentifierNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldPciIdentifier))
}

// PciIdentifierEqualFold applies the EqualFold predicate on the "pci_identifier" field.
func PciIdentifierEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldPciIdentifier, v))
}

// PciIdentifierContainsFold applies the ContainsFold predicate on the "pci_identifier" field.
func PciIdentifierContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldPciIdentifier, v))
}

// MACAddrEQ applies the EQ predicate on the "mac_addr" field.
func MACAddrEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldMACAddr, v))
}

// MACAddrNEQ applies the NEQ predicate on the "mac_addr" field.
func MACAddrNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldMACAddr, v))
}

// MACAddrIn applies the In predicate on the "mac_addr" field.
func MACAddrIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldMACAddr, vs...))
}

// MACAddrNotIn applies the NotIn predicate on the "mac_addr" field.
func MACAddrNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldMACAddr, vs...))
}

// MACAddrGT applies the GT predicate on the "mac_addr" field.
func MACAddrGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldMACAddr, v))
}

// MACAddrGTE applies the GTE predicate on the "mac_addr" field.
func MACAddrGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldMACAddr, v))
}

// MACAddrLT applies the LT predicate on the "mac_addr" field.
func MACAddrLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldMACAddr, v))
}

// MACAddrLTE applies the LTE predicate on the "mac_addr" field.
func MACAddrLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldMACAddr, v))
}

// MACAddrContains applies the Contains predicate on the "mac_addr" field.
func MACAddrContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldMACAddr, v))
}

// MACAddrHasPrefix applies the HasPrefix predicate on the "mac_addr" field.
func MACAddrHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldMACAddr, v))
}

// MACAddrHasSuffix applies the HasSuffix predicate on the "mac_addr" field.
func MACAddrHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldMACAddr, v))
}

// MACAddrIsNil applies the IsNil predicate on the "mac_addr" field.
func MACAddrIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldMACAddr))
}

// MACAddrNotNil applies the NotNil predicate on the "mac_addr" field.
func MACAddrNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldMACAddr))
}

// MACAddrEqualFold applies the EqualFold predicate on the "mac_addr" field.
func MACAddrEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldMACAddr, v))
}

// MACAddrContainsFold applies the ContainsFold predicate on the "mac_addr" field.
func MACAddrContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldMACAddr, v))
}

// SriovEnabledEQ applies the EQ predicate on the "sriov_enabled" field.
func SriovEnabledEQ(v bool) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSriovEnabled, v))
}

// SriovEnabledNEQ applies the NEQ predicate on the "sriov_enabled" field.
func SriovEnabledNEQ(v bool) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldSriovEnabled, v))
}

// SriovEnabledIsNil applies the IsNil predicate on the "sriov_enabled" field.
func SriovEnabledIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldSriovEnabled))
}

// SriovEnabledNotNil applies the NotNil predicate on the "sriov_enabled" field.
func SriovEnabledNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldSriovEnabled))
}

// SriovVfsNumEQ applies the EQ predicate on the "sriov_vfs_num" field.
func SriovVfsNumEQ(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSriovVfsNum, v))
}

// SriovVfsNumNEQ applies the NEQ predicate on the "sriov_vfs_num" field.
func SriovVfsNumNEQ(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldSriovVfsNum, v))
}

// SriovVfsNumIn applies the In predicate on the "sriov_vfs_num" field.
func SriovVfsNumIn(vs ...uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldSriovVfsNum, vs...))
}

// SriovVfsNumNotIn applies the NotIn predicate on the "sriov_vfs_num" field.
func SriovVfsNumNotIn(vs ...uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldSriovVfsNum, vs...))
}

// SriovVfsNumGT applies the GT predicate on the "sriov_vfs_num" field.
func SriovVfsNumGT(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldSriovVfsNum, v))
}

// SriovVfsNumGTE applies the GTE predicate on the "sriov_vfs_num" field.
func SriovVfsNumGTE(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldSriovVfsNum, v))
}

// SriovVfsNumLT applies the LT predicate on the "sriov_vfs_num" field.
func SriovVfsNumLT(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldSriovVfsNum, v))
}

// SriovVfsNumLTE applies the LTE predicate on the "sriov_vfs_num" field.
func SriovVfsNumLTE(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldSriovVfsNum, v))
}

// SriovVfsNumIsNil applies the IsNil predicate on the "sriov_vfs_num" field.
func SriovVfsNumIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldSriovVfsNum))
}

// SriovVfsNumNotNil applies the NotNil predicate on the "sriov_vfs_num" field.
func SriovVfsNumNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldSriovVfsNum))
}

// SriovVfsTotalEQ applies the EQ predicate on the "sriov_vfs_total" field.
func SriovVfsTotalEQ(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSriovVfsTotal, v))
}

// SriovVfsTotalNEQ applies the NEQ predicate on the "sriov_vfs_total" field.
func SriovVfsTotalNEQ(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldSriovVfsTotal, v))
}

// SriovVfsTotalIn applies the In predicate on the "sriov_vfs_total" field.
func SriovVfsTotalIn(vs ...uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldSriovVfsTotal, vs...))
}

// SriovVfsTotalNotIn applies the NotIn predicate on the "sriov_vfs_total" field.
func SriovVfsTotalNotIn(vs ...uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldSriovVfsTotal, vs...))
}

// SriovVfsTotalGT applies the GT predicate on the "sriov_vfs_total" field.
func SriovVfsTotalGT(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldSriovVfsTotal, v))
}

// SriovVfsTotalGTE applies the GTE predicate on the "sriov_vfs_total" field.
func SriovVfsTotalGTE(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldSriovVfsTotal, v))
}

// SriovVfsTotalLT applies the LT predicate on the "sriov_vfs_total" field.
func SriovVfsTotalLT(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldSriovVfsTotal, v))
}

// SriovVfsTotalLTE applies the LTE predicate on the "sriov_vfs_total" field.
func SriovVfsTotalLTE(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldSriovVfsTotal, v))
}

// SriovVfsTotalIsNil applies the IsNil predicate on the "sriov_vfs_total" field.
func SriovVfsTotalIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldSriovVfsTotal))
}

// SriovVfsTotalNotNil applies the NotNil predicate on the "sriov_vfs_total" field.
func SriovVfsTotalNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldSriovVfsTotal))
}

// PeerNameEQ applies the EQ predicate on the "peer_name" field.
func PeerNameEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerName, v))
}

// PeerNameNEQ applies the NEQ predicate on the "peer_name" field.
func PeerNameNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldPeerName, v))
}

// PeerNameIn applies the In predicate on the "peer_name" field.
func PeerNameIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldPeerName, vs...))
}

// PeerNameNotIn applies the NotIn predicate on the "peer_name" field.
func PeerNameNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldPeerName, vs...))
}

// PeerNameGT applies the GT predicate on the "peer_name" field.
func PeerNameGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldPeerName, v))
}

// PeerNameGTE applies the GTE predicate on the "peer_name" field.
func PeerNameGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldPeerName, v))
}

// PeerNameLT applies the LT predicate on the "peer_name" field.
func PeerNameLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldPeerName, v))
}

// PeerNameLTE applies the LTE predicate on the "peer_name" field.
func PeerNameLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldPeerName, v))
}

// PeerNameContains applies the Contains predicate on the "peer_name" field.
func PeerNameContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldPeerName, v))
}

// PeerNameHasPrefix applies the HasPrefix predicate on the "peer_name" field.
func PeerNameHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldPeerName, v))
}

// PeerNameHasSuffix applies the HasSuffix predicate on the "peer_name" field.
func PeerNameHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldPeerName, v))
}

// PeerNameIsNil applies the IsNil predicate on the "peer_name" field.
func PeerNameIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldPeerName))
}

// PeerNameNotNil applies the NotNil predicate on the "peer_name" field.
func PeerNameNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldPeerName))
}

// PeerNameEqualFold applies the EqualFold predicate on the "peer_name" field.
func PeerNameEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldPeerName, v))
}

// PeerNameContainsFold applies the ContainsFold predicate on the "peer_name" field.
func PeerNameContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldPeerName, v))
}

// PeerDescriptionEQ applies the EQ predicate on the "peer_description" field.
func PeerDescriptionEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerDescription, v))
}

// PeerDescriptionNEQ applies the NEQ predicate on the "peer_description" field.
func PeerDescriptionNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldPeerDescription, v))
}

// PeerDescriptionIn applies the In predicate on the "peer_description" field.
func PeerDescriptionIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldPeerDescription, vs...))
}

// PeerDescriptionNotIn applies the NotIn predicate on the "peer_description" field.
func PeerDescriptionNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldPeerDescription, vs...))
}

// PeerDescriptionGT applies the GT predicate on the "peer_description" field.
func PeerDescriptionGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldPeerDescription, v))
}

// PeerDescriptionGTE applies the GTE predicate on the "peer_description" field.
func PeerDescriptionGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldPeerDescription, v))
}

// PeerDescriptionLT applies the LT predicate on the "peer_description" field.
func PeerDescriptionLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldPeerDescription, v))
}

// PeerDescriptionLTE applies the LTE predicate on the "peer_description" field.
func PeerDescriptionLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldPeerDescription, v))
}

// PeerDescriptionContains applies the Contains predicate on the "peer_description" field.
func PeerDescriptionContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldPeerDescription, v))
}

// PeerDescriptionHasPrefix applies the HasPrefix predicate on the "peer_description" field.
func PeerDescriptionHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldPeerDescription, v))
}

// PeerDescriptionHasSuffix applies the HasSuffix predicate on the "peer_description" field.
func PeerDescriptionHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldPeerDescription, v))
}

// PeerDescriptionIsNil applies the IsNil predicate on the "peer_description" field.
func PeerDescriptionIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldPeerDescription))
}

// PeerDescriptionNotNil applies the NotNil predicate on the "peer_description" field.
func PeerDescriptionNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldPeerDescription))
}

// PeerDescriptionEqualFold applies the EqualFold predicate on the "peer_description" field.
func PeerDescriptionEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldPeerDescription, v))
}

// PeerDescriptionContainsFold applies the ContainsFold predicate on the "peer_description" field.
func PeerDescriptionContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldPeerDescription, v))
}

// PeerMACEQ applies the EQ predicate on the "peer_mac" field.
func PeerMACEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerMAC, v))
}

// PeerMACNEQ applies the NEQ predicate on the "peer_mac" field.
func PeerMACNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldPeerMAC, v))
}

// PeerMACIn applies the In predicate on the "peer_mac" field.
func PeerMACIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldPeerMAC, vs...))
}

// PeerMACNotIn applies the NotIn predicate on the "peer_mac" field.
func PeerMACNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldPeerMAC, vs...))
}

// PeerMACGT applies the GT predicate on the "peer_mac" field.
func PeerMACGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldPeerMAC, v))
}

// PeerMACGTE applies the GTE predicate on the "peer_mac" field.
func PeerMACGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldPeerMAC, v))
}

// PeerMACLT applies the LT predicate on the "peer_mac" field.
func PeerMACLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldPeerMAC, v))
}

// PeerMACLTE applies the LTE predicate on the "peer_mac" field.
func PeerMACLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldPeerMAC, v))
}

// PeerMACContains applies the Contains predicate on the "peer_mac" field.
func PeerMACContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldPeerMAC, v))
}

// PeerMACHasPrefix applies the HasPrefix predicate on the "peer_mac" field.
func PeerMACHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldPeerMAC, v))
}

// PeerMACHasSuffix applies the HasSuffix predicate on the "peer_mac" field.
func PeerMACHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldPeerMAC, v))
}

// PeerMACIsNil applies the IsNil predicate on the "peer_mac" field.
func PeerMACIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldPeerMAC))
}

// PeerMACNotNil applies the NotNil predicate on the "peer_mac" field.
func PeerMACNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldPeerMAC))
}

// PeerMACEqualFold applies the EqualFold predicate on the "peer_mac" field.
func PeerMACEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldPeerMAC, v))
}

// PeerMACContainsFold applies the ContainsFold predicate on the "peer_mac" field.
func PeerMACContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldPeerMAC, v))
}

// PeerMgmtIPEQ applies the EQ predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerMgmtIP, v))
}

// PeerMgmtIPNEQ applies the NEQ predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldPeerMgmtIP, v))
}

// PeerMgmtIPIn applies the In predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldPeerMgmtIP, vs...))
}

// PeerMgmtIPNotIn applies the NotIn predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldPeerMgmtIP, vs...))
}

// PeerMgmtIPGT applies the GT predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldPeerMgmtIP, v))
}

// PeerMgmtIPGTE applies the GTE predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldPeerMgmtIP, v))
}

// PeerMgmtIPLT applies the LT predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldPeerMgmtIP, v))
}

// PeerMgmtIPLTE applies the LTE predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldPeerMgmtIP, v))
}

// PeerMgmtIPContains applies the Contains predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldPeerMgmtIP, v))
}

// PeerMgmtIPHasPrefix applies the HasPrefix predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldPeerMgmtIP, v))
}

// PeerMgmtIPHasSuffix applies the HasSuffix predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldPeerMgmtIP, v))
}

// PeerMgmtIPIsNil applies the IsNil predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldPeerMgmtIP))
}

// PeerMgmtIPNotNil applies the NotNil predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldPeerMgmtIP))
}

// PeerMgmtIPEqualFold applies the EqualFold predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldPeerMgmtIP, v))
}

// PeerMgmtIPContainsFold applies the ContainsFold predicate on the "peer_mgmt_ip" field.
func PeerMgmtIPContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldPeerMgmtIP, v))
}

// PeerPortEQ applies the EQ predicate on the "peer_port" field.
func PeerPortEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldPeerPort, v))
}

// PeerPortNEQ applies the NEQ predicate on the "peer_port" field.
func PeerPortNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldPeerPort, v))
}

// PeerPortIn applies the In predicate on the "peer_port" field.
func PeerPortIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldPeerPort, vs...))
}

// PeerPortNotIn applies the NotIn predicate on the "peer_port" field.
func PeerPortNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldPeerPort, vs...))
}

// PeerPortGT applies the GT predicate on the "peer_port" field.
func PeerPortGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldPeerPort, v))
}

// PeerPortGTE applies the GTE predicate on the "peer_port" field.
func PeerPortGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldPeerPort, v))
}

// PeerPortLT applies the LT predicate on the "peer_port" field.
func PeerPortLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldPeerPort, v))
}

// PeerPortLTE applies the LTE predicate on the "peer_port" field.
func PeerPortLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldPeerPort, v))
}

// PeerPortContains applies the Contains predicate on the "peer_port" field.
func PeerPortContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldPeerPort, v))
}

// PeerPortHasPrefix applies the HasPrefix predicate on the "peer_port" field.
func PeerPortHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldPeerPort, v))
}

// PeerPortHasSuffix applies the HasSuffix predicate on the "peer_port" field.
func PeerPortHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldPeerPort, v))
}

// PeerPortIsNil applies the IsNil predicate on the "peer_port" field.
func PeerPortIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldPeerPort))
}

// PeerPortNotNil applies the NotNil predicate on the "peer_port" field.
func PeerPortNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldPeerPort))
}

// PeerPortEqualFold applies the EqualFold predicate on the "peer_port" field.
func PeerPortEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldPeerPort, v))
}

// PeerPortContainsFold applies the ContainsFold predicate on the "peer_port" field.
func PeerPortContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldPeerPort, v))
}

// SupportedLinkModeEQ applies the EQ predicate on the "supported_link_mode" field.
func SupportedLinkModeEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldSupportedLinkMode, v))
}

// SupportedLinkModeNEQ applies the NEQ predicate on the "supported_link_mode" field.
func SupportedLinkModeNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldSupportedLinkMode, v))
}

// SupportedLinkModeIn applies the In predicate on the "supported_link_mode" field.
func SupportedLinkModeIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldSupportedLinkMode, vs...))
}

// SupportedLinkModeNotIn applies the NotIn predicate on the "supported_link_mode" field.
func SupportedLinkModeNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldSupportedLinkMode, vs...))
}

// SupportedLinkModeGT applies the GT predicate on the "supported_link_mode" field.
func SupportedLinkModeGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldSupportedLinkMode, v))
}

// SupportedLinkModeGTE applies the GTE predicate on the "supported_link_mode" field.
func SupportedLinkModeGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldSupportedLinkMode, v))
}

// SupportedLinkModeLT applies the LT predicate on the "supported_link_mode" field.
func SupportedLinkModeLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldSupportedLinkMode, v))
}

// SupportedLinkModeLTE applies the LTE predicate on the "supported_link_mode" field.
func SupportedLinkModeLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldSupportedLinkMode, v))
}

// SupportedLinkModeContains applies the Contains predicate on the "supported_link_mode" field.
func SupportedLinkModeContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldSupportedLinkMode, v))
}

// SupportedLinkModeHasPrefix applies the HasPrefix predicate on the "supported_link_mode" field.
func SupportedLinkModeHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldSupportedLinkMode, v))
}

// SupportedLinkModeHasSuffix applies the HasSuffix predicate on the "supported_link_mode" field.
func SupportedLinkModeHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldSupportedLinkMode, v))
}

// SupportedLinkModeIsNil applies the IsNil predicate on the "supported_link_mode" field.
func SupportedLinkModeIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldSupportedLinkMode))
}

// SupportedLinkModeNotNil applies the NotNil predicate on the "supported_link_mode" field.
func SupportedLinkModeNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldSupportedLinkMode))
}

// SupportedLinkModeEqualFold applies the EqualFold predicate on the "supported_link_mode" field.
func SupportedLinkModeEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldSupportedLinkMode, v))
}

// SupportedLinkModeContainsFold applies the ContainsFold predicate on the "supported_link_mode" field.
func SupportedLinkModeContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldSupportedLinkMode, v))
}

// AdvertisingLinkModeEQ applies the EQ predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeNEQ applies the NEQ predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeIn applies the In predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldAdvertisingLinkMode, vs...))
}

// AdvertisingLinkModeNotIn applies the NotIn predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldAdvertisingLinkMode, vs...))
}

// AdvertisingLinkModeGT applies the GT predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeGTE applies the GTE predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeLT applies the LT predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeLTE applies the LTE predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeContains applies the Contains predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeHasPrefix applies the HasPrefix predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeHasSuffix applies the HasSuffix predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeIsNil applies the IsNil predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldAdvertisingLinkMode))
}

// AdvertisingLinkModeNotNil applies the NotNil predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldAdvertisingLinkMode))
}

// AdvertisingLinkModeEqualFold applies the EqualFold predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldAdvertisingLinkMode, v))
}

// AdvertisingLinkModeContainsFold applies the ContainsFold predicate on the "advertising_link_mode" field.
func AdvertisingLinkModeContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldAdvertisingLinkMode, v))
}

// CurrentSpeedBpsEQ applies the EQ predicate on the "current_speed_bps" field.
func CurrentSpeedBpsEQ(v uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldCurrentSpeedBps, v))
}

// CurrentSpeedBpsNEQ applies the NEQ predicate on the "current_speed_bps" field.
func CurrentSpeedBpsNEQ(v uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldCurrentSpeedBps, v))
}

// CurrentSpeedBpsIn applies the In predicate on the "current_speed_bps" field.
func CurrentSpeedBpsIn(vs ...uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldCurrentSpeedBps, vs...))
}

// CurrentSpeedBpsNotIn applies the NotIn predicate on the "current_speed_bps" field.
func CurrentSpeedBpsNotIn(vs ...uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldCurrentSpeedBps, vs...))
}

// CurrentSpeedBpsGT applies the GT predicate on the "current_speed_bps" field.
func CurrentSpeedBpsGT(v uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldCurrentSpeedBps, v))
}

// CurrentSpeedBpsGTE applies the GTE predicate on the "current_speed_bps" field.
func CurrentSpeedBpsGTE(v uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldCurrentSpeedBps, v))
}

// CurrentSpeedBpsLT applies the LT predicate on the "current_speed_bps" field.
func CurrentSpeedBpsLT(v uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldCurrentSpeedBps, v))
}

// CurrentSpeedBpsLTE applies the LTE predicate on the "current_speed_bps" field.
func CurrentSpeedBpsLTE(v uint64) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldCurrentSpeedBps, v))
}

// CurrentSpeedBpsIsNil applies the IsNil predicate on the "current_speed_bps" field.
func CurrentSpeedBpsIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldCurrentSpeedBps))
}

// CurrentSpeedBpsNotNil applies the NotNil predicate on the "current_speed_bps" field.
func CurrentSpeedBpsNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldCurrentSpeedBps))
}

// CurrentDuplexEQ applies the EQ predicate on the "current_duplex" field.
func CurrentDuplexEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldCurrentDuplex, v))
}

// CurrentDuplexNEQ applies the NEQ predicate on the "current_duplex" field.
func CurrentDuplexNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldCurrentDuplex, v))
}

// CurrentDuplexIn applies the In predicate on the "current_duplex" field.
func CurrentDuplexIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldCurrentDuplex, vs...))
}

// CurrentDuplexNotIn applies the NotIn predicate on the "current_duplex" field.
func CurrentDuplexNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldCurrentDuplex, vs...))
}

// CurrentDuplexGT applies the GT predicate on the "current_duplex" field.
func CurrentDuplexGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldCurrentDuplex, v))
}

// CurrentDuplexGTE applies the GTE predicate on the "current_duplex" field.
func CurrentDuplexGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldCurrentDuplex, v))
}

// CurrentDuplexLT applies the LT predicate on the "current_duplex" field.
func CurrentDuplexLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldCurrentDuplex, v))
}

// CurrentDuplexLTE applies the LTE predicate on the "current_duplex" field.
func CurrentDuplexLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldCurrentDuplex, v))
}

// CurrentDuplexContains applies the Contains predicate on the "current_duplex" field.
func CurrentDuplexContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldCurrentDuplex, v))
}

// CurrentDuplexHasPrefix applies the HasPrefix predicate on the "current_duplex" field.
func CurrentDuplexHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldCurrentDuplex, v))
}

// CurrentDuplexHasSuffix applies the HasSuffix predicate on the "current_duplex" field.
func CurrentDuplexHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldCurrentDuplex, v))
}

// CurrentDuplexIsNil applies the IsNil predicate on the "current_duplex" field.
func CurrentDuplexIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldCurrentDuplex))
}

// CurrentDuplexNotNil applies the NotNil predicate on the "current_duplex" field.
func CurrentDuplexNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldCurrentDuplex))
}

// CurrentDuplexEqualFold applies the EqualFold predicate on the "current_duplex" field.
func CurrentDuplexEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldCurrentDuplex, v))
}

// CurrentDuplexContainsFold applies the ContainsFold predicate on the "current_duplex" field.
func CurrentDuplexContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldCurrentDuplex, v))
}

// FeaturesEQ applies the EQ predicate on the "features" field.
func FeaturesEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldFeatures, v))
}

// FeaturesNEQ applies the NEQ predicate on the "features" field.
func FeaturesNEQ(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldFeatures, v))
}

// FeaturesIn applies the In predicate on the "features" field.
func FeaturesIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldFeatures, vs...))
}

// FeaturesNotIn applies the NotIn predicate on the "features" field.
func FeaturesNotIn(vs ...string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldFeatures, vs...))
}

// FeaturesGT applies the GT predicate on the "features" field.
func FeaturesGT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldFeatures, v))
}

// FeaturesGTE applies the GTE predicate on the "features" field.
func FeaturesGTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldFeatures, v))
}

// FeaturesLT applies the LT predicate on the "features" field.
func FeaturesLT(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldFeatures, v))
}

// FeaturesLTE applies the LTE predicate on the "features" field.
func FeaturesLTE(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldFeatures, v))
}

// FeaturesContains applies the Contains predicate on the "features" field.
func FeaturesContains(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContains(FieldFeatures, v))
}

// FeaturesHasPrefix applies the HasPrefix predicate on the "features" field.
func FeaturesHasPrefix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasPrefix(FieldFeatures, v))
}

// FeaturesHasSuffix applies the HasSuffix predicate on the "features" field.
func FeaturesHasSuffix(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldHasSuffix(FieldFeatures, v))
}

// FeaturesIsNil applies the IsNil predicate on the "features" field.
func FeaturesIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldFeatures))
}

// FeaturesNotNil applies the NotNil predicate on the "features" field.
func FeaturesNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldFeatures))
}

// FeaturesEqualFold applies the EqualFold predicate on the "features" field.
func FeaturesEqualFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEqualFold(FieldFeatures, v))
}

// FeaturesContainsFold applies the ContainsFold predicate on the "features" field.
func FeaturesContainsFold(v string) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldContainsFold(FieldFeatures, v))
}

// MtuEQ applies the EQ predicate on the "mtu" field.
func MtuEQ(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldMtu, v))
}

// MtuNEQ applies the NEQ predicate on the "mtu" field.
func MtuNEQ(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldMtu, v))
}

// MtuIn applies the In predicate on the "mtu" field.
func MtuIn(vs ...uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldMtu, vs...))
}

// MtuNotIn applies the NotIn predicate on the "mtu" field.
func MtuNotIn(vs ...uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldMtu, vs...))
}

// MtuGT applies the GT predicate on the "mtu" field.
func MtuGT(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGT(FieldMtu, v))
}

// MtuGTE applies the GTE predicate on the "mtu" field.
func MtuGTE(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldGTE(FieldMtu, v))
}

// MtuLT applies the LT predicate on the "mtu" field.
func MtuLT(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLT(FieldMtu, v))
}

// MtuLTE applies the LTE predicate on the "mtu" field.
func MtuLTE(v uint32) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldLTE(FieldMtu, v))
}

// MtuIsNil applies the IsNil predicate on the "mtu" field.
func MtuIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldMtu))
}

// MtuNotNil applies the NotNil predicate on the "mtu" field.
func MtuNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldMtu))
}

// LinkStateEQ applies the EQ predicate on the "link_state" field.
func LinkStateEQ(v LinkState) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldLinkState, v))
}

// LinkStateNEQ applies the NEQ predicate on the "link_state" field.
func LinkStateNEQ(v LinkState) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldLinkState, v))
}

// LinkStateIn applies the In predicate on the "link_state" field.
func LinkStateIn(vs ...LinkState) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIn(FieldLinkState, vs...))
}

// LinkStateNotIn applies the NotIn predicate on the "link_state" field.
func LinkStateNotIn(vs ...LinkState) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotIn(FieldLinkState, vs...))
}

// LinkStateIsNil applies the IsNil predicate on the "link_state" field.
func LinkStateIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldLinkState))
}

// LinkStateNotNil applies the NotNil predicate on the "link_state" field.
func LinkStateNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldLinkState))
}

// BmcInterfaceEQ applies the EQ predicate on the "bmc_interface" field.
func BmcInterfaceEQ(v bool) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldEQ(FieldBmcInterface, v))
}

// BmcInterfaceNEQ applies the NEQ predicate on the "bmc_interface" field.
func BmcInterfaceNEQ(v bool) predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNEQ(FieldBmcInterface, v))
}

// BmcInterfaceIsNil applies the IsNil predicate on the "bmc_interface" field.
func BmcInterfaceIsNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldIsNull(FieldBmcInterface))
}

// BmcInterfaceNotNil applies the NotNil predicate on the "bmc_interface" field.
func BmcInterfaceNotNil() predicate.HostnicResource {
	return predicate.HostnicResource(sql.FieldNotNull(FieldBmcInterface))
}

// HasSite applies the HasEdge predicate on the "site" edge.
func HasSite() predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, SiteTable, SiteColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSiteWith applies the HasEdge predicate on the "site" edge with a given conditions (other predicates).
func HasSiteWith(preds ...predicate.SiteResource) predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := newSiteStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasProvider applies the HasEdge predicate on the "provider" edge.
func HasProvider() predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ProviderTable, ProviderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProviderWith applies the HasEdge predicate on the "provider" edge with a given conditions (other predicates).
func HasProviderWith(preds ...predicate.ProviderResource) predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := newProviderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasProject applies the HasEdge predicate on the "project" edge.
func HasProject() predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ProjectTable, ProjectColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProjectWith applies the HasEdge predicate on the "project" edge with a given conditions (other predicates).
func HasProjectWith(preds ...predicate.ProjectResource) predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := newProjectStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHost applies the HasEdge predicate on the "host" edge.
func HasHost() predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, HostTable, HostColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostWith applies the HasEdge predicate on the "host" edge with a given conditions (other predicates).
func HasHostWith(preds ...predicate.HostResource) predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		step := newHostStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HostnicResource) predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HostnicResource) predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HostnicResource) predicate.HostnicResource {
	return predicate.HostnicResource(func(s *sql.Selector) {
		p(s.Not())
	})
}
