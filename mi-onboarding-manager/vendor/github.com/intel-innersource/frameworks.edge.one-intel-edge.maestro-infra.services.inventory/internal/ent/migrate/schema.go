// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EndpointResourcesColumns holds the columns for the "endpoint_resources" table.
	EndpointResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "endpoint_resource_host", Type: field.TypeInt, Nullable: true},
	}
	// EndpointResourcesTable holds the schema information for the "endpoint_resources" table.
	EndpointResourcesTable = &schema.Table{
		Name:       "endpoint_resources",
		Columns:    EndpointResourcesColumns,
		PrimaryKey: []*schema.Column{EndpointResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "endpoint_resources_host_resources_host",
				Columns:    []*schema.Column{EndpointResourcesColumns[4]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// HostResourcesColumns holds the columns for the "host_resources" table.
	HostResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"HOST_STATE_UNSPECIFIED", "HOST_STATE_ERROR", "HOST_STATE_DELETING", "HOST_STATE_DELETED", "HOST_STATE_ONBOARDED", "HOST_STATE_PROVISIONED", "HOST_STATE_UNTRUSTED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"HOST_STATE_UNSPECIFIED", "HOST_STATE_ERROR", "HOST_STATE_DELETING", "HOST_STATE_DELETED", "HOST_STATE_ONBOARDED", "HOST_STATE_PROVISIONED", "HOST_STATE_UNTRUSTED"}},
		{Name: "provider_status", Type: field.TypeString, Nullable: true},
		{Name: "host_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"HOST_STATUS_UNSPECIFIED", "HOST_STATUS_BOOTING", "HOST_STATUS_BOOT_FAILED", "HOST_STATUS_PROVISIONING", "HOST_STATUS_PROVISIONED", "HOST_STATUS_PROVISION_FAILED", "HOST_STATUS_RUNNING", "HOST_STATUS_ERROR", "HOST_STATUS_REGISTERING", "HOST_STATUS_UPDATING", "HOST_STATUS_UPDATE_FAILED", "HOST_STATUS_CONNECTION_LOST", "HOST_STATUS_INVALIDATING", "HOST_STATUS_INVALIDATED"}},
		{Name: "provider_status_detail", Type: field.TypeString, Nullable: true},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "hardware_kind", Type: field.TypeString, Nullable: true},
		{Name: "serial_number", Type: field.TypeString, Nullable: true},
		{Name: "uuid", Type: field.TypeString, Nullable: true},
		{Name: "memory_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "cpu_model", Type: field.TypeString, Nullable: true},
		{Name: "cpu_sockets", Type: field.TypeUint32, Nullable: true},
		{Name: "cpu_cores", Type: field.TypeUint32, Nullable: true},
		{Name: "cpu_capabilities", Type: field.TypeString, Nullable: true},
		{Name: "cpu_architecture", Type: field.TypeString, Nullable: true},
		{Name: "cpu_threads", Type: field.TypeUint32, Nullable: true},
		{Name: "mgmt_ip", Type: field.TypeString, Nullable: true},
		{Name: "bmc_kind", Type: field.TypeEnum, Nullable: true, Enums: []string{"BAREMETAL_CONTROLLER_KIND_UNSPECIFIED", "BAREMETAL_CONTROLLER_KIND_NONE", "BAREMETAL_CONTROLLER_KIND_IPMI", "BAREMETAL_CONTROLLER_KIND_VPRO", "BAREMETAL_CONTROLLER_KIND_PDU", "BAREMETAL_CONTROLLER_KIND_FDO"}},
		{Name: "bmc_ip", Type: field.TypeString, Nullable: true},
		{Name: "bmc_username", Type: field.TypeString, Nullable: true},
		{Name: "bmc_password", Type: field.TypeString, Nullable: true},
		{Name: "pxe_mac", Type: field.TypeString, Nullable: true},
		{Name: "hostname", Type: field.TypeString, Nullable: true},
		{Name: "product_name", Type: field.TypeString, Nullable: true},
		{Name: "bios_version", Type: field.TypeString, Nullable: true},
		{Name: "bios_release_date", Type: field.TypeString, Nullable: true},
		{Name: "bios_vendor", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "desired_power_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"POWER_STATE_UNSPECIFIED", "POWER_STATE_ERROR", "POWER_STATE_ON", "POWER_STATE_OFF"}},
		{Name: "current_power_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"POWER_STATE_UNSPECIFIED", "POWER_STATE_ERROR", "POWER_STATE_ON", "POWER_STATE_OFF"}},
		{Name: "host_resource_site", Type: field.TypeInt, Nullable: true},
		{Name: "host_resource_provider", Type: field.TypeInt, Nullable: true},
		{Name: "host_resource_project", Type: field.TypeInt, Nullable: true},
		{Name: "host_resource_user", Type: field.TypeInt, Nullable: true},
		{Name: "instance_resource_host", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// HostResourcesTable holds the schema information for the "host_resources" table.
	HostResourcesTable = &schema.Table{
		Name:       "host_resources",
		Columns:    HostResourcesColumns,
		PrimaryKey: []*schema.Column{HostResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "host_resources_site_resources_site",
				Columns:    []*schema.Column{HostResourcesColumns[34]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "host_resources_provider_resources_provider",
				Columns:    []*schema.Column{HostResourcesColumns[35]},
				RefColumns: []*schema.Column{ProviderResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "host_resources_project_resources_project",
				Columns:    []*schema.Column{HostResourcesColumns[36]},
				RefColumns: []*schema.Column{ProjectResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "host_resources_user_resources_user",
				Columns:    []*schema.Column{HostResourcesColumns[37]},
				RefColumns: []*schema.Column{UserResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "host_resources_instance_resources_host",
				Columns:    []*schema.Column{HostResourcesColumns[38]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// HostgpuResourcesColumns holds the columns for the "hostgpu_resources" table.
	HostgpuResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "pci_id", Type: field.TypeString, Nullable: true},
		{Name: "product", Type: field.TypeString, Nullable: true},
		{Name: "vendor", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "hostgpu_resource_host", Type: field.TypeInt},
	}
	// HostgpuResourcesTable holds the schema information for the "hostgpu_resources" table.
	HostgpuResourcesTable = &schema.Table{
		Name:       "hostgpu_resources",
		Columns:    HostgpuResourcesColumns,
		PrimaryKey: []*schema.Column{HostgpuResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hostgpu_resources_host_resources_host",
				Columns:    []*schema.Column{HostgpuResourcesColumns[7]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HostnicResourcesColumns holds the columns for the "hostnic_resources" table.
	HostnicResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "provider_status", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "pci_identifier", Type: field.TypeString, Nullable: true},
		{Name: "mac_addr", Type: field.TypeString, Nullable: true},
		{Name: "sriov_enabled", Type: field.TypeBool, Nullable: true},
		{Name: "sriov_vfs_num", Type: field.TypeUint32, Nullable: true},
		{Name: "sriov_vfs_total", Type: field.TypeUint32, Nullable: true},
		{Name: "peer_name", Type: field.TypeString, Nullable: true},
		{Name: "peer_description", Type: field.TypeString, Nullable: true},
		{Name: "peer_mac", Type: field.TypeString, Nullable: true},
		{Name: "peer_mgmt_ip", Type: field.TypeString, Nullable: true},
		{Name: "peer_port", Type: field.TypeString, Nullable: true},
		{Name: "supported_link_mode", Type: field.TypeString, Nullable: true},
		{Name: "advertising_link_mode", Type: field.TypeString, Nullable: true},
		{Name: "current_speed_bps", Type: field.TypeUint64, Nullable: true},
		{Name: "current_duplex", Type: field.TypeString, Nullable: true},
		{Name: "features", Type: field.TypeString, Nullable: true},
		{Name: "mtu", Type: field.TypeUint32, Nullable: true},
		{Name: "link_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"NETWORK_INTERFACE_LINK_STATE_UNSPECIFIED", "NETWORK_INTERFACE_LINK_STATE_UP", "NETWORK_INTERFACE_LINK_STATE_DOWN"}},
		{Name: "bmc_interface", Type: field.TypeBool, Nullable: true},
		{Name: "hostnic_resource_site", Type: field.TypeInt, Nullable: true},
		{Name: "hostnic_resource_provider", Type: field.TypeInt, Nullable: true},
		{Name: "hostnic_resource_project", Type: field.TypeInt, Nullable: true},
		{Name: "hostnic_resource_host", Type: field.TypeInt},
	}
	// HostnicResourcesTable holds the schema information for the "hostnic_resources" table.
	HostnicResourcesTable = &schema.Table{
		Name:       "hostnic_resources",
		Columns:    HostnicResourcesColumns,
		PrimaryKey: []*schema.Column{HostnicResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hostnic_resources_site_resources_site",
				Columns:    []*schema.Column{HostnicResourcesColumns[23]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "hostnic_resources_provider_resources_provider",
				Columns:    []*schema.Column{HostnicResourcesColumns[24]},
				RefColumns: []*schema.Column{ProviderResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "hostnic_resources_project_resources_project",
				Columns:    []*schema.Column{HostnicResourcesColumns[25]},
				RefColumns: []*schema.Column{ProjectResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "hostnic_resources_host_resources_host",
				Columns:    []*schema.Column{HostnicResourcesColumns[26]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HoststorageResourcesColumns holds the columns for the "hoststorage_resources" table.
	HoststorageResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "provider_status", Type: field.TypeString, Nullable: true},
		{Name: "wwid", Type: field.TypeString, Nullable: true},
		{Name: "serial", Type: field.TypeString, Nullable: true},
		{Name: "vendor", Type: field.TypeString, Nullable: true},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "capacity_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "hoststorage_resource_site", Type: field.TypeInt, Nullable: true},
		{Name: "hoststorage_resource_provider", Type: field.TypeInt, Nullable: true},
		{Name: "hoststorage_resource_project", Type: field.TypeInt, Nullable: true},
		{Name: "hoststorage_resource_host", Type: field.TypeInt},
	}
	// HoststorageResourcesTable holds the schema information for the "hoststorage_resources" table.
	HoststorageResourcesTable = &schema.Table{
		Name:       "hoststorage_resources",
		Columns:    HoststorageResourcesColumns,
		PrimaryKey: []*schema.Column{HoststorageResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hoststorage_resources_site_resources_site",
				Columns:    []*schema.Column{HoststorageResourcesColumns[10]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "hoststorage_resources_provider_resources_provider",
				Columns:    []*schema.Column{HoststorageResourcesColumns[11]},
				RefColumns: []*schema.Column{ProviderResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "hoststorage_resources_project_resources_project",
				Columns:    []*schema.Column{HoststorageResourcesColumns[12]},
				RefColumns: []*schema.Column{ProjectResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "hoststorage_resources_host_resources_host",
				Columns:    []*schema.Column{HoststorageResourcesColumns[13]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HostusbResourcesColumns holds the columns for the "hostusb_resources" table.
	HostusbResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "owner_id", Type: field.TypeString, Nullable: true},
		{Name: "idvendor", Type: field.TypeString, Nullable: true},
		{Name: "idproduct", Type: field.TypeString, Nullable: true},
		{Name: "bus", Type: field.TypeUint32, Nullable: true},
		{Name: "addr", Type: field.TypeUint32, Nullable: true},
		{Name: "class", Type: field.TypeString, Nullable: true},
		{Name: "serial", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "hostusb_resource_host", Type: field.TypeInt},
	}
	// HostusbResourcesTable holds the schema information for the "hostusb_resources" table.
	HostusbResourcesTable = &schema.Table{
		Name:       "hostusb_resources",
		Columns:    HostusbResourcesColumns,
		PrimaryKey: []*schema.Column{HostusbResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hostusb_resources_host_resources_host",
				Columns:    []*schema.Column{HostusbResourcesColumns[11]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// IPAddressResourcesColumns holds the columns for the "ip_address_resources" table.
	IPAddressResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_STATE_UNSPECIFIED", "IP_ADDRESS_STATE_ERROR", "IP_ADDRESS_STATE_ASSIGNED", "IP_ADDRESS_STATE_CONFIGURED", "IP_ADDRESS_STATE_RELEASED", "IP_ADDRESS_STATE_DELETED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_STATE_UNSPECIFIED", "IP_ADDRESS_STATE_ERROR", "IP_ADDRESS_STATE_ASSIGNED", "IP_ADDRESS_STATE_CONFIGURED", "IP_ADDRESS_STATE_RELEASED", "IP_ADDRESS_STATE_DELETED"}},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_STATUS_UNSPECIFIED", "IP_ADDRESS_STATUS_ASSIGNMENT_ERROR", "IP_ADDRESS_STATUS_ASSIGNED", "IP_ADDRESS_STATUS_CONFIGURATION_ERROR", "IP_ADDRESS_STATUS_CONFIGURED", "IP_ADDRESS_STATUS_RELEASED", "IP_ADDRESS_STATUS_ERROR"}},
		{Name: "status_detail", Type: field.TypeString, Nullable: true},
		{Name: "config_method", Type: field.TypeEnum, Nullable: true, Enums: []string{"IP_ADDRESS_CONFIG_METHOD_UNSPECIFIED", "IP_ADDRESS_CONFIG_METHOD_STATIC", "IP_ADDRESS_CONFIG_METHOD_DYNAMIC"}},
		{Name: "ip_address_resource_nic", Type: field.TypeInt},
	}
	// IPAddressResourcesTable holds the schema information for the "ip_address_resources" table.
	IPAddressResourcesTable = &schema.Table{
		Name:       "ip_address_resources",
		Columns:    IPAddressResourcesColumns,
		PrimaryKey: []*schema.Column{IPAddressResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ip_address_resources_hostnic_resources_nic",
				Columns:    []*schema.Column{IPAddressResourcesColumns[8]},
				RefColumns: []*schema.Column{HostnicResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InstanceResourcesColumns holds the columns for the "instance_resources" table.
	InstanceResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTANCE_KIND_UNSPECIFIED", "INSTANCE_KIND_VM", "INSTANCE_KIND_METAL"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTANCE_STATE_UNSPECIFIED", "INSTANCE_STATE_ERROR", "INSTANCE_STATE_INSTALLED", "INSTANCE_STATE_RUNNING", "INSTANCE_STATE_STOPPED", "INSTANCE_STATE_DELETED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTANCE_STATE_UNSPECIFIED", "INSTANCE_STATE_ERROR", "INSTANCE_STATE_INSTALLED", "INSTANCE_STATE_RUNNING", "INSTANCE_STATE_STOPPED", "INSTANCE_STATE_DELETED"}},
		{Name: "vm_memory_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "vm_cpu_cores", Type: field.TypeUint32, Nullable: true},
		{Name: "vm_storage_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTANCE_STATUS_UNSPECIFIED", "INSTANCE_STATUS_BOOTING", "INSTANCE_STATUS_BOOT_FAILED", "INSTANCE_STATUS_PROVISIONING", "INSTANCE_STATUS_PROVISIONED", "INSTANCE_STATUS_PROVISION_FAILED", "INSTANCE_STATUS_RUNNING", "INSTANCE_STATUS_ERROR", "INSTANCE_STATUS_UPDATING", "INSTANCE_STATUS_UPDATE_FAILED"}},
		{Name: "status_detail", Type: field.TypeString, Nullable: true},
		{Name: "instance_resource_user", Type: field.TypeInt, Nullable: true},
		{Name: "instance_resource_os", Type: field.TypeInt},
		{Name: "instance_resource_provider", Type: field.TypeInt, Nullable: true},
	}
	// InstanceResourcesTable holds the schema information for the "instance_resources" table.
	InstanceResourcesTable = &schema.Table{
		Name:       "instance_resources",
		Columns:    InstanceResourcesColumns,
		PrimaryKey: []*schema.Column{InstanceResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "instance_resources_user_resources_user",
				Columns:    []*schema.Column{InstanceResourcesColumns[11]},
				RefColumns: []*schema.Column{UserResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "instance_resources_operating_system_resources_os",
				Columns:    []*schema.Column{InstanceResourcesColumns[12]},
				RefColumns: []*schema.Column{OperatingSystemResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "instance_resources_provider_resources_provider",
				Columns:    []*schema.Column{InstanceResourcesColumns[13]},
				RefColumns: []*schema.Column{ProviderResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NetlinkResourcesColumns holds the columns for the "netlink_resources" table.
	NetlinkResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Enums: []string{"NETLINK_STATE_UNSPECIFIED", "NETLINK_STATE_DELETED", "NETLINK_STATE_ONLINE", "NETLINK_STATE_OFFLINE", "NETLINK_STATE_ERROR"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"NETLINK_STATE_UNSPECIFIED", "NETLINK_STATE_DELETED", "NETLINK_STATE_ONLINE", "NETLINK_STATE_OFFLINE", "NETLINK_STATE_ERROR"}},
		{Name: "provider_status", Type: field.TypeString, Nullable: true},
		{Name: "netlink_resource_src", Type: field.TypeInt, Nullable: true},
		{Name: "netlink_resource_dst", Type: field.TypeInt, Nullable: true},
	}
	// NetlinkResourcesTable holds the schema information for the "netlink_resources" table.
	NetlinkResourcesTable = &schema.Table{
		Name:       "netlink_resources",
		Columns:    NetlinkResourcesColumns,
		PrimaryKey: []*schema.Column{NetlinkResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "netlink_resources_endpoint_resources_src",
				Columns:    []*schema.Column{NetlinkResourcesColumns[7]},
				RefColumns: []*schema.Column{EndpointResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "netlink_resources_endpoint_resources_dst",
				Columns:    []*schema.Column{NetlinkResourcesColumns[8]},
				RefColumns: []*schema.Column{EndpointResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NetworkSegmentsColumns holds the columns for the "network_segments" table.
	NetworkSegmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "vlan_id", Type: field.TypeInt32, Nullable: true},
		{Name: "network_segment_site", Type: field.TypeInt},
	}
	// NetworkSegmentsTable holds the schema information for the "network_segments" table.
	NetworkSegmentsTable = &schema.Table{
		Name:       "network_segments",
		Columns:    NetworkSegmentsColumns,
		PrimaryKey: []*schema.Column{NetworkSegmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "network_segments_site_resources_site",
				Columns:    []*schema.Column{NetworkSegmentsColumns[4]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OperatingSystemResourcesColumns holds the columns for the "operating_system_resources" table.
	OperatingSystemResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "architecture", Type: field.TypeString, Nullable: true},
		{Name: "kernel_command", Type: field.TypeString, Nullable: true},
		{Name: "update_sources", Type: field.TypeString},
		{Name: "repo_url", Type: field.TypeString},
		{Name: "sha256", Type: field.TypeString, Unique: true},
		{Name: "profile_name", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// OperatingSystemResourcesTable holds the schema information for the "operating_system_resources" table.
	OperatingSystemResourcesTable = &schema.Table{
		Name:       "operating_system_resources",
		Columns:    OperatingSystemResourcesColumns,
		PrimaryKey: []*schema.Column{OperatingSystemResourcesColumns[0]},
	}
	// OuResourcesColumns holds the columns for the "ou_resources" table.
	OuResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ou_kind", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "ou_resource_parent_ou", Type: field.TypeInt, Nullable: true},
	}
	// OuResourcesTable holds the schema information for the "ou_resources" table.
	OuResourcesTable = &schema.Table{
		Name:       "ou_resources",
		Columns:    OuResourcesColumns,
		PrimaryKey: []*schema.Column{OuResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ou_resources_ou_resources_parent_ou",
				Columns:    []*schema.Column{OuResourcesColumns[5]},
				RefColumns: []*schema.Column{OuResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProjectResourcesColumns holds the columns for the "project_resources" table.
	ProjectResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
	}
	// ProjectResourcesTable holds the schema information for the "project_resources" table.
	ProjectResourcesTable = &schema.Table{
		Name:       "project_resources",
		Columns:    ProjectResourcesColumns,
		PrimaryKey: []*schema.Column{ProjectResourcesColumns[0]},
	}
	// ProviderResourcesColumns holds the columns for the "provider_resources" table.
	ProviderResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "provider_kind", Type: field.TypeEnum, Enums: []string{"PROVIDER_KIND_UNSPECIFIED", "PROVIDER_KIND_BAREMETAL"}},
		{Name: "provider_vendor", Type: field.TypeEnum, Nullable: true, Enums: []string{"PROVIDER_VENDOR_UNSPECIFIED", "PROVIDER_VENDOR_LENOVO_LXCA", "PROVIDER_VENDOR_LENOVO_LOCA"}},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "api_endpoint", Type: field.TypeString},
		{Name: "api_credentials", Type: field.TypeString, Nullable: true},
	}
	// ProviderResourcesTable holds the schema information for the "provider_resources" table.
	ProviderResourcesTable = &schema.Table{
		Name:       "provider_resources",
		Columns:    ProviderResourcesColumns,
		PrimaryKey: []*schema.Column{ProviderResourcesColumns[0]},
	}
	// RegionResourcesColumns holds the columns for the "region_resources" table.
	RegionResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "region_kind", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "region_resource_parent_region", Type: field.TypeInt, Nullable: true},
	}
	// RegionResourcesTable holds the schema information for the "region_resources" table.
	RegionResourcesTable = &schema.Table{
		Name:       "region_resources",
		Columns:    RegionResourcesColumns,
		PrimaryKey: []*schema.Column{RegionResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "region_resources_region_resources_parent_region",
				Columns:    []*schema.Column{RegionResourcesColumns[5]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RepeatedScheduleResourcesColumns holds the columns for the "repeated_schedule_resources" table.
	RepeatedScheduleResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "schedule_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"SCHEDULE_STATUS_UNSPECIFIED", "SCHEDULE_STATUS_MAINTENANCE", "SCHEDULE_STATUS_SHIPPING", "SCHEDULE_STATUS_OS_UPDATE", "SCHEDULE_STATUS_FIRMWARE_UPDATE", "SCHEDULE_STATUS_CLUSTER_UPDATE"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "duration_seconds", Type: field.TypeUint32, Nullable: true},
		{Name: "cron_minutes", Type: field.TypeString},
		{Name: "cron_hours", Type: field.TypeString},
		{Name: "cron_day_month", Type: field.TypeString},
		{Name: "cron_month", Type: field.TypeString},
		{Name: "cron_day_week", Type: field.TypeString},
		{Name: "repeated_schedule_resource_target_site", Type: field.TypeInt, Nullable: true},
		{Name: "repeated_schedule_resource_target_host", Type: field.TypeInt, Nullable: true},
		{Name: "repeated_schedule_resource_target_workload", Type: field.TypeInt, Nullable: true},
	}
	// RepeatedScheduleResourcesTable holds the schema information for the "repeated_schedule_resources" table.
	RepeatedScheduleResourcesTable = &schema.Table{
		Name:       "repeated_schedule_resources",
		Columns:    RepeatedScheduleResourcesColumns,
		PrimaryKey: []*schema.Column{RepeatedScheduleResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "repeated_schedule_resources_site_resources_target_site",
				Columns:    []*schema.Column{RepeatedScheduleResourcesColumns[10]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "repeated_schedule_resources_host_resources_target_host",
				Columns:    []*schema.Column{RepeatedScheduleResourcesColumns[11]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "repeated_schedule_resources_workload_resources_target_workload",
				Columns:    []*schema.Column{RepeatedScheduleResourcesColumns[12]},
				RefColumns: []*schema.Column{WorkloadResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SingleScheduleResourcesColumns holds the columns for the "single_schedule_resources" table.
	SingleScheduleResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "schedule_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"SCHEDULE_STATUS_UNSPECIFIED", "SCHEDULE_STATUS_MAINTENANCE", "SCHEDULE_STATUS_SHIPPING", "SCHEDULE_STATUS_OS_UPDATE", "SCHEDULE_STATUS_FIRMWARE_UPDATE", "SCHEDULE_STATUS_CLUSTER_UPDATE"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "start_seconds", Type: field.TypeUint64},
		{Name: "end_seconds", Type: field.TypeUint64, Nullable: true},
		{Name: "single_schedule_resource_target_site", Type: field.TypeInt, Nullable: true},
		{Name: "single_schedule_resource_target_host", Type: field.TypeInt, Nullable: true},
		{Name: "single_schedule_resource_target_workload", Type: field.TypeInt, Nullable: true},
	}
	// SingleScheduleResourcesTable holds the schema information for the "single_schedule_resources" table.
	SingleScheduleResourcesTable = &schema.Table{
		Name:       "single_schedule_resources",
		Columns:    SingleScheduleResourcesColumns,
		PrimaryKey: []*schema.Column{SingleScheduleResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "single_schedule_resources_site_resources_target_site",
				Columns:    []*schema.Column{SingleScheduleResourcesColumns[6]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "single_schedule_resources_host_resources_target_host",
				Columns:    []*schema.Column{SingleScheduleResourcesColumns[7]},
				RefColumns: []*schema.Column{HostResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "single_schedule_resources_workload_resources_target_workload",
				Columns:    []*schema.Column{SingleScheduleResourcesColumns[8]},
				RefColumns: []*schema.Column{WorkloadResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SiteResourcesColumns holds the columns for the "site_resources" table.
	SiteResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "site_lat", Type: field.TypeInt32, Nullable: true},
		{Name: "site_lng", Type: field.TypeInt32, Nullable: true},
		{Name: "dns_servers", Type: field.TypeString, Nullable: true},
		{Name: "docker_registries", Type: field.TypeString, Nullable: true},
		{Name: "metrics_endpoint", Type: field.TypeString, Nullable: true},
		{Name: "http_proxy", Type: field.TypeString, Nullable: true},
		{Name: "https_proxy", Type: field.TypeString, Nullable: true},
		{Name: "ftp_proxy", Type: field.TypeString, Nullable: true},
		{Name: "no_proxy", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
		{Name: "site_resource_region", Type: field.TypeInt, Nullable: true},
		{Name: "site_resource_ou", Type: field.TypeInt, Nullable: true},
	}
	// SiteResourcesTable holds the schema information for the "site_resources" table.
	SiteResourcesTable = &schema.Table{
		Name:       "site_resources",
		Columns:    SiteResourcesColumns,
		PrimaryKey: []*schema.Column{SiteResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "site_resources_region_resources_region",
				Columns:    []*schema.Column{SiteResourcesColumns[14]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "site_resources_ou_resources_ou",
				Columns:    []*schema.Column{SiteResourcesColumns[15]},
				RefColumns: []*schema.Column{OuResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TelemetryGroupResourcesColumns holds the columns for the "telemetry_group_resources" table.
	TelemetryGroupResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"TELEMETRY_RESOURCE_KIND_UNSPECIFIED", "TELEMETRY_RESOURCE_KIND_METRICS", "TELEMETRY_RESOURCE_KIND_LOGS"}},
		{Name: "collector_kind", Type: field.TypeEnum, Enums: []string{"COLLECTOR_KIND_UNSPECIFIED", "COLLECTOR_KIND_HOST", "COLLECTOR_KIND_CLUSTER"}},
		{Name: "groups", Type: field.TypeString},
	}
	// TelemetryGroupResourcesTable holds the schema information for the "telemetry_group_resources" table.
	TelemetryGroupResourcesTable = &schema.Table{
		Name:       "telemetry_group_resources",
		Columns:    TelemetryGroupResourcesColumns,
		PrimaryKey: []*schema.Column{TelemetryGroupResourcesColumns[0]},
	}
	// TelemetryProfilesColumns holds the columns for the "telemetry_profiles" table.
	TelemetryProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"TELEMETRY_RESOURCE_KIND_UNSPECIFIED", "TELEMETRY_RESOURCE_KIND_METRICS", "TELEMETRY_RESOURCE_KIND_LOGS"}},
		{Name: "metrics_interval", Type: field.TypeUint32, Nullable: true},
		{Name: "log_level", Type: field.TypeEnum, Nullable: true, Enums: []string{"SEVERITY_LEVEL_UNSPECIFIED", "SEVERITY_LEVEL_CRITICAL", "SEVERITY_LEVEL_ERROR", "SEVERITY_LEVEL_WARN", "SEVERITY_LEVEL_INFO", "SEVERITY_LEVEL_DEBUG"}},
		{Name: "telemetry_profile_region", Type: field.TypeInt, Nullable: true},
		{Name: "telemetry_profile_site", Type: field.TypeInt, Nullable: true},
		{Name: "telemetry_profile_instance", Type: field.TypeInt, Nullable: true},
		{Name: "telemetry_profile_group", Type: field.TypeInt},
	}
	// TelemetryProfilesTable holds the schema information for the "telemetry_profiles" table.
	TelemetryProfilesTable = &schema.Table{
		Name:       "telemetry_profiles",
		Columns:    TelemetryProfilesColumns,
		PrimaryKey: []*schema.Column{TelemetryProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "telemetry_profiles_region_resources_region",
				Columns:    []*schema.Column{TelemetryProfilesColumns[5]},
				RefColumns: []*schema.Column{RegionResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "telemetry_profiles_site_resources_site",
				Columns:    []*schema.Column{TelemetryProfilesColumns[6]},
				RefColumns: []*schema.Column{SiteResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "telemetry_profiles_instance_resources_instance",
				Columns:    []*schema.Column{TelemetryProfilesColumns[7]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "telemetry_profiles_telemetry_group_resources_group",
				Columns:    []*schema.Column{TelemetryProfilesColumns[8]},
				RefColumns: []*schema.Column{TelemetryGroupResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UserResourcesColumns holds the columns for the "user_resources" table.
	UserResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "ssh_pubkey", Type: field.TypeString, Nullable: true},
	}
	// UserResourcesTable holds the schema information for the "user_resources" table.
	UserResourcesTable = &schema.Table{
		Name:       "user_resources",
		Columns:    UserResourcesColumns,
		PrimaryKey: []*schema.Column{UserResourcesColumns[0]},
	}
	// WorkloadMembersColumns holds the columns for the "workload_members" table.
	WorkloadMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"WORKLOAD_MEMBER_KIND_UNSPECIFIED", "WORKLOAD_MEMBER_KIND_CLUSTER_NODE"}},
		{Name: "workload_member_workload", Type: field.TypeInt},
		{Name: "workload_member_instance", Type: field.TypeInt},
	}
	// WorkloadMembersTable holds the schema information for the "workload_members" table.
	WorkloadMembersTable = &schema.Table{
		Name:       "workload_members",
		Columns:    WorkloadMembersColumns,
		PrimaryKey: []*schema.Column{WorkloadMembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workload_members_workload_resources_workload",
				Columns:    []*schema.Column{WorkloadMembersColumns[3]},
				RefColumns: []*schema.Column{WorkloadResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workload_members_instance_resources_instance",
				Columns:    []*schema.Column{WorkloadMembersColumns[4]},
				RefColumns: []*schema.Column{InstanceResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkloadResourcesColumns holds the columns for the "workload_resources" table.
	WorkloadResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "resource_id", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"WORKLOAD_KIND_UNSPECIFIED", "WORKLOAD_KIND_CLUSTER", "WORKLOAD_KIND_DHCP"}},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "external_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "desired_state", Type: field.TypeEnum, Enums: []string{"WORKLOAD_STATE_UNSPECIFIED", "WORKLOAD_STATE_ERROR", "WORKLOAD_STATE_DELETING", "WORKLOAD_STATE_DELETED", "WORKLOAD_STATE_PROVISIONED"}},
		{Name: "current_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"WORKLOAD_STATE_UNSPECIFIED", "WORKLOAD_STATE_ERROR", "WORKLOAD_STATE_DELETING", "WORKLOAD_STATE_DELETED", "WORKLOAD_STATE_PROVISIONED"}},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeString, Nullable: true},
	}
	// WorkloadResourcesTable holds the schema information for the "workload_resources" table.
	WorkloadResourcesTable = &schema.Table{
		Name:       "workload_resources",
		Columns:    WorkloadResourcesColumns,
		PrimaryKey: []*schema.Column{WorkloadResourcesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EndpointResourcesTable,
		HostResourcesTable,
		HostgpuResourcesTable,
		HostnicResourcesTable,
		HoststorageResourcesTable,
		HostusbResourcesTable,
		IPAddressResourcesTable,
		InstanceResourcesTable,
		NetlinkResourcesTable,
		NetworkSegmentsTable,
		OperatingSystemResourcesTable,
		OuResourcesTable,
		ProjectResourcesTable,
		ProviderResourcesTable,
		RegionResourcesTable,
		RepeatedScheduleResourcesTable,
		SingleScheduleResourcesTable,
		SiteResourcesTable,
		TelemetryGroupResourcesTable,
		TelemetryProfilesTable,
		UserResourcesTable,
		WorkloadMembersTable,
		WorkloadResourcesTable,
	}
)

func init() {
	EndpointResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	HostResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	HostResourcesTable.ForeignKeys[1].RefTable = ProviderResourcesTable
	HostResourcesTable.ForeignKeys[2].RefTable = ProjectResourcesTable
	HostResourcesTable.ForeignKeys[3].RefTable = UserResourcesTable
	HostResourcesTable.ForeignKeys[4].RefTable = InstanceResourcesTable
	HostgpuResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	HostnicResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	HostnicResourcesTable.ForeignKeys[1].RefTable = ProviderResourcesTable
	HostnicResourcesTable.ForeignKeys[2].RefTable = ProjectResourcesTable
	HostnicResourcesTable.ForeignKeys[3].RefTable = HostResourcesTable
	HoststorageResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	HoststorageResourcesTable.ForeignKeys[1].RefTable = ProviderResourcesTable
	HoststorageResourcesTable.ForeignKeys[2].RefTable = ProjectResourcesTable
	HoststorageResourcesTable.ForeignKeys[3].RefTable = HostResourcesTable
	HostusbResourcesTable.ForeignKeys[0].RefTable = HostResourcesTable
	IPAddressResourcesTable.ForeignKeys[0].RefTable = HostnicResourcesTable
	InstanceResourcesTable.ForeignKeys[0].RefTable = UserResourcesTable
	InstanceResourcesTable.ForeignKeys[1].RefTable = OperatingSystemResourcesTable
	InstanceResourcesTable.ForeignKeys[2].RefTable = ProviderResourcesTable
	NetlinkResourcesTable.ForeignKeys[0].RefTable = EndpointResourcesTable
	NetlinkResourcesTable.ForeignKeys[1].RefTable = EndpointResourcesTable
	NetworkSegmentsTable.ForeignKeys[0].RefTable = SiteResourcesTable
	OuResourcesTable.ForeignKeys[0].RefTable = OuResourcesTable
	RegionResourcesTable.ForeignKeys[0].RefTable = RegionResourcesTable
	RepeatedScheduleResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	RepeatedScheduleResourcesTable.ForeignKeys[1].RefTable = HostResourcesTable
	RepeatedScheduleResourcesTable.ForeignKeys[2].RefTable = WorkloadResourcesTable
	SingleScheduleResourcesTable.ForeignKeys[0].RefTable = SiteResourcesTable
	SingleScheduleResourcesTable.ForeignKeys[1].RefTable = HostResourcesTable
	SingleScheduleResourcesTable.ForeignKeys[2].RefTable = WorkloadResourcesTable
	SiteResourcesTable.ForeignKeys[0].RefTable = RegionResourcesTable
	SiteResourcesTable.ForeignKeys[1].RefTable = OuResourcesTable
	TelemetryProfilesTable.ForeignKeys[0].RefTable = RegionResourcesTable
	TelemetryProfilesTable.ForeignKeys[1].RefTable = SiteResourcesTable
	TelemetryProfilesTable.ForeignKeys[2].RefTable = InstanceResourcesTable
	TelemetryProfilesTable.ForeignKeys[3].RefTable = TelemetryGroupResourcesTable
	WorkloadMembersTable.ForeignKeys[0].RefTable = WorkloadResourcesTable
	WorkloadMembersTable.ForeignKeys[1].RefTable = InstanceResourcesTable
}
