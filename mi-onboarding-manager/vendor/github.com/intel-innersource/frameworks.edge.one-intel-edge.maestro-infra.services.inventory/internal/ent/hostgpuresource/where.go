// Code generated by ent, DO NOT EDIT.

package hostgpuresource

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/intel-innersource/frameworks.edge.one-intel-edge.maestro-infra.services.inventory/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldResourceID, v))
}

// PciID applies equality check predicate on the "pci_id" field. It's identical to PciIDEQ.
func PciID(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldPciID, v))
}

// Product applies equality check predicate on the "product" field. It's identical to ProductEQ.
func Product(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldProduct, v))
}

// Vendor applies equality check predicate on the "vendor" field. It's identical to VendorEQ.
func Vendor(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldVendor, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldDescription, v))
}

// DeviceName applies equality check predicate on the "device_name" field. It's identical to DeviceNameEQ.
func DeviceName(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldDeviceName, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContainsFold(FieldResourceID, v))
}

// PciIDEQ applies the EQ predicate on the "pci_id" field.
func PciIDEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldPciID, v))
}

// PciIDNEQ applies the NEQ predicate on the "pci_id" field.
func PciIDNEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNEQ(FieldPciID, v))
}

// PciIDIn applies the In predicate on the "pci_id" field.
func PciIDIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIn(FieldPciID, vs...))
}

// PciIDNotIn applies the NotIn predicate on the "pci_id" field.
func PciIDNotIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotIn(FieldPciID, vs...))
}

// PciIDGT applies the GT predicate on the "pci_id" field.
func PciIDGT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGT(FieldPciID, v))
}

// PciIDGTE applies the GTE predicate on the "pci_id" field.
func PciIDGTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGTE(FieldPciID, v))
}

// PciIDLT applies the LT predicate on the "pci_id" field.
func PciIDLT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLT(FieldPciID, v))
}

// PciIDLTE applies the LTE predicate on the "pci_id" field.
func PciIDLTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLTE(FieldPciID, v))
}

// PciIDContains applies the Contains predicate on the "pci_id" field.
func PciIDContains(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContains(FieldPciID, v))
}

// PciIDHasPrefix applies the HasPrefix predicate on the "pci_id" field.
func PciIDHasPrefix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasPrefix(FieldPciID, v))
}

// PciIDHasSuffix applies the HasSuffix predicate on the "pci_id" field.
func PciIDHasSuffix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasSuffix(FieldPciID, v))
}

// PciIDIsNil applies the IsNil predicate on the "pci_id" field.
func PciIDIsNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIsNull(FieldPciID))
}

// PciIDNotNil applies the NotNil predicate on the "pci_id" field.
func PciIDNotNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotNull(FieldPciID))
}

// PciIDEqualFold applies the EqualFold predicate on the "pci_id" field.
func PciIDEqualFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEqualFold(FieldPciID, v))
}

// PciIDContainsFold applies the ContainsFold predicate on the "pci_id" field.
func PciIDContainsFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContainsFold(FieldPciID, v))
}

// ProductEQ applies the EQ predicate on the "product" field.
func ProductEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldProduct, v))
}

// ProductNEQ applies the NEQ predicate on the "product" field.
func ProductNEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNEQ(FieldProduct, v))
}

// ProductIn applies the In predicate on the "product" field.
func ProductIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIn(FieldProduct, vs...))
}

// ProductNotIn applies the NotIn predicate on the "product" field.
func ProductNotIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotIn(FieldProduct, vs...))
}

// ProductGT applies the GT predicate on the "product" field.
func ProductGT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGT(FieldProduct, v))
}

// ProductGTE applies the GTE predicate on the "product" field.
func ProductGTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGTE(FieldProduct, v))
}

// ProductLT applies the LT predicate on the "product" field.
func ProductLT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLT(FieldProduct, v))
}

// ProductLTE applies the LTE predicate on the "product" field.
func ProductLTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLTE(FieldProduct, v))
}

// ProductContains applies the Contains predicate on the "product" field.
func ProductContains(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContains(FieldProduct, v))
}

// ProductHasPrefix applies the HasPrefix predicate on the "product" field.
func ProductHasPrefix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasPrefix(FieldProduct, v))
}

// ProductHasSuffix applies the HasSuffix predicate on the "product" field.
func ProductHasSuffix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasSuffix(FieldProduct, v))
}

// ProductIsNil applies the IsNil predicate on the "product" field.
func ProductIsNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIsNull(FieldProduct))
}

// ProductNotNil applies the NotNil predicate on the "product" field.
func ProductNotNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotNull(FieldProduct))
}

// ProductEqualFold applies the EqualFold predicate on the "product" field.
func ProductEqualFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEqualFold(FieldProduct, v))
}

// ProductContainsFold applies the ContainsFold predicate on the "product" field.
func ProductContainsFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContainsFold(FieldProduct, v))
}

// VendorEQ applies the EQ predicate on the "vendor" field.
func VendorEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldVendor, v))
}

// VendorNEQ applies the NEQ predicate on the "vendor" field.
func VendorNEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNEQ(FieldVendor, v))
}

// VendorIn applies the In predicate on the "vendor" field.
func VendorIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIn(FieldVendor, vs...))
}

// VendorNotIn applies the NotIn predicate on the "vendor" field.
func VendorNotIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotIn(FieldVendor, vs...))
}

// VendorGT applies the GT predicate on the "vendor" field.
func VendorGT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGT(FieldVendor, v))
}

// VendorGTE applies the GTE predicate on the "vendor" field.
func VendorGTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGTE(FieldVendor, v))
}

// VendorLT applies the LT predicate on the "vendor" field.
func VendorLT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLT(FieldVendor, v))
}

// VendorLTE applies the LTE predicate on the "vendor" field.
func VendorLTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLTE(FieldVendor, v))
}

// VendorContains applies the Contains predicate on the "vendor" field.
func VendorContains(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContains(FieldVendor, v))
}

// VendorHasPrefix applies the HasPrefix predicate on the "vendor" field.
func VendorHasPrefix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasPrefix(FieldVendor, v))
}

// VendorHasSuffix applies the HasSuffix predicate on the "vendor" field.
func VendorHasSuffix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasSuffix(FieldVendor, v))
}

// VendorIsNil applies the IsNil predicate on the "vendor" field.
func VendorIsNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIsNull(FieldVendor))
}

// VendorNotNil applies the NotNil predicate on the "vendor" field.
func VendorNotNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotNull(FieldVendor))
}

// VendorEqualFold applies the EqualFold predicate on the "vendor" field.
func VendorEqualFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEqualFold(FieldVendor, v))
}

// VendorContainsFold applies the ContainsFold predicate on the "vendor" field.
func VendorContainsFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContainsFold(FieldVendor, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContainsFold(FieldDescription, v))
}

// DeviceNameEQ applies the EQ predicate on the "device_name" field.
func DeviceNameEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEQ(FieldDeviceName, v))
}

// DeviceNameNEQ applies the NEQ predicate on the "device_name" field.
func DeviceNameNEQ(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNEQ(FieldDeviceName, v))
}

// DeviceNameIn applies the In predicate on the "device_name" field.
func DeviceNameIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIn(FieldDeviceName, vs...))
}

// DeviceNameNotIn applies the NotIn predicate on the "device_name" field.
func DeviceNameNotIn(vs ...string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotIn(FieldDeviceName, vs...))
}

// DeviceNameGT applies the GT predicate on the "device_name" field.
func DeviceNameGT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGT(FieldDeviceName, v))
}

// DeviceNameGTE applies the GTE predicate on the "device_name" field.
func DeviceNameGTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldGTE(FieldDeviceName, v))
}

// DeviceNameLT applies the LT predicate on the "device_name" field.
func DeviceNameLT(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLT(FieldDeviceName, v))
}

// DeviceNameLTE applies the LTE predicate on the "device_name" field.
func DeviceNameLTE(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldLTE(FieldDeviceName, v))
}

// DeviceNameContains applies the Contains predicate on the "device_name" field.
func DeviceNameContains(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContains(FieldDeviceName, v))
}

// DeviceNameHasPrefix applies the HasPrefix predicate on the "device_name" field.
func DeviceNameHasPrefix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasPrefix(FieldDeviceName, v))
}

// DeviceNameHasSuffix applies the HasSuffix predicate on the "device_name" field.
func DeviceNameHasSuffix(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldHasSuffix(FieldDeviceName, v))
}

// DeviceNameIsNil applies the IsNil predicate on the "device_name" field.
func DeviceNameIsNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldIsNull(FieldDeviceName))
}

// DeviceNameNotNil applies the NotNil predicate on the "device_name" field.
func DeviceNameNotNil() predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldNotNull(FieldDeviceName))
}

// DeviceNameEqualFold applies the EqualFold predicate on the "device_name" field.
func DeviceNameEqualFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldEqualFold(FieldDeviceName, v))
}

// DeviceNameContainsFold applies the ContainsFold predicate on the "device_name" field.
func DeviceNameContainsFold(v string) predicate.HostgpuResource {
	return predicate.HostgpuResource(sql.FieldContainsFold(FieldDeviceName, v))
}

// HasHost applies the HasEdge predicate on the "host" edge.
func HasHost() predicate.HostgpuResource {
	return predicate.HostgpuResource(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, HostTable, HostColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHostWith applies the HasEdge predicate on the "host" edge with a given conditions (other predicates).
func HasHostWith(preds ...predicate.HostResource) predicate.HostgpuResource {
	return predicate.HostgpuResource(func(s *sql.Selector) {
		step := newHostStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HostgpuResource) predicate.HostgpuResource {
	return predicate.HostgpuResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HostgpuResource) predicate.HostgpuResource {
	return predicate.HostgpuResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HostgpuResource) predicate.HostgpuResource {
	return predicate.HostgpuResource(func(s *sql.Selector) {
		p(s.Not())
	})
}
