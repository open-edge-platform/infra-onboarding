// Code generated by ent, DO NOT EDIT.

package operatingsystemresource

import (
	"entgo.io/ent/dialect/sql"
	"github.com/intel-innersource/frameworks.edge.one-intel-edge.maestro-infra.services.inventory/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldID, id))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldResourceID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldName, v))
}

// Architecture applies equality check predicate on the "architecture" field. It's identical to ArchitectureEQ.
func Architecture(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldArchitecture, v))
}

// KernelCommand applies equality check predicate on the "kernel_command" field. It's identical to KernelCommandEQ.
func KernelCommand(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldKernelCommand, v))
}

// UpdateSources applies equality check predicate on the "update_sources" field. It's identical to UpdateSourcesEQ.
func UpdateSources(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldUpdateSources, v))
}

// RepoURL applies equality check predicate on the "repo_url" field. It's identical to RepoURLEQ.
func RepoURL(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldRepoURL, v))
}

// Sha256 applies equality check predicate on the "sha256" field. It's identical to Sha256EQ.
func Sha256(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldSha256, v))
}

// ProfileName applies equality check predicate on the "profile_name" field. It's identical to ProfileNameEQ.
func ProfileName(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldProfileName, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldResourceID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldName, v))
}

// ArchitectureEQ applies the EQ predicate on the "architecture" field.
func ArchitectureEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldArchitecture, v))
}

// ArchitectureNEQ applies the NEQ predicate on the "architecture" field.
func ArchitectureNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldArchitecture, v))
}

// ArchitectureIn applies the In predicate on the "architecture" field.
func ArchitectureIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldArchitecture, vs...))
}

// ArchitectureNotIn applies the NotIn predicate on the "architecture" field.
func ArchitectureNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldArchitecture, vs...))
}

// ArchitectureGT applies the GT predicate on the "architecture" field.
func ArchitectureGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldArchitecture, v))
}

// ArchitectureGTE applies the GTE predicate on the "architecture" field.
func ArchitectureGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldArchitecture, v))
}

// ArchitectureLT applies the LT predicate on the "architecture" field.
func ArchitectureLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldArchitecture, v))
}

// ArchitectureLTE applies the LTE predicate on the "architecture" field.
func ArchitectureLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldArchitecture, v))
}

// ArchitectureContains applies the Contains predicate on the "architecture" field.
func ArchitectureContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldArchitecture, v))
}

// ArchitectureHasPrefix applies the HasPrefix predicate on the "architecture" field.
func ArchitectureHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldArchitecture, v))
}

// ArchitectureHasSuffix applies the HasSuffix predicate on the "architecture" field.
func ArchitectureHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldArchitecture, v))
}

// ArchitectureIsNil applies the IsNil predicate on the "architecture" field.
func ArchitectureIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldArchitecture))
}

// ArchitectureNotNil applies the NotNil predicate on the "architecture" field.
func ArchitectureNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldArchitecture))
}

// ArchitectureEqualFold applies the EqualFold predicate on the "architecture" field.
func ArchitectureEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldArchitecture, v))
}

// ArchitectureContainsFold applies the ContainsFold predicate on the "architecture" field.
func ArchitectureContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldArchitecture, v))
}

// KernelCommandEQ applies the EQ predicate on the "kernel_command" field.
func KernelCommandEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldKernelCommand, v))
}

// KernelCommandNEQ applies the NEQ predicate on the "kernel_command" field.
func KernelCommandNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldKernelCommand, v))
}

// KernelCommandIn applies the In predicate on the "kernel_command" field.
func KernelCommandIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldKernelCommand, vs...))
}

// KernelCommandNotIn applies the NotIn predicate on the "kernel_command" field.
func KernelCommandNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldKernelCommand, vs...))
}

// KernelCommandGT applies the GT predicate on the "kernel_command" field.
func KernelCommandGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldKernelCommand, v))
}

// KernelCommandGTE applies the GTE predicate on the "kernel_command" field.
func KernelCommandGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldKernelCommand, v))
}

// KernelCommandLT applies the LT predicate on the "kernel_command" field.
func KernelCommandLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldKernelCommand, v))
}

// KernelCommandLTE applies the LTE predicate on the "kernel_command" field.
func KernelCommandLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldKernelCommand, v))
}

// KernelCommandContains applies the Contains predicate on the "kernel_command" field.
func KernelCommandContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldKernelCommand, v))
}

// KernelCommandHasPrefix applies the HasPrefix predicate on the "kernel_command" field.
func KernelCommandHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldKernelCommand, v))
}

// KernelCommandHasSuffix applies the HasSuffix predicate on the "kernel_command" field.
func KernelCommandHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldKernelCommand, v))
}

// KernelCommandIsNil applies the IsNil predicate on the "kernel_command" field.
func KernelCommandIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldKernelCommand))
}

// KernelCommandNotNil applies the NotNil predicate on the "kernel_command" field.
func KernelCommandNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldKernelCommand))
}

// KernelCommandEqualFold applies the EqualFold predicate on the "kernel_command" field.
func KernelCommandEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldKernelCommand, v))
}

// KernelCommandContainsFold applies the ContainsFold predicate on the "kernel_command" field.
func KernelCommandContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldKernelCommand, v))
}

// UpdateSourcesEQ applies the EQ predicate on the "update_sources" field.
func UpdateSourcesEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldUpdateSources, v))
}

// UpdateSourcesNEQ applies the NEQ predicate on the "update_sources" field.
func UpdateSourcesNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldUpdateSources, v))
}

// UpdateSourcesIn applies the In predicate on the "update_sources" field.
func UpdateSourcesIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldUpdateSources, vs...))
}

// UpdateSourcesNotIn applies the NotIn predicate on the "update_sources" field.
func UpdateSourcesNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldUpdateSources, vs...))
}

// UpdateSourcesGT applies the GT predicate on the "update_sources" field.
func UpdateSourcesGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldUpdateSources, v))
}

// UpdateSourcesGTE applies the GTE predicate on the "update_sources" field.
func UpdateSourcesGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldUpdateSources, v))
}

// UpdateSourcesLT applies the LT predicate on the "update_sources" field.
func UpdateSourcesLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldUpdateSources, v))
}

// UpdateSourcesLTE applies the LTE predicate on the "update_sources" field.
func UpdateSourcesLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldUpdateSources, v))
}

// UpdateSourcesContains applies the Contains predicate on the "update_sources" field.
func UpdateSourcesContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldUpdateSources, v))
}

// UpdateSourcesHasPrefix applies the HasPrefix predicate on the "update_sources" field.
func UpdateSourcesHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldUpdateSources, v))
}

// UpdateSourcesHasSuffix applies the HasSuffix predicate on the "update_sources" field.
func UpdateSourcesHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldUpdateSources, v))
}

// UpdateSourcesEqualFold applies the EqualFold predicate on the "update_sources" field.
func UpdateSourcesEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldUpdateSources, v))
}

// UpdateSourcesContainsFold applies the ContainsFold predicate on the "update_sources" field.
func UpdateSourcesContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldUpdateSources, v))
}

// RepoURLEQ applies the EQ predicate on the "repo_url" field.
func RepoURLEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldRepoURL, v))
}

// RepoURLNEQ applies the NEQ predicate on the "repo_url" field.
func RepoURLNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldRepoURL, v))
}

// RepoURLIn applies the In predicate on the "repo_url" field.
func RepoURLIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldRepoURL, vs...))
}

// RepoURLNotIn applies the NotIn predicate on the "repo_url" field.
func RepoURLNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldRepoURL, vs...))
}

// RepoURLGT applies the GT predicate on the "repo_url" field.
func RepoURLGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldRepoURL, v))
}

// RepoURLGTE applies the GTE predicate on the "repo_url" field.
func RepoURLGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldRepoURL, v))
}

// RepoURLLT applies the LT predicate on the "repo_url" field.
func RepoURLLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldRepoURL, v))
}

// RepoURLLTE applies the LTE predicate on the "repo_url" field.
func RepoURLLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldRepoURL, v))
}

// RepoURLContains applies the Contains predicate on the "repo_url" field.
func RepoURLContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldRepoURL, v))
}

// RepoURLHasPrefix applies the HasPrefix predicate on the "repo_url" field.
func RepoURLHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldRepoURL, v))
}

// RepoURLHasSuffix applies the HasSuffix predicate on the "repo_url" field.
func RepoURLHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldRepoURL, v))
}

// RepoURLEqualFold applies the EqualFold predicate on the "repo_url" field.
func RepoURLEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldRepoURL, v))
}

// RepoURLContainsFold applies the ContainsFold predicate on the "repo_url" field.
func RepoURLContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldRepoURL, v))
}

// Sha256EQ applies the EQ predicate on the "sha256" field.
func Sha256EQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldSha256, v))
}

// Sha256NEQ applies the NEQ predicate on the "sha256" field.
func Sha256NEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldSha256, v))
}

// Sha256In applies the In predicate on the "sha256" field.
func Sha256In(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldSha256, vs...))
}

// Sha256NotIn applies the NotIn predicate on the "sha256" field.
func Sha256NotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldSha256, vs...))
}

// Sha256GT applies the GT predicate on the "sha256" field.
func Sha256GT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldSha256, v))
}

// Sha256GTE applies the GTE predicate on the "sha256" field.
func Sha256GTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldSha256, v))
}

// Sha256LT applies the LT predicate on the "sha256" field.
func Sha256LT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldSha256, v))
}

// Sha256LTE applies the LTE predicate on the "sha256" field.
func Sha256LTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldSha256, v))
}

// Sha256Contains applies the Contains predicate on the "sha256" field.
func Sha256Contains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldSha256, v))
}

// Sha256HasPrefix applies the HasPrefix predicate on the "sha256" field.
func Sha256HasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldSha256, v))
}

// Sha256HasSuffix applies the HasSuffix predicate on the "sha256" field.
func Sha256HasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldSha256, v))
}

// Sha256EqualFold applies the EqualFold predicate on the "sha256" field.
func Sha256EqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldSha256, v))
}

// Sha256ContainsFold applies the ContainsFold predicate on the "sha256" field.
func Sha256ContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldSha256, v))
}

// ProfileNameEQ applies the EQ predicate on the "profile_name" field.
func ProfileNameEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEQ(FieldProfileName, v))
}

// ProfileNameNEQ applies the NEQ predicate on the "profile_name" field.
func ProfileNameNEQ(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNEQ(FieldProfileName, v))
}

// ProfileNameIn applies the In predicate on the "profile_name" field.
func ProfileNameIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIn(FieldProfileName, vs...))
}

// ProfileNameNotIn applies the NotIn predicate on the "profile_name" field.
func ProfileNameNotIn(vs ...string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotIn(FieldProfileName, vs...))
}

// ProfileNameGT applies the GT predicate on the "profile_name" field.
func ProfileNameGT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGT(FieldProfileName, v))
}

// ProfileNameGTE applies the GTE predicate on the "profile_name" field.
func ProfileNameGTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldGTE(FieldProfileName, v))
}

// ProfileNameLT applies the LT predicate on the "profile_name" field.
func ProfileNameLT(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLT(FieldProfileName, v))
}

// ProfileNameLTE applies the LTE predicate on the "profile_name" field.
func ProfileNameLTE(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldLTE(FieldProfileName, v))
}

// ProfileNameContains applies the Contains predicate on the "profile_name" field.
func ProfileNameContains(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContains(FieldProfileName, v))
}

// ProfileNameHasPrefix applies the HasPrefix predicate on the "profile_name" field.
func ProfileNameHasPrefix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasPrefix(FieldProfileName, v))
}

// ProfileNameHasSuffix applies the HasSuffix predicate on the "profile_name" field.
func ProfileNameHasSuffix(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldHasSuffix(FieldProfileName, v))
}

// ProfileNameIsNil applies the IsNil predicate on the "profile_name" field.
func ProfileNameIsNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldIsNull(FieldProfileName))
}

// ProfileNameNotNil applies the NotNil predicate on the "profile_name" field.
func ProfileNameNotNil() predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldNotNull(FieldProfileName))
}

// ProfileNameEqualFold applies the EqualFold predicate on the "profile_name" field.
func ProfileNameEqualFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldEqualFold(FieldProfileName, v))
}

// ProfileNameContainsFold applies the ContainsFold predicate on the "profile_name" field.
func ProfileNameContainsFold(v string) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(sql.FieldContainsFold(FieldProfileName, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OperatingSystemResource) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OperatingSystemResource) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OperatingSystemResource) predicate.OperatingSystemResource {
	return predicate.OperatingSystemResource(func(s *sql.Selector) {
		p(s.Not())
	})
}
