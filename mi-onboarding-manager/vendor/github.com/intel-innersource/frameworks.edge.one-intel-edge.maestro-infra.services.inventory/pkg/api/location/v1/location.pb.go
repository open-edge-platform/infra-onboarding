// SPDX-FileCopyrightText: (C) 2022 Intel Corporation
// SPDX-License-Identifier: LicenseRef-Intel

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: location/v1/location.proto

package locationv1

import (
	_ "entgo.io/contrib/entproto/cmd/protoc-gen-ent/options/ent"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/intel-innersource/frameworks.edge.one-intel-edge.maestro-infra.services.inventory/pkg/api/ou/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId   string            `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Description  string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                       // human readable region description
	RegionKind   string            `protobuf:"bytes,3,opt,name=region_kind,json=regionKind,proto3" json:"region_kind,omitempty"`       // kinds like "Country", "State" and "City"
	ParentRegion *RegionResource   `protobuf:"bytes,4,opt,name=parent_region,json=parentRegion,proto3" json:"parent_region,omitempty"` // Optional parent region.
	Children     []*RegionResource `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`                             // References to children regions.
	Metadata     string            `protobuf:"bytes,50,opt,name=metadata,proto3" json:"metadata,omitempty"`                            // Record metadata with format as json string. Example: [{"key":"cluster-name","value":""},{"key":"app-id","value":""}]
}

func (x *RegionResource) Reset() {
	*x = RegionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_location_v1_location_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionResource) ProtoMessage() {}

func (x *RegionResource) ProtoReflect() protoreflect.Message {
	mi := &file_location_v1_location_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionResource.ProtoReflect.Descriptor instead.
func (*RegionResource) Descriptor() ([]byte, []int) {
	return file_location_v1_location_proto_rawDescGZIP(), []int{0}
}

func (x *RegionResource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *RegionResource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RegionResource) GetRegionKind() string {
	if x != nil {
		return x.RegionKind
	}
	return ""
}

func (x *RegionResource) GetParentRegion() *RegionResource {
	if x != nil {
		return x.ParentRegion
	}
	return nil
}

func (x *RegionResource) GetChildren() []*RegionResource {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *RegionResource) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type SiteResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId       string          `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Description      string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`           // human readable site description
	SiteKind         string          `protobuf:"bytes,3,opt,name=site_kind,json=siteKind,proto3" json:"site_kind,omitempty"` // kinds like "Colo", "On Prem" and "Far Edge"
	Region           *RegionResource `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`                     // Region this site is located in
	Ou               *v1.OuResource  `protobuf:"bytes,5,opt,name=ou,proto3" json:"ou,omitempty"`                             // OU this site is part of
	Address          string          `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	SiteLat          int32           `protobuf:"varint,8,opt,name=site_lat,json=siteLat,proto3" json:"site_lat,omitempty"`          // latitude
	SiteLng          int32           `protobuf:"varint,9,opt,name=site_lng,json=siteLng,proto3" json:"site_lng,omitempty"`          // longitude
	DnsServers       []string        `protobuf:"bytes,10,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"` // list of DNS servers
	DockerRegistries []string        `protobuf:"bytes,12,rep,name=docker_registries,json=dockerRegistries,proto3" json:"docker_registries,omitempty"`
	MetricsEndpoint  string          `protobuf:"bytes,13,opt,name=metrics_endpoint,json=metricsEndpoint,proto3" json:"metrics_endpoint,omitempty"`
	HttpProxy        string          `protobuf:"bytes,16,opt,name=http_proxy,json=httpProxy,proto3" json:"http_proxy,omitempty"`
	HttpsProxy       string          `protobuf:"bytes,17,opt,name=https_proxy,json=httpsProxy,proto3" json:"https_proxy,omitempty"`
	FtpProxy         string          `protobuf:"bytes,18,opt,name=ftp_proxy,json=ftpProxy,proto3" json:"ftp_proxy,omitempty"`
	NoProxy          string          `protobuf:"bytes,19,opt,name=no_proxy,json=noProxy,proto3" json:"no_proxy,omitempty"`
	Metadata         string          `protobuf:"bytes,50,opt,name=metadata,proto3" json:"metadata,omitempty"` // Record metadata with format as json string. Example: [{"key":"cluster-name","value":""},{"key":"app-id","value":""}]
}

func (x *SiteResource) Reset() {
	*x = SiteResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_location_v1_location_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteResource) ProtoMessage() {}

func (x *SiteResource) ProtoReflect() protoreflect.Message {
	mi := &file_location_v1_location_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteResource.ProtoReflect.Descriptor instead.
func (*SiteResource) Descriptor() ([]byte, []int) {
	return file_location_v1_location_proto_rawDescGZIP(), []int{1}
}

func (x *SiteResource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *SiteResource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SiteResource) GetSiteKind() string {
	if x != nil {
		return x.SiteKind
	}
	return ""
}

func (x *SiteResource) GetRegion() *RegionResource {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *SiteResource) GetOu() *v1.OuResource {
	if x != nil {
		return x.Ou
	}
	return nil
}

func (x *SiteResource) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SiteResource) GetSiteLat() int32 {
	if x != nil {
		return x.SiteLat
	}
	return 0
}

func (x *SiteResource) GetSiteLng() int32 {
	if x != nil {
		return x.SiteLng
	}
	return 0
}

func (x *SiteResource) GetDnsServers() []string {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

func (x *SiteResource) GetDockerRegistries() []string {
	if x != nil {
		return x.DockerRegistries
	}
	return nil
}

func (x *SiteResource) GetMetricsEndpoint() string {
	if x != nil {
		return x.MetricsEndpoint
	}
	return ""
}

func (x *SiteResource) GetHttpProxy() string {
	if x != nil {
		return x.HttpProxy
	}
	return ""
}

func (x *SiteResource) GetHttpsProxy() string {
	if x != nil {
		return x.HttpsProxy
	}
	return ""
}

func (x *SiteResource) GetFtpProxy() string {
	if x != nil {
		return x.FtpProxy
	}
	return ""
}

func (x *SiteResource) GetNoProxy() string {
	if x != nil {
		return x.NoProxy
	}
	return ""
}

func (x *SiteResource) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

var File_location_v1_location_proto protoreflect.FileDescriptor

var file_location_v1_location_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x0e, 0x65, 0x6e, 0x74, 0x2f, 0x6f,
	0x70, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6f, 0x75, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf0, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0xfa, 0x42, 0x1d, 0x72,
	0x1b, 0x28, 0x0f, 0x32, 0x14, 0x5e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2d, 0x5b, 0x30, 0x2d,
	0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x24, 0xd0, 0x01, 0x01, 0xba, 0xa6, 0x49, 0x02,
	0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x06, 0xc2, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x13, 0xc2, 0xa6, 0x49, 0x0f,
	0x12, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49,
	0x02, 0x08, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x06, 0xba,
	0xa6, 0x49, 0x02, 0x08, 0x01, 0x22, 0x99, 0x06, 0x0a, 0x0c, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24, 0xfa, 0x42, 0x1b,
	0x72, 0x19, 0x28, 0x0d, 0x32, 0x12, 0x5e, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x5b, 0x30, 0x2d, 0x39,
	0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x24, 0xd0, 0x01, 0x01, 0xba, 0xa6, 0x49, 0x02, 0x18,
	0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49, 0x02,
	0x08, 0x01, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x06, 0xc2, 0xa6, 0x49, 0x02, 0x08,
	0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x02, 0x6f, 0x75, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x06, 0xc2, 0xa6, 0x49, 0x02, 0x08, 0x01,
	0x52, 0x02, 0x6f, 0x75, 0x12, 0x20, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x1c, 0xfa, 0x42, 0x13, 0x1a, 0x11, 0x18,
	0x80, 0xd2, 0x93, 0xad, 0x03, 0x28, 0x80, 0xae, 0xec, 0xd2, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x01,
	0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x74, 0x12,
	0x37, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x1c, 0xfa, 0x42, 0x13, 0x1a, 0x11, 0x18, 0x80, 0xa4, 0xa7, 0xda, 0x06, 0x28, 0x80,
	0xdc, 0xd8, 0xa5, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x01, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52,
	0x07, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xfa,
	0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x70, 0x01, 0xba, 0xa6, 0x49, 0x02, 0x08,
	0x01, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a,
	0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01,
	0x52, 0x10, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x31, 0x0a, 0x10, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6,
	0x49, 0x02, 0x08, 0x01, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x90, 0x01, 0x01, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x09, 0x68, 0x74, 0x74, 0x70, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x12, 0x2f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x90, 0x01, 0x01, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2b, 0x0a, 0x09, 0x66, 0x74, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x90,
	0x01, 0x01, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x08, 0x66, 0x74, 0x70, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x12, 0x21, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52, 0x07, 0x6e, 0x6f,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x22, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0xa6, 0x49, 0x02, 0x08, 0x01, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x06, 0xba, 0xa6, 0x49, 0x02, 0x08,
	0x01, 0x42, 0x7d, 0x5a, 0x7b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x6f, 0x6e, 0x65, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x6d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x2d, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_location_v1_location_proto_rawDescOnce sync.Once
	file_location_v1_location_proto_rawDescData = file_location_v1_location_proto_rawDesc
)

func file_location_v1_location_proto_rawDescGZIP() []byte {
	file_location_v1_location_proto_rawDescOnce.Do(func() {
		file_location_v1_location_proto_rawDescData = protoimpl.X.CompressGZIP(file_location_v1_location_proto_rawDescData)
	})
	return file_location_v1_location_proto_rawDescData
}

var file_location_v1_location_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_location_v1_location_proto_goTypes = []interface{}{
	(*RegionResource)(nil), // 0: location.v1.RegionResource
	(*SiteResource)(nil),   // 1: location.v1.SiteResource
	(*v1.OuResource)(nil),  // 2: ou.v1.OuResource
}
var file_location_v1_location_proto_depIdxs = []int32{
	0, // 0: location.v1.RegionResource.parent_region:type_name -> location.v1.RegionResource
	0, // 1: location.v1.RegionResource.children:type_name -> location.v1.RegionResource
	0, // 2: location.v1.SiteResource.region:type_name -> location.v1.RegionResource
	2, // 3: location.v1.SiteResource.ou:type_name -> ou.v1.OuResource
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_location_v1_location_proto_init() }
func file_location_v1_location_proto_init() {
	if File_location_v1_location_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_location_v1_location_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_location_v1_location_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_location_v1_location_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_location_v1_location_proto_goTypes,
		DependencyIndexes: file_location_v1_location_proto_depIdxs,
		MessageInfos:      file_location_v1_location_proto_msgTypes,
	}.Build()
	File_location_v1_location_proto = out.File
	file_location_v1_location_proto_rawDesc = nil
	file_location_v1_location_proto_goTypes = nil
	file_location_v1_location_proto_depIdxs = nil
}
