datasource:
    NoCloud:
        meta-data: |
            instance-id: l-eadfbe
        user-data: |
            #cloud-config
            ntp:
              enabled: true
              ntp_client: systemd-timesyncd
              servers: [ ntp1.test,ntp2.test ]
            write_files:
              - path: /etc/pki/ca-trust/source/anchors/orch-ca.crt # CA cert path used by BMAs and all system-level services
                content: |
                 -----BEGIN CERTIFICATE-----
                 MIIFYTCCA0mgAwIBAgIRAKbmACDFdpXWP890dsFbSaUwDQYJKoZIhvcNAQELBQAw
                 KTELMAkGA1UEBhMCVVMxGjAYBgNVBAoTEUludGVsIENvcnBvcmF0aW9uMB4XDTI1
                 MDEwMjE1NDgyNFoXDTI3MDEwMjE1NDgyNFowKTELMAkGA1UEBhMCVVMxGjAYBgNV
                 BAoTEUludGVsIENvcnBvcmF0aW9uMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
                 CgKCAgEAn4WF0VQity1EJWfltgSMGbRDFaX8ML97tcIY8vtWRrLgYYkxN/OUcI4k
                 3NUO9gofa1sZ9FsNqyyPozQtJjd67PnngG5IJgNqjUEVUpwezk0AjuopLxH138NA
                 3PebgKHztYHGA1K69QVBwuvI8PvuJ5ic37YUj4qH4djQdwwlpEMAM3l9OST2Mk64
                 k7yXFkP79bx33Q01q5zreQ6WvzDl5a17mFDjotUhKh0udR4XKn+/8hBEs28ohBZa
                 l4zXIqbw1V1T8baQdJsB5VaItlXJ40IWhYuCh5NtW71toFcePWP/ef+LwjvwZYo0
                 iPB72mxoRACmL8z7vpFD71Sdn6mBDhI34wMXYhwLtU+P7ySGvsS2PQWHggYsQdbv
                 74IBtIBVmt5nrjTAJzaWKDQSz2u3iJvct/CnfS8wp4xjH53qeSqp0ToPwqNy0iQF
                 /z2uLn//eIyc//pbe59zehrN09SqxCGJhQr7CdoxO/PC6ZtemKg28WSl8iSaBvvp
                 jGS7Kaj5RPuRN3Ms1RymJV0FuMMdNfy7kn4KmPYVl4y6CRcD+orCDj3RTsycEP6c
                 f/ulT2NzX6k8wJBq3yOjUim54HaPnSbUEmmhJnnrHyVqtHOv4IgJgr/F5Bjyv8+o
                 Hp5uyL/oidLaj7bO2rsNWrkJawpuWs3gr+aheesYHzBvKJMttmMCAwEAAaOBgzCB
                 gDAOBgNVHQ8BAf8EBAMCAqQwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDwYDVR0TAQH/
                 BAUwAwEB/zAdBgNVHQ4EFgQUP5dseOrhR0SEA1eJXvDazoI/5ogwKQYDVR0RBCIw
                 IIINa2luZC5pbnRlcm5hbIIPKi5raW5kLmludGVybmFsMA0GCSqGSIb3DQEBCwUA
                 A4ICAQBfyjP6vxpMHSPHn1Buz4+TZa8an0knz+0iAuLUYyUSBTNw6JCwcvQ0fVIZ
                 gYXjyJZ16KhpvvygoL78CR72aC/TayeJHAwtsGWLLh1PXXtdZ36x/5SoedVLbChA
                 D0HFRaFYzSlMd5yja8ECYUKv+qyb5WhhE+8qAct2h7BHG2RqzGru8U8I52WIXE1O
                 WUb+EL+4TbWc3ARNpFER9HAy3ZXuUQax+tcPVSRDFpGcAFULjRFz8MyJ1hp9h3eX
                 HwbitJvn/tmEP2tuIPUNN4yrYP3fpFJhjIYOrR2e7OaVRdJZMyw6vFHsceRNw0mv
                 3O4Fa/O3bO9v9p/PHJlQMBqo8Tx8wYYnsRtpTxipwleKxBv+NtQw11g8Twh23ngQ
                 h6O1i3pKst5eB6IJV5s5tXHdMKj2tk0iJcZ/BuZk9iRWguSgX3Qyb+1eUgbn4Ypa
                 rLySufMbDv+LzxwTvQ7xWjVerhgiD7PAxNl0vCAN+rvpUonhDdBtjN8PIG0cjCRx
                 wlEyL3+eQa58bIAxDRc97UmxUdhbjKGcL5E9JMR8t6XpFj+UKiW90zxx7ckLgyh+
                 3+6q7nWtoAGeX1kZqBCc9idN1+0wp9F3xlG7VoVCtAf8rhNRA1l/3rpHb5ACfSrb
                 FUiNbT1AeeTP59OwEBIOHNWAq58TBYTVItg7Sjqc6L2eavSWwA==
                 -----END CERTIFICATE-----
              - path: /etc/intel_edge_node/orch-ca-cert/orch-ca.crt # CA cert path used by Prometheus
                content: |
                 -----BEGIN CERTIFICATE-----
                 MIIFYTCCA0mgAwIBAgIRAKbmACDFdpXWP890dsFbSaUwDQYJKoZIhvcNAQELBQAw
                 KTELMAkGA1UEBhMCVVMxGjAYBgNVBAoTEUludGVsIENvcnBvcmF0aW9uMB4XDTI1
                 MDEwMjE1NDgyNFoXDTI3MDEwMjE1NDgyNFowKTELMAkGA1UEBhMCVVMxGjAYBgNV
                 BAoTEUludGVsIENvcnBvcmF0aW9uMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
                 CgKCAgEAn4WF0VQity1EJWfltgSMGbRDFaX8ML97tcIY8vtWRrLgYYkxN/OUcI4k
                 3NUO9gofa1sZ9FsNqyyPozQtJjd67PnngG5IJgNqjUEVUpwezk0AjuopLxH138NA
                 3PebgKHztYHGA1K69QVBwuvI8PvuJ5ic37YUj4qH4djQdwwlpEMAM3l9OST2Mk64
                 k7yXFkP79bx33Q01q5zreQ6WvzDl5a17mFDjotUhKh0udR4XKn+/8hBEs28ohBZa
                 l4zXIqbw1V1T8baQdJsB5VaItlXJ40IWhYuCh5NtW71toFcePWP/ef+LwjvwZYo0
                 iPB72mxoRACmL8z7vpFD71Sdn6mBDhI34wMXYhwLtU+P7ySGvsS2PQWHggYsQdbv
                 74IBtIBVmt5nrjTAJzaWKDQSz2u3iJvct/CnfS8wp4xjH53qeSqp0ToPwqNy0iQF
                 /z2uLn//eIyc//pbe59zehrN09SqxCGJhQr7CdoxO/PC6ZtemKg28WSl8iSaBvvp
                 jGS7Kaj5RPuRN3Ms1RymJV0FuMMdNfy7kn4KmPYVl4y6CRcD+orCDj3RTsycEP6c
                 f/ulT2NzX6k8wJBq3yOjUim54HaPnSbUEmmhJnnrHyVqtHOv4IgJgr/F5Bjyv8+o
                 Hp5uyL/oidLaj7bO2rsNWrkJawpuWs3gr+aheesYHzBvKJMttmMCAwEAAaOBgzCB
                 gDAOBgNVHQ8BAf8EBAMCAqQwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDwYDVR0TAQH/
                 BAUwAwEB/zAdBgNVHQ4EFgQUP5dseOrhR0SEA1eJXvDazoI/5ogwKQYDVR0RBCIw
                 IIINa2luZC5pbnRlcm5hbIIPKi5raW5kLmludGVybmFsMA0GCSqGSIb3DQEBCwUA
                 A4ICAQBfyjP6vxpMHSPHn1Buz4+TZa8an0knz+0iAuLUYyUSBTNw6JCwcvQ0fVIZ
                 gYXjyJZ16KhpvvygoL78CR72aC/TayeJHAwtsGWLLh1PXXtdZ36x/5SoedVLbChA
                 D0HFRaFYzSlMd5yja8ECYUKv+qyb5WhhE+8qAct2h7BHG2RqzGru8U8I52WIXE1O
                 WUb+EL+4TbWc3ARNpFER9HAy3ZXuUQax+tcPVSRDFpGcAFULjRFz8MyJ1hp9h3eX
                 HwbitJvn/tmEP2tuIPUNN4yrYP3fpFJhjIYOrR2e7OaVRdJZMyw6vFHsceRNw0mv
                 3O4Fa/O3bO9v9p/PHJlQMBqo8Tx8wYYnsRtpTxipwleKxBv+NtQw11g8Twh23ngQ
                 h6O1i3pKst5eB6IJV5s5tXHdMKj2tk0iJcZ/BuZk9iRWguSgX3Qyb+1eUgbn4Ypa
                 rLySufMbDv+LzxwTvQ7xWjVerhgiD7PAxNl0vCAN+rvpUonhDdBtjN8PIG0cjCRx
                 wlEyL3+eQa58bIAxDRc97UmxUdhbjKGcL5E9JMR8t6XpFj+UKiW90zxx7ckLgyh+
                 3+6q7nWtoAGeX1kZqBCc9idN1+0wp9F3xlG7VoVCtAf8rhNRA1l/3rpHb5ACfSrb
                 FUiNbT1AeeTP59OwEBIOHNWAq58TBYTVItg7Sjqc6L2eavSWwA==
                 -----END CERTIFICATE-----
              - path: /etc/lp/node/agent_variables
                content: |
                 CLUSTER_ORCH_URL=cluster.kind.internal
                 HW_INVENTORY_URL=infra.test
                 NODE_ONBOARDING_ENABLED=true
                 NODE_ONBOARDING_URL=infra.test
                 NODE_ONBOARDING_HEARTBEAT=10s
                 NODE_ACCESS_URL=keycloak.test
                 NODE_RS_URL=release-svc.test
                 CADDY_APT_PROXY_URL=file-server.test
                 CADDY_APT_PROXY_PORT=1234
                 CADDY_REGISTRY_PROXY_URL=registry-svc.test
                 CADDY_REGISTRY_PROXY_PORT=1234
                 OBSERVABILITY_LOGGING_URL=obs.test
                 OBSERVABILITY_LOGGING_PORT=1234
                 OBSERVABILITY_METRICS_URL=metrics.test
                 OBSERVABILITY_METRICS_PORT=5678
                 UPDATE_SERVICE_URL=update.test
                 TELEMETRY_MANAGER_URL=telemetry.test:1234
              - path: /etc/hosts
                content: |
                 127.0.0.1 localhost localhost.localdomain
                 ::1 localhost localhost.localdomain ipv6-localhost ipv6-loopback
                 127.0.0.1 localhost.internal localhost
                 1.1.1.1 a.test
                 2.2.2.2 b.test

            runcmd:
              - |
                grep -qF "http_proxy" /etc/environment || echo http_proxy=http-proxy.test >> /etc/environment
                grep -qF "https_proxy" /etc/environment || echo https_proxy=https-proxy.test >> /etc/environment
                grep -qF "ftp_proxy" /etc/environment || echo ftp_proxy=ftp-proxy.test >> /etc/environment
                grep -qF "socks_server" /etc/environment || echo socks_proxy=socks-server.test >> /etc/environment
                grep -qF "no_proxy" /etc/environment || echo no_proxy=no-proxy.test >> /etc/environment
                . /etc/environment
                export http_proxy https_proxy ftp_proxy socks_server no_proxy
                cd /etc/pki/ca-trust/source/anchors
                curl -o tmp.zip https://certificates.intel.com/repository/certificates/IntelSHA2RootChain-Base64.zip
                unzip tmp.zip && rm -f tmp.zip

                update-ca-trust

                systemctl restart caddy.service # workaround for caddy issue. Remove the line once Image is ready with caddy changes.
                SERVICES=("caddy.service" "node-agent.service" "cluster-agent.service" "hardware-discovery-agent.service" "platform-observability-collector.service" "platform-observability-health-check.service" "platform-observability-logging.service" "platform-observability-metrics.service" "platform-telemetry-agent.service" "platform-update-agent.service" "rasdaemon.service")
                for SERVICE in "${SERVICES[@]}"
                do
                    #enable and start the services one after other
                    systemctl enable "$SERVICE"
                    systemctl start  "$SERVICE" &
                done

                present_boot=$(efibootmgr | grep -i "Bootcurrent" | awk '{print $2}')
                while IFS= read -r boot_part_number; do
                    if [[ "$boot_part_number" = "$present_boot" ]]; then
                        continue;
                    else
                        efibootmgr -b "$boot_part_number" -B
                    fi
                done < <(efibootmgr | grep -i ubuntu | awk '{print $1}'| cut -c 5-8 )

                while IFS= read -r boot_part_number; do
                    last_char="${boot_part_number: -1}"
                    # Check if the last character is not an asterisk ,make it activate
                    if [ "$last_char" != "*" ]; then
                        efibootmgr -b "$boot_part_number" -a
                    fi
                done < <(efibootmgr | grep "Boot" | grep -i -v -E "BootCurrent|BootOrder" | awk '{print $1}' | cut -c 5-9)

                #enabling firewall
                iptables -A INPUT -i lo -j ACCEPT
                iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
                iptables -P INPUT DROP
                iptables -P FORWARD DROP
                iptables -P OUTPUT ACCEPT
                iptables -A INPUT -p tcp --dport 80 -j ACCEPT
                iptables -A INPUT -p tcp --dport 443 -j ACCEPT
