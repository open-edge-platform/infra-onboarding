# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
---
name: microvisor
version: "0.1" # must stay at 0.1 due to v0.10.0 limitations
global_timeout: 9800
tasks:
  - name: "OS provisioning"
    worker: {{ .DeviceInfoHwMacID }}
    volumes:
      - /dev:/dev
      - /dev/console:/dev/console
      - /lib/firmware:/lib/firmware:ro
    actions:
      - name: "secure-boot-status-flag-read"
        image: {{ .TinkerActionImageSecureBootFlagRead }}
        timeout: 560
        volumes:
          - /:/host:rw
        environment:
          SECURITY_FEATURE_FLAG: "{{ .DeviceInfoSecurityFeature }}"
      - name: "erase-non-removable-disk"
        image: {{ .TinkerActionImageEraseNonRemovableDisk }}
        timeout: 560
      - name: "stream-os-image"
        image: {{ .TinkerActionImageImage2Disk }}
        timeout: 9800
        pid: "host"
        environment:
          IMG_URL: {{ .DeviceInfoOSImageURL }}
          SHA256: {{ .DeviceInfoOsImageSHA256 }}
          COMPRESSED: true
          HTTP_PROXY: {{ .EnvENProxyHTTP }}
          HTTPS_PROXY: {{ .EnvENProxyHTTPS }}
          NO_PROXY: {{ .EnvENProxyNoProxy }}
      - name: "install-cloud-init"
        image: {{ .TinkerActionImageWriteFile }}
        timeout: 90
        environment:
          FS_TYPE: ext4
          DEST_PATH: /etc/cloud/cloud.cfg.d/99_infra.cfg
          UID: 0
          GID: 0
          MODE: "0755"
          DIRMODE: "0755"
          CONTENTS: {{ .CloudInitData }}
{{- if gt (len .CustomConfigs) 0 }}
      - name: "custom-configs"
        image: {{ .TinkerActionImageWriteFile }}
        timeout: 90
        environment:
          FS_TYPE: ext4
          DEST_PATH: /etc/cloud/cloud.cfg.d/custom.cfg
          UID: 0
          GID: 0
          MODE: "0755"
          DIRMODE: "0755"
          CONTENTS: {{ .CustomConfigs }}
{{- if .DeviceInfoIsStandaloneNode }}
      - name: "custom-configs-split"
        image: {{ .TinkerActionImageCexec }}
        timeout: 200
        environment:
          FS_TYPE: ext4
          CHROOT: y
          UPDATE_RESOLV_CONF: true
          HTTP_PROXY: {{ .EnvENProxyHTTP }}
          HTTPS_PROXY: {{ .EnvENProxyHTTPS }}
          NO_PROXY: {{ .EnvENProxyNoProxy }}
          DEFAULT_INTERPRETER: "/bin/sh -c"
          CMD_LINE: |
            awk -v RS='\x1F' 'BEGIN{i=0} {
              fn=sprintf("/etc/cloud/cloud.cfg.d/%02d_infra.cfg", i++);
              print > fn; close(fn); system("chmod 755 " fn)
            }' /etc/cloud/cloud.cfg.d/custom.cfg
            # Process all numbered config files (except 99_infra.cfg)
            curl -sL https://github.com/mikefarah/yq/releases/download/v4.42.1/yq_linux_amd64 -o /tmp/yq
            chmod +x /tmp/yq
            for config_file in /etc/cloud/cloud.cfg.d/[0-9][0-9]_infra.cfg; do
              if [ -f "$config_file" ] && [ "$(basename "$config_file")" != "99_infra.cfg" ]; then
                if grep -q "^write_files:" "$config_file"; then
                  # Get total number of write_files entries
                  total=$(/tmp/yq e '.write_files | length' "$config_file" 2>/dev/null || echo "0")
                  if [ "$total" -gt 0 ]; then
                    # Extract and create files from write_files
                    for i in $(seq 0 $((total-1))); do
                      path=$(/tmp/yq e ".write_files[$i].path" "$config_file" 2>/dev/null)
                      perms=$(/tmp/yq e ".write_files[$i].permissions" "$config_file" 2>/dev/null)
                      content=$(/tmp/yq e -r ".write_files[$i].content" "$config_file" 2>/dev/null)
                      # Set default permissions if not specified
                      [ "$perms" = "null" ] && perms="0644"
                      if [ "$path" != "null" ] && [ -n "$content" ]; then
                        mkdir -p "$(dirname "$path")"
                        echo "$content" > "$path"
                        chmod "$perms" "$path"
                      fi
                    done
                    # Remove write_files section and save back
                    /tmp/yq e 'del(.write_files)' "$config_file" > "${config_file}.tmp" && mv "${config_file}.tmp" "$config_file"
                  fi
                fi
              fi
            done
            # Cleanup
            rm -f /etc/cloud/cloud.cfg.d/custom.cfg /tmp/yq
{{- else }}
      - name: "custom-configs-split"
        image: {{ .TinkerActionImageCexec }}
        timeout: 200
        environment:
          FS_TYPE: ext4
          CHROOT: y
          DEFAULT_INTERPRETER: "/bin/sh -c"
          CMD_LINE: |
            awk -v RS='\x1F' 'BEGIN{i=0} {
              fn=sprintf("/etc/cloud/cloud.cfg.d/%02d_infra.cfg", i++);
              print > fn; close(fn); system("chmod 755 " fn)
            }' /etc/cloud/cloud.cfg.d/custom.cfg
            rm -f /etc/cloud/cloud.cfg.d/custom.cfg
{{- end }}
{{- end }}
      - name: "cloud-init-ds-identity"
        image: {{ .TinkerActionImageWriteFile }}
        timeout: 90
        environment:
          FS_TYPE: ext4
          UID: 0
          GID: 0
          MODE: "0600"
          DIRMODE: "0700"
          DEST_PATH: /etc/cloud/ds-identify.cfg
          CONTENTS: |
            datasource: NoCloud
      - name: "efibootset-for-diskboot"
        image: {{ .TinkerActionImageEfibootset }}
        timeout: 560
      - name: "enable-security-features"
        image: {{ .TinkerActionImageFdeDmv }}
        timeout: 560
        environment:
          ENABLE_ONLY_DMVERITY: "{{- not (eq .DeviceInfoSecurityFeature "SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION") }}"
      - name: "reboot"
        image: public.ecr.aws/l0g8r8j6/tinkerbell/hub/reboot-action:latest
        timeout: 90
        volumes:
          - "/worker:/worker"
