// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: v1/onboarding.proto

package onboardingmgrv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InteractiveOnboardingServiceClient is the client API for InteractiveOnboardingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InteractiveOnboardingServiceClient interface {
	CreateNodes(ctx context.Context, in *CreateNodesRequest, opts ...grpc.CallOption) (*CreateNodesResponse, error)
}

type interactiveOnboardingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInteractiveOnboardingServiceClient(cc grpc.ClientConnInterface) InteractiveOnboardingServiceClient {
	return &interactiveOnboardingServiceClient{cc}
}

func (c *interactiveOnboardingServiceClient) CreateNodes(ctx context.Context, in *CreateNodesRequest, opts ...grpc.CallOption) (*CreateNodesResponse, error) {
	out := new(CreateNodesResponse)
	err := c.cc.Invoke(ctx, "/onboardingmgr.v1.InteractiveOnboardingService/CreateNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InteractiveOnboardingServiceServer is the server API for InteractiveOnboardingService service.
// All implementations should embed UnimplementedInteractiveOnboardingServiceServer
// for forward compatibility
type InteractiveOnboardingServiceServer interface {
	CreateNodes(context.Context, *CreateNodesRequest) (*CreateNodesResponse, error)
}

// UnimplementedInteractiveOnboardingServiceServer should be embedded to have forward compatible implementations.
type UnimplementedInteractiveOnboardingServiceServer struct {
}

func (UnimplementedInteractiveOnboardingServiceServer) CreateNodes(context.Context, *CreateNodesRequest) (*CreateNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNodes not implemented")
}

// UnsafeInteractiveOnboardingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InteractiveOnboardingServiceServer will
// result in compilation errors.
type UnsafeInteractiveOnboardingServiceServer interface {
	mustEmbedUnimplementedInteractiveOnboardingServiceServer()
}

func RegisterInteractiveOnboardingServiceServer(s grpc.ServiceRegistrar, srv InteractiveOnboardingServiceServer) {
	s.RegisterService(&InteractiveOnboardingService_ServiceDesc, srv)
}

func _InteractiveOnboardingService_CreateNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InteractiveOnboardingServiceServer).CreateNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onboardingmgr.v1.InteractiveOnboardingService/CreateNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InteractiveOnboardingServiceServer).CreateNodes(ctx, req.(*CreateNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InteractiveOnboardingService_ServiceDesc is the grpc.ServiceDesc for InteractiveOnboardingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InteractiveOnboardingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "onboardingmgr.v1.InteractiveOnboardingService",
	HandlerType: (*InteractiveOnboardingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNodes",
			Handler:    _InteractiveOnboardingService_CreateNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/onboarding.proto",
}

// NonInteractiveOnboardingServiceClient is the client API for NonInteractiveOnboardingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NonInteractiveOnboardingServiceClient interface {
	// OnboardNodeStream establishes a bidirectional stream between the Edge Node and the Onboarding Manager
	// It allows Edge Node to send stream requests and receive responses
	OnboardNodeStream(ctx context.Context, opts ...grpc.CallOption) (NonInteractiveOnboardingService_OnboardNodeStreamClient, error)
}

type nonInteractiveOnboardingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNonInteractiveOnboardingServiceClient(cc grpc.ClientConnInterface) NonInteractiveOnboardingServiceClient {
	return &nonInteractiveOnboardingServiceClient{cc}
}

func (c *nonInteractiveOnboardingServiceClient) OnboardNodeStream(ctx context.Context, opts ...grpc.CallOption) (NonInteractiveOnboardingService_OnboardNodeStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &NonInteractiveOnboardingService_ServiceDesc.Streams[0], "/onboardingmgr.v1.NonInteractiveOnboardingService/OnboardNodeStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &nonInteractiveOnboardingServiceOnboardNodeStreamClient{stream}
	return x, nil
}

type NonInteractiveOnboardingService_OnboardNodeStreamClient interface {
	Send(*OnboardNodeStreamRequest) error
	Recv() (*OnboardNodeStreamResponse, error)
	grpc.ClientStream
}

type nonInteractiveOnboardingServiceOnboardNodeStreamClient struct {
	grpc.ClientStream
}

func (x *nonInteractiveOnboardingServiceOnboardNodeStreamClient) Send(m *OnboardNodeStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *nonInteractiveOnboardingServiceOnboardNodeStreamClient) Recv() (*OnboardNodeStreamResponse, error) {
	m := new(OnboardNodeStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NonInteractiveOnboardingServiceServer is the server API for NonInteractiveOnboardingService service.
// All implementations should embed UnimplementedNonInteractiveOnboardingServiceServer
// for forward compatibility
type NonInteractiveOnboardingServiceServer interface {
	// OnboardNodeStream establishes a bidirectional stream between the Edge Node and the Onboarding Manager
	// It allows Edge Node to send stream requests and receive responses
	OnboardNodeStream(NonInteractiveOnboardingService_OnboardNodeStreamServer) error
}

// UnimplementedNonInteractiveOnboardingServiceServer should be embedded to have forward compatible implementations.
type UnimplementedNonInteractiveOnboardingServiceServer struct {
}

func (UnimplementedNonInteractiveOnboardingServiceServer) OnboardNodeStream(NonInteractiveOnboardingService_OnboardNodeStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method OnboardNodeStream not implemented")
}

// UnsafeNonInteractiveOnboardingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NonInteractiveOnboardingServiceServer will
// result in compilation errors.
type UnsafeNonInteractiveOnboardingServiceServer interface {
	mustEmbedUnimplementedNonInteractiveOnboardingServiceServer()
}

func RegisterNonInteractiveOnboardingServiceServer(s grpc.ServiceRegistrar, srv NonInteractiveOnboardingServiceServer) {
	s.RegisterService(&NonInteractiveOnboardingService_ServiceDesc, srv)
}

func _NonInteractiveOnboardingService_OnboardNodeStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NonInteractiveOnboardingServiceServer).OnboardNodeStream(&nonInteractiveOnboardingServiceOnboardNodeStreamServer{stream})
}

type NonInteractiveOnboardingService_OnboardNodeStreamServer interface {
	Send(*OnboardNodeStreamResponse) error
	Recv() (*OnboardNodeStreamRequest, error)
	grpc.ServerStream
}

type nonInteractiveOnboardingServiceOnboardNodeStreamServer struct {
	grpc.ServerStream
}

func (x *nonInteractiveOnboardingServiceOnboardNodeStreamServer) Send(m *OnboardNodeStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *nonInteractiveOnboardingServiceOnboardNodeStreamServer) Recv() (*OnboardNodeStreamRequest, error) {
	m := new(OnboardNodeStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NonInteractiveOnboardingService_ServiceDesc is the grpc.ServiceDesc for NonInteractiveOnboardingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NonInteractiveOnboardingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "onboardingmgr.v1.NonInteractiveOnboardingService",
	HandlerType: (*NonInteractiveOnboardingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OnboardNodeStream",
			Handler:       _NonInteractiveOnboardingService_OnboardNodeStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "v1/onboarding.proto",
}
