// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: onboarding.proto

package onboardingmgr

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NodeState represents state of the device as stored in Infra Inventory
type OnboardStreamResponse_NodeState int32

const (
	OnboardStreamResponse_UNSPECIFIED OnboardStreamResponse_NodeState = 0 // Edge Node state is unspecified or unknown
	OnboardStreamResponse_REGISTERED  OnboardStreamResponse_NodeState = 1 // Allow to retry, Node is registered but not yet onboarded
	OnboardStreamResponse_ONBOARDED   OnboardStreamResponse_NodeState = 2 // Edge Node successfully onboarded
)

// Enum value maps for OnboardStreamResponse_NodeState.
var (
	OnboardStreamResponse_NodeState_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "REGISTERED",
		2: "ONBOARDED",
	}
	OnboardStreamResponse_NodeState_value = map[string]int32{
		"UNSPECIFIED": 0,
		"REGISTERED":  1,
		"ONBOARDED":   2,
	}
)

func (x OnboardStreamResponse_NodeState) Enum() *OnboardStreamResponse_NodeState {
	p := new(OnboardStreamResponse_NodeState)
	*p = x
	return p
}

func (x OnboardStreamResponse_NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnboardStreamResponse_NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_onboarding_proto_enumTypes[0].Descriptor()
}

func (OnboardStreamResponse_NodeState) Type() protoreflect.EnumType {
	return &file_onboarding_proto_enumTypes[0]
}

func (x OnboardStreamResponse_NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnboardStreamResponse_NodeState.Descriptor instead.
func (OnboardStreamResponse_NodeState) EnumDescriptor() ([]byte, []int) {
	return file_onboarding_proto_rawDescGZIP(), []int{5, 0}
}

type NodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*NodeData `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"` // Payload data
}

func (x *NodeRequest) Reset() {
	*x = NodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboarding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRequest) ProtoMessage() {}

func (x *NodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onboarding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRequest.ProtoReflect.Descriptor instead.
func (*NodeRequest) Descriptor() ([]byte, []int) {
	return file_onboarding_proto_rawDescGZIP(), []int{0}
}

func (x *NodeRequest) GetPayload() []*NodeData {
	if x != nil {
		return x.Payload
	}
	return nil
}

type NodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   []*NodeData `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`                      // Payload data
	ProjectId string      `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"` // The project_id associated with the Edge Node, identifying the project to which the Edge Node belongs
}

func (x *NodeResponse) Reset() {
	*x = NodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboarding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResponse) ProtoMessage() {}

func (x *NodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onboarding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResponse.ProtoReflect.Descriptor instead.
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return file_onboarding_proto_rawDescGZIP(), []int{1}
}

func (x *NodeResponse) GetPayload() []*NodeData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *NodeResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type NodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hwdata []*HwData `protobuf:"bytes,1,rep,name=hwdata,proto3" json:"hwdata,omitempty"`
}

func (x *NodeData) Reset() {
	*x = NodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboarding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeData) ProtoMessage() {}

func (x *NodeData) ProtoReflect() protoreflect.Message {
	mi := &file_onboarding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeData.ProtoReflect.Descriptor instead.
func (*NodeData) Descriptor() ([]byte, []int) {
	return file_onboarding_proto_rawDescGZIP(), []int{2}
}

func (x *NodeData) GetHwdata() []*HwData {
	if x != nil {
		return x.Hwdata
	}
	return nil
}

type HwData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Serialnum string `protobuf:"bytes,2,opt,name=serialnum,proto3" json:"serialnum,omitempty"`
	MacId     string `protobuf:"bytes,3,opt,name=mac_id,json=macId,proto3" json:"mac_id,omitempty"` // Mac ID of Edge Node
	SutIp     string `protobuf:"bytes,4,opt,name=sut_ip,json=sutIp,proto3" json:"sut_ip,omitempty"` // sutip
}

func (x *HwData) Reset() {
	*x = HwData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboarding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwData) ProtoMessage() {}

func (x *HwData) ProtoReflect() protoreflect.Message {
	mi := &file_onboarding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwData.ProtoReflect.Descriptor instead.
func (*HwData) Descriptor() ([]byte, []int) {
	return file_onboarding_proto_rawDescGZIP(), []int{3}
}

func (x *HwData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *HwData) GetSerialnum() string {
	if x != nil {
		return x.Serialnum
	}
	return ""
}

func (x *HwData) GetMacId() string {
	if x != nil {
		return x.MacId
	}
	return ""
}

func (x *HwData) GetSutIp() string {
	if x != nil {
		return x.SutIp
	}
	return ""
}

// OnboardStreamRequest represents a request sent from Edge Node to the Onboarding Manager
type OnboardStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUID of the Edge Node being onboarded
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// The serial number of the Edge Node
	Serialnum string `protobuf:"bytes,2,opt,name=serialnum,proto3" json:"serialnum,omitempty"`
	// The MAC ID of the Edge Node
	MacId string `protobuf:"bytes,3,opt,name=mac_id,json=macId,proto3" json:"mac_id,omitempty"`
	// The IP (IPv4 pattern) of the Edge Node
	HostIp string `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
}

func (x *OnboardStreamRequest) Reset() {
	*x = OnboardStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboarding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardStreamRequest) ProtoMessage() {}

func (x *OnboardStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onboarding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardStreamRequest.ProtoReflect.Descriptor instead.
func (*OnboardStreamRequest) Descriptor() ([]byte, []int) {
	return file_onboarding_proto_rawDescGZIP(), []int{4}
}

func (x *OnboardStreamRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *OnboardStreamRequest) GetSerialnum() string {
	if x != nil {
		return x.Serialnum
	}
	return ""
}

func (x *OnboardStreamRequest) GetMacId() string {
	if x != nil {
		return x.MacId
	}
	return ""
}

func (x *OnboardStreamRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

// OnboardStreamResponse represents a response sent from the Onboarding Manager to a Edge Node
// over the bidirectional stream
type OnboardStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *status.Status                  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                                                            // The status of the onboarding request
	NodeState    OnboardStreamResponse_NodeState `protobuf:"varint,2,opt,name=node_state,json=nodeState,proto3,enum=onboardingmgr.OnboardStreamResponse_NodeState" json:"node_state,omitempty"` // The current state of the device as stored in Infra Inventory
	ClientId     string                          `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`                                                        // The client_id provided to the node upon successful onboarding
	ClientSecret string                          `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`                                            // The client_secret provided to the node upon successful onboarding
	ProjectId    string                          `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`                                                     // The project_id associated with the node, identifying the project to which the node belongs
}

func (x *OnboardStreamResponse) Reset() {
	*x = OnboardStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboarding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardStreamResponse) ProtoMessage() {}

func (x *OnboardStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onboarding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardStreamResponse.ProtoReflect.Descriptor instead.
func (*OnboardStreamResponse) Descriptor() ([]byte, []int) {
	return file_onboarding_proto_rawDescGZIP(), []int{5}
}

func (x *OnboardStreamResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *OnboardStreamResponse) GetNodeState() OnboardStreamResponse_NodeState {
	if x != nil {
		return x.NodeState
	}
	return OnboardStreamResponse_UNSPECIFIED
}

func (x *OnboardStreamResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OnboardStreamResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OnboardStreamResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

var File_onboarding_proto protoreflect.FileDescriptor

var file_onboarding_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x6d, 0x67,
	0x72, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x6d, 0x67, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x60, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x6d, 0x67, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x77, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x6d, 0x67, 0x72, 0x2e, 0x48, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x68, 0x77, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xa4, 0x02, 0x0a, 0x06, 0x48, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a,
	0xfa, 0x42, 0x17, 0x72, 0x15, 0x32, 0x13, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x7b, 0x35, 0x2c, 0x32, 0x30, 0x7d, 0x24, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x6e, 0x75, 0x6d, 0x12, 0x47, 0x0a, 0x06, 0x6d, 0x61, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xfa, 0x42, 0x2d, 0x72, 0x2b, 0x32, 0x29, 0x5e, 0x28,
	0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x32, 0x7d, 0x28, 0x5b,
	0x2d, 0x3a, 0x5d, 0x29, 0x29, 0x7b, 0x35, 0x7d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x41,
	0x2d, 0x46, 0x5d, 0x7b, 0x32, 0x7d, 0x24, 0x52, 0x05, 0x6d, 0x61, 0x63, 0x49, 0x64, 0x12, 0x79,
	0x0a, 0x06, 0x73, 0x75, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x62,
	0xfa, 0x42, 0x5f, 0x72, 0x5d, 0x32, 0x5b, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x32, 0x35,
	0x5b, 0x30, 0x2d, 0x35, 0x5d, 0x7c, 0x32, 0x5b, 0x30, 0x2d, 0x34, 0x5d, 0x5b, 0x30, 0x2d, 0x39,
	0x5d, 0x7c, 0x5b, 0x30, 0x31, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x30, 0x2d, 0x39,
	0x5d, 0x3f, 0x29, 0x5c, 0x2e, 0x29, 0x7b, 0x33, 0x7d, 0x28, 0x3f, 0x3a, 0x32, 0x35, 0x5b, 0x30,
	0x2d, 0x35, 0x5d, 0x7c, 0x32, 0x5b, 0x30, 0x2d, 0x34, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c,
	0x5b, 0x30, 0x31, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x3f,
	0x29, 0x24, 0x52, 0x05, 0x73, 0x75, 0x74, 0x49, 0x70, 0x22, 0xb4, 0x02, 0x0a, 0x14, 0x4f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x32, 0x13, 0x5e, 0x5b, 0x41, 0x2d,
	0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x35, 0x2c, 0x32, 0x30, 0x7d, 0x24, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x6e, 0x75, 0x6d, 0x12, 0x47, 0x0a, 0x06, 0x6d, 0x61,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xfa, 0x42, 0x2d, 0x72,
	0x2b, 0x32, 0x29, 0x5e, 0x28, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x41, 0x2d, 0x46, 0x5d,
	0x7b, 0x32, 0x7d, 0x28, 0x5b, 0x2d, 0x3a, 0x5d, 0x29, 0x29, 0x7b, 0x35, 0x7d, 0x5b, 0x30, 0x2d,
	0x39, 0x61, 0x2d, 0x66, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x32, 0x7d, 0x24, 0x52, 0x05, 0x6d, 0x61,
	0x63, 0x49, 0x64, 0x12, 0x7b, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x62, 0xfa, 0x42, 0x5f, 0x72, 0x5d, 0x32, 0x5b, 0x5e, 0x28, 0x3f,
	0x3a, 0x28, 0x3f, 0x3a, 0x32, 0x35, 0x5b, 0x30, 0x2d, 0x35, 0x5d, 0x7c, 0x32, 0x5b, 0x30, 0x2d,
	0x34, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x30, 0x31, 0x5d, 0x3f, 0x5b, 0x30, 0x2d,
	0x39, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x3f, 0x29, 0x5c, 0x2e, 0x29, 0x7b, 0x33, 0x7d, 0x28,
	0x3f, 0x3a, 0x32, 0x35, 0x5b, 0x30, 0x2d, 0x35, 0x5d, 0x7c, 0x32, 0x5b, 0x30, 0x2d, 0x34, 0x5d,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x30, 0x31, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x3f, 0x29, 0x24, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70,
	0x22, 0xb0, 0x02, 0x0a, 0x15, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x6d, 0x67, 0x72, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x45,
	0x44, 0x10, 0x02, 0x32, 0x68, 0x0a, 0x1c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x6d,
	0x67, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x6d, 0x67, 0x72, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x87, 0x01,
	0x0a, 0x1f, 0x4e, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x64, 0x0a, 0x11, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x6d, 0x67, 0x72, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x6d, 0x67, 0x72, 0x2e, 0x4f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x9d, 0x01, 0x5a, 0x9a, 0x01, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x6f, 0x6e, 0x65, 0x2d, 0x69, 0x6e,
	0x74, 0x65, 0x6c, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x6d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x2d, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x69, 0x6d, 0x2d, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x6d, 0x67, 0x72, 0x3b, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x6d, 0x67, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_onboarding_proto_rawDescOnce sync.Once
	file_onboarding_proto_rawDescData = file_onboarding_proto_rawDesc
)

func file_onboarding_proto_rawDescGZIP() []byte {
	file_onboarding_proto_rawDescOnce.Do(func() {
		file_onboarding_proto_rawDescData = protoimpl.X.CompressGZIP(file_onboarding_proto_rawDescData)
	})
	return file_onboarding_proto_rawDescData
}

var file_onboarding_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_onboarding_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_onboarding_proto_goTypes = []interface{}{
	(OnboardStreamResponse_NodeState)(0), // 0: onboardingmgr.OnboardStreamResponse.NodeState
	(*NodeRequest)(nil),                  // 1: onboardingmgr.NodeRequest
	(*NodeResponse)(nil),                 // 2: onboardingmgr.NodeResponse
	(*NodeData)(nil),                     // 3: onboardingmgr.NodeData
	(*HwData)(nil),                       // 4: onboardingmgr.HwData
	(*OnboardStreamRequest)(nil),         // 5: onboardingmgr.OnboardStreamRequest
	(*OnboardStreamResponse)(nil),        // 6: onboardingmgr.OnboardStreamResponse
	(*status.Status)(nil),                // 7: google.rpc.Status
}
var file_onboarding_proto_depIdxs = []int32{
	3, // 0: onboardingmgr.NodeRequest.payload:type_name -> onboardingmgr.NodeData
	3, // 1: onboardingmgr.NodeResponse.payload:type_name -> onboardingmgr.NodeData
	4, // 2: onboardingmgr.NodeData.hwdata:type_name -> onboardingmgr.HwData
	7, // 3: onboardingmgr.OnboardStreamResponse.status:type_name -> google.rpc.Status
	0, // 4: onboardingmgr.OnboardStreamResponse.node_state:type_name -> onboardingmgr.OnboardStreamResponse.NodeState
	1, // 5: onboardingmgr.InteractiveOnboardingService.CreateNodes:input_type -> onboardingmgr.NodeRequest
	5, // 6: onboardingmgr.NonInteractiveOnboardingService.OnboardNodeStream:input_type -> onboardingmgr.OnboardStreamRequest
	2, // 7: onboardingmgr.InteractiveOnboardingService.CreateNodes:output_type -> onboardingmgr.NodeResponse
	6, // 8: onboardingmgr.NonInteractiveOnboardingService.OnboardNodeStream:output_type -> onboardingmgr.OnboardStreamResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_onboarding_proto_init() }
func file_onboarding_proto_init() {
	if File_onboarding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_onboarding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboarding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboarding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboarding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboarding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnboardStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboarding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnboardStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_onboarding_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_onboarding_proto_goTypes,
		DependencyIndexes: file_onboarding_proto_depIdxs,
		EnumInfos:         file_onboarding_proto_enumTypes,
		MessageInfos:      file_onboarding_proto_msgTypes,
	}.Build()
	File_onboarding_proto = out.File
	file_onboarding_proto_rawDesc = nil
	file_onboarding_proto_goTypes = nil
	file_onboarding_proto_depIdxs = nil
}
