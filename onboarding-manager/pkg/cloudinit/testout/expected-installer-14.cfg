#cloud-config
merge_how: 'dict(recurse_array,no_replace)+list(append)'
network:
  version: 2
  renderer: networkd
  ethernets:
    id0:
      match:
        macaddress: aa:bb:cc:dd:ee:ff
      dhcp-identifier: mac
      dhcp4: true
      dhcp4-overrides:
        use-dns: true
users:
  - default
  - name: user
    shell: /bin/bash
    home: /home/user
    groups: sudo
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - sshkey
ntp:
  enabled: true
  ntp_client: systemd-timesyncd
  servers: [ ntp1.org,ntp2.org ]
write_files:
  - path: /opt/intel_edge_node/bootmgr.sh
    permissions: '0755'
    content: |
      #!/bin/bash

      present_boot=$(efibootmgr | grep -i "Bootcurrent" | awk '{print $2}')
      while IFS= read -r boot_part_number; do
          if [[ "$boot_part_number" = "$present_boot" ]]; then
              continue;
          else
              efibootmgr -b "$boot_part_number" -B
          fi
      done < <(efibootmgr | grep -iE "EFI Fixed|ubuntu" | awk '{print $1}'|  sed 's/Boot//;s/\*//')

      while IFS= read -r boot_part_number; do
          last_char="${boot_part_number: -1}"
          # Check if the last character is not an asterisk ,make it activate
          if [ "$last_char" != "*" ]; then
              efibootmgr -b "$boot_part_number" -a
          fi
      done < <(efibootmgr | grep "Boot" | grep -i -v -E "BootCurrent|BootOrder" | awk '{print $1}' | cut -c 5-9)
  - path: /opt/edge-node/node/check_vpro_ism_capable.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      if rpc amtinfo | grep -iq "AMT Pro Corporate" > /dev/null; then          
          PMA_ENABLE=true
      else
          PMA_ENABLE=false
      fi
      echo "$PMA_ENABLE"
runcmd:
  - |
    grep -qF "http_proxy" /etc/environment || echo http_proxy=http-proxy.test >> /etc/environment
    grep -qF "https_proxy" /etc/environment || echo https_proxy=https-proxy.test >> /etc/environment
    grep -qF "ftp_proxy" /etc/environment || echo ftp_proxy=ftp-proxy.test >> /etc/environment
    grep -qF "socks_server" /etc/environment || echo socks_proxy=socks.test >> /etc/environment
    grep -qF "no_proxy" /etc/environment || echo no_proxy=no-proxy.test >> /etc/environment
    . /etc/environment
    export http_proxy https_proxy ftp_proxy socks_server no_proxy
    # When local account is set, start sshd service in dev/production mode
    systemctl enable sshd
    systemctl start sshd
  - bash /opt/intel_edge_node/bootmgr.sh
