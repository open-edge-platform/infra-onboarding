// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package onboardingmgr;

import "google/rpc/status.proto";
import "validate/validate.proto";

option go_package = "github.com/intel-innersource/frameworks.edge.one-intel-edge.maestro-infra.eim-onboarding/onboarding-manager/tree/main/api/grpc/onboardingmgr;onboardingmgr";

//Artifact & Node Endpoints towards Inventory Manager
service InteractiveOnboardingService {
  rpc CreateNodes(NodeRequest) returns (NodeResponse) {}
}

service NonInteractiveOnboardingService {
  // OnboardNodeStream establishes a bidirectional stream between the EN and the OM
  // It allows EN to send stream requests and receive responses
  rpc OnboardNodeStream(stream OnboardStreamRequest) returns (stream OnboardStreamResponse) {}
}

message NodeRequest {
  repeated NodeData payload = 1; // Payload data
}

message NodeResponse {
  repeated NodeData payload = 1; // Payload data
  string project_id = 2; // The project_id associated with the node, identifying the project to which the node belongs
}

message NodeData {
  repeated HwData hwdata = 1;
}

message HwData {
  string uuid = 1 [(validate.rules).string.uuid = true];
  string serialnum = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9]{5,20}$"];
  string mac_id = 3 [(validate.rules).string.pattern = "^([0-9a-fA-F]{2}([-:])){5}[0-9a-fA-F]{2}$"]; // Mac ID of Node
  string sut_ip = 4 [(validate.rules).string.pattern = "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"]; // sutip
}

// OnboardStreamRequest represents a request sent from EN to the OM
message OnboardStreamRequest {
  // The UUID of the EN being onboarded
  string uuid = 1 [(validate.rules).string.uuid = true];
  // The serial number of the EN
  string serialnum = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9]{5,20}$"];
  // The MAC ID of the EN
  string mac_id = 3 [(validate.rules).string.pattern = "^([0-9a-fA-F]{2}([-:])){5}[0-9a-fA-F]{2}$"];
  // The IP (IPv4 pattern) of the EN
  string host_ip = 4 [(validate.rules).string.pattern = "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"];
}

// OnboardStreamResponse represents a response sent from the OM to a EN
// over the bidirectional stream
message OnboardStreamResponse {
  // NodeState represents state of the device as stored in EIM Inventory
  enum NodeState {
    UNSPECIFIED = 0; // Node state is unspecified or unknown
    REGISTERED = 1; // Allow to retry, Node is registered but not yet onboarded
    ONBOARDED = 2; // Node successfully onboarded
  }
  google.rpc.Status status = 1; // The status of the onboarding request
  NodeState node_state = 2; // The current state of the device as stored in EIM Inventory
  string client_id = 3; // The client_id provided to the node upon successful onboarding
  string client_secret = 4; // The client_secret provided to the node upon successful onboarding
  string project_id = 5; // The project_id associated with the node, identifying the project to which the node belongs
}
